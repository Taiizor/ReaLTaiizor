<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> class.</summary>
      <param name="oldSurface">The design surface that is losing activation.</param>
      <param name="newSurface">The design surface that is gaining activation.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>Gets the design surface that is gaining activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is gaining activation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>Gets the design surface that is losing activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is losing activation.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e">An <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Provides a user interface for editing arrays at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.ComponentModel.Design.ArrayEditor" /> using the specified data type for the array.</summary>
      <param name="type">The data type of the items in the array.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection is designed to contain.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the data type that the collection is designed to contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Gets the items in the array.</summary>
      <param name="editValue">The array from which to retrieve the items.</param>
      <returns>An array consisting of the items within the specified array. If the object specified in the <paramref name="editValue" /> parameter is not an array, a new empty object is returned.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the items in the array.</summary>
      <param name="editValue">The array to set the items to.</param>
      <param name="value">The array of objects to set as the items of the array.</param>
      <returns>An instance of the new array. If the object specified by the <paramref name="editValue" /> parameter is not an array, the object specified by the <paramref name="editValue" /> parameter is returned.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>Provides a user interface for editing binary data.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.BinaryEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">The object to edit the value of.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>An <see langword="enum" /> value indicating the provided editing style.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>Displays byte arrays in hexadecimal, ANSI, and Unicode formats.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ByteViewer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>Gets the bytes in the buffer.</summary>
      <returns>The unsigned byte array reference.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>Gets the display mode for the control.</summary>
      <returns>The display mode that this control uses. The returned value is defined in <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>Writes the raw data from the data buffer to a file.</summary>
      <param name="path">The file path to save to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
      <exception cref="T:System.IO.IOException">The file write failed.</exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>Handles the <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> event on the <see cref="T:System.ComponentModel.Design.ByteViewer" /> control's <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>Sets the byte array to display in the viewer.</summary>
      <param name="bytes">The byte array to display.</param>
      <exception cref="T:System.ArgumentNullException">The specified byte array is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>Sets the current display mode.</summary>
      <param name="mode">The display mode to set.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified display mode is not from the <see cref="T:System.ComponentModel.Design.DisplayMode" /> enumeration.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>Sets the file to display in the viewer.</summary>
      <param name="path">The file path to load from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
      <exception cref="T:System.IO.IOException">The file load failed.</exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is <see langword="Write" /> or <see langword="ReadWrite" /> and the file or directory is set for read-only access.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>Sets the current line for the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> view.</summary>
      <param name="line">The current line to display from.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Provides a user interface that can edit most types of collections at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> class using the specified collection type.</summary>
      <param name="type">The type of the collection for this editor to edit.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Cancels changes to the collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Indicates whether original members of the collection can be removed.</summary>
      <param name="value">The value to remove.</param>
      <returns>
        <see langword="true" /> if it is permissible to remove this value from the collection; otherwise, <see langword="false" />. The default implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>
        <see langword="true" /> if it multiple collection members can be selected at the same time; otherwise, <see langword="false" />. By default, this returns <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Provides a modal dialog box for editing the contents of a collection using a <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.CollectionEditor" /> to use for editing the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Indicates whether you can remove the original members of the collection.</summary>
      <param name="value">The value to remove.</param>
      <returns>
        <see langword="true" /> if it is permissible to remove this value from the collection; otherwise, <see langword="false" />. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>
        <see langword="true" /> if it multiple collection members can be selected at the same time; otherwise, <see langword="false" />. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or <see langword="null" /> if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <param name="itemType">The type of item to create.</param>
      <returns>A new instance of the specified object, or <see langword="null" /> if the user chose to cancel the creation of this instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Displays the specified exception to the user.</summary>
      <param name="e">The exception to display.</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Gets or sets the collection object to edit.</summary>
      <returns>The collection object to edit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>An instance of the service, or <see langword="null" /> if the service cannot be found.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Gets or sets the array of items for this form to display.</summary>
      <returns>An array of objects for the form to display.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Gets the available item types that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Provides an opportunity to perform processing when a collection value has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Shows the dialog box for the collection editor using the specified <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> object.</summary>
      <param name="edSvc">An <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> that can be used to show the dialog box.</param>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> that indicates the result code returned from the dialog box.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or <see langword="null" /> if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection contains.</summary>
      <returns>The data type of the items in the collection, or an <see cref="T:System.Object" /> if no <see langword="Item" /> property can be located on the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <param name="itemType">The type of item to create.</param>
      <returns>A new instance of the specified object.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can contain.</summary>
      <returns>An array of data types that this collection can contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services can be obtained.</param>
      <param name="value">The object to edit the value of.</param>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program did not succeed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Retrieves the display text for the given list item.</summary>
      <param name="value">The list item for which to retrieve display text.</param>
      <returns>The display text for <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the edit style used by the <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Gets an array of objects containing the specified collection.</summary>
      <param name="editValue">The collection to edit.</param>
      <returns>An array containing the collection objects, or an empty object array if the specified collection does not inherit from <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Returns a list containing the given object</summary>
      <param name="instance">An <see cref="T:System.Collections.ArrayList" /> returned as an object.</param>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains the individual objects to be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>An instance of the service, or <see langword="null" /> if the service cannot be found.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.</summary>
      <returns>The Help keyword to display the Help topic or topic list for when Help is requested from the editor.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Gets the available types of items that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the specified array as the items of the collection.</summary>
      <param name="editValue">The collection to edit.</param>
      <param name="value">An array of objects to set as the collection items.</param>
      <returns>The newly created collection object or, otherwise, the collection indicated by the <paramref name="editValue" /> parameter.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Displays the default Help topic for the collection editor.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>Specifies the type of object-bound smart tag with respect to how it was associated with the component.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>Both types of smart tags.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>Pull model smart tags only.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>Push model smart tags only.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Extends the design mode behavior of a component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Gets the design-time action lists supported by the component associated with the designer.</summary>
      <returns>The design-time action lists supported by the component associated with the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Gets the collection of components associated with the component managed by the designer.</summary>
      <returns>The components that are associated with the component managed by the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Gets the component this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program failed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Attempts to retrieve the specified type of service from the design mode site of the designer's component.</summary>
      <param name="serviceType">The type of service to request.</param>
      <returns>An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Gets an attribute that indicates the type of inheritance of the associated component.</summary>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Gets a value indicating whether this component is inherited.</summary>
      <returns>
        <see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the specified component.</summary>
      <param name="component">The component for this designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Reinitializes an existing component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be <see langword="null" /> if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be <see langword="null" /> if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Initializes the settings for an imported component that is already initialized to settings other than the defaults.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
      <param name="toInvoke">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</param>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Sets the default properties for the component.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Gets the parent component for this designer.</summary>
      <returns>The parent component for this designer, or <see langword="null" /> if this designer is the root component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</param>
      <param name="oldValue">The old value of the member.</param>
      <param name="newValue">The new value of the member.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Gets a collection of property values that override user settings.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Indicates whether a property matching the specified name exists in the collection.</summary>
      <param name="propertyName">The name of the property to check for in the collection.</param>
      <returns>
        <see langword="true" /> if the property exists in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Gets or sets the object at the specified index.</summary>
      <param name="propertyName">The name of the property to access in the collection.</param>
      <returns>The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Gets the design-time verbs supported by the component that is associated with the designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available. This default implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>Implements the basic functionality required by a single data source at the <see langword="EnvDTE.Project" /> level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>When overridden in a derived class, closes this stream and the underlying stream gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>When overridden in a derived class, gets the value indicating whether the data source is designable.</summary>
      <returns>
        <see langword="true" /> if the data source is designable; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>When overridden in a derived class, gets the name of the data source.</summary>
      <returns>The name of the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>When overridden in a derived class, gets the fully qualified type name of the data source.</summary>
      <returns>The fully qualified type name of the data source.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to the collection.</summary>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to add to the collection.</param>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> that was added to the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />, if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</summary>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</param>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>Implements the basic functionality required by a single data source at the <see langword="EnvDTE.Project" /> level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>When overridden in a derived class, gets the collection of descriptors for the data sources in this group.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> that represents the collection of descriptors for the data sources in this group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>When overridden in a derived class, gets the value indicating whether this group is the default group.</summary>
      <returns>
        <see langword="true" /> if this group is the default group; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>When overridden in a derived class, gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to the collection.</summary>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to add to the collection.</param>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> that was added to the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</summary>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</param>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>Implements the basic functionality required of a service for providing access to a data source at the <see langword="EnvDTE.Project" /> level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, creates and returns an instance of the given data source, and adds it to the design surface.</summary>
      <param name="host">The designer host.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <returns>An <see cref="T:System.Object" /> representing an instance of the added data source.</returns>
      <exception cref="T:System.ArgumentException">The type name cannot be created or resolved.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>When overridden in a derived class, retrieves the collection of data sources at the <see langword="EnvDTE.Project" /> level.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, or <see langword="null" /> if there are no data sources at the <see langword="EnvDTE.Project" /> level.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>When overridden in a derived class, invokes the Add New Data Source Wizard.</summary>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> collection of newly added data sources, or <see langword="null" /> if no data sources are added.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, invokes the Configure Data Source dialog box on the specified data source.</summary>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <returns>
        <see langword="true" /> if any changes were made to that data source; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">The specified data source is invalid or <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>When overridden in a derived class, notifies the service that a component representing a data source was added to the design surface.</summary>
      <param name="dsc">The data source component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />.</summary>
      <returns>
        <see langword="true" /> if the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports configuring data sources using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />.</summary>
      <returns>
        <see langword="true" /> if the service supports configuring a data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>Represents a column of a table or view in the data store accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name and data type.</summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name, data type, and default value.</summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified values.</summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column</param>
      <param name="identity">
        <see langword="true" /> if the field is the identity field of the data row; otherwise, <see langword="false" />.</param>
      <param name="nullable">
        <see langword="true" /> if the field can be null in the data store; otherwise, <see langword="false" />.</param>
      <param name="primaryKey">
        <see langword="true" /> if the field is the primary key of the data row; otherwise, <see langword="false" />.</param>
      <param name="precision">The maximum number of digits used by a numeric data field.</param>
      <param name="scale">The maximum number of digits to the right of the decimal point in a numeric data field.</param>
      <param name="length">The length of the data field, in bytes.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>Gets the data type of the data column.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>Gets the default value of the data column.</summary>
      <returns>The default value of the data column. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>Gets a value indicating whether the data column is an identity column for the data row.</summary>
      <returns>
        <see langword="true" /> of the column is an identity column; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>Gets the length in bytes of the data column.</summary>
      <returns>The length of the data column, in bytes.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>Gets the name of the column in the data store.</summary>
      <returns>The name of the column in the data store.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>Gets a value indicating whether the column can be null in the data store.</summary>
      <returns>
        <see langword="true" /> if the column can be null in the data store; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>Gets the number of digits in a numeric data column.</summary>
      <returns>The number of digits in a numeric data column.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>Gets a value indicating whether the column is part of the table's primary key.</summary>
      <returns>
        <see langword="true" /> if the column is part of the table's primary key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>Gets the number of digits to the right of the decimal point in a numeric column.</summary>
      <returns>The number of digits to the right of the decimal point in a numeric column.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>Represents a connection to a data store in a design tool. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string.</summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string, and indicates whether the connection was loaded from a configuration file.</summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store.</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
      <param name="isConfigured">
        <see langword="true" /> to indicate the connection was created from information stored in the application's configuration file; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>Gets the application connection string defined for the connection.</summary>
      <returns>The application connection string defined for the connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>Gets a value indicating whether the connection information is in the application's configuration file.</summary>
      <returns>
        <see langword="true" /> if the connection is defined in the application's configuration file; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>Gets the name of the data connection.</summary>
      <returns>The name of the data connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>Gets the name of the provider used to access the underlying data store.</summary>
      <returns>The name of the provider used to access the underlying data store.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>Represents a parameter for a stored procedure. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> class with the specified name, data type, and input/output semantics.</summary>
      <param name="name">The name of the parameter.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>Gets the database type of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>Gets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>Gets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>Represents to the designer a relationship between two tables in the data source accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> class with the specified name, parent column, and child relationship.</summary>
      <param name="name">The name of the relationship.</param>
      <param name="parentColumns">The columns in the parent table that define the relationship.</param>
      <param name="childTable">The child table in the relationship.</param>
      <param name="childColumns">The columns in the child table that define the relationship.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>Gets a collection of columns from the child table that are part of the relationship.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the child table.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>Gets the child table referenced in the relationship.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> object that represents the child table in the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>Gets the name of the relationship.</summary>
      <returns>The name of the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>Gets a collection of columns from the parent table that are part of the relationship between two tables.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the parent table.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>Specifies the types of objects that can be retrieved from a data-store schema. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>Indicates that stored procedures should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>Indicates that tables should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>Indicates that data views should be returned from the data-store schema.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>Represents a stored procedure in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name.</summary>
      <param name="name">The name of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name and owner.</summary>
      <param name="name">The name of the stored procedure.</param>
      <param name="owner">The data store owner of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>When overridden in a derived class, returns a collection of parameters for the stored procedure.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>Gets the name of the stored procedure.</summary>
      <returns>The name of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>Gets the owner of the stored procedure.</summary>
      <returns>The owner of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>Gets a collection of parameters required for a stored procedure.</summary>
      <returns>A collection of parameters for the stored procedure.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>Represents a table in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name.</summary>
      <param name="name">The name of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name and owner.</summary>
      <param name="name">The name of the table.</param>
      <param name="owner">The owner of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>When overridden in a derived class, returns a collection of relationship objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>Gets a collection of relationships defined for a table.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>Defines the properties and methods shared between data-store tables and data-store views.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class.</summary>
      <param name="name">The name of the table or view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class.</summary>
      <param name="name">The name of the table or view.</param>
      <param name="owner">The data-store owner of the table or view.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>Gets a collection of columns defined for a table or view.</summary>
      <returns>A collection of columns defined for a table or view.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>When overridden in a derived class, returns a collection of data-store column objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>Gets the name of the data-store table or view.</summary>
      <returns>The name of the data-store table or view.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>Gets the owner of the data-store table or view.</summary>
      <returns>The owner of the data-store table or view.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>Represents a data view in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name.</summary>
      <param name="name">The name of the view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name and owner.</summary>
      <param name="name">The name of the view.</param>
      <param name="owner">The data-store owner of the view.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>Defines an interface to data services that enables control designers to integrate data store or database-related functionality into their design environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Creates a new data connection or edits an existing connection using the design tool's new connection user interface.</summary>
      <param name="owner">The parent window for the connection dialog.</param>
      <param name="initialConnection">The connection, if any, to edit. To create a new connection, <paramref name="initialConnection" /> should be <see langword="null" />.</param>
      <returns>A new or edited <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object, or <see langword="null" /> if the user canceled.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>Launches a dialog to build a SQL query string.</summary>
      <param name="owner">The parent window for the dialog.</param>
      <param name="connection">The data connection to use for the query.</param>
      <param name="mode">One of the <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" /> values.</param>
      <param name="initialQueryText">The initial value of the query or <see cref="F:System.String.Empty" /> to create a new query.</param>
      <returns>A string containing the SQL query, or <see langword="null" /> if the user canceled.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>Writes a connection string to the application's configuration file.</summary>
      <param name="owner">The parent window for the dialog, if any.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the connection data to save.</param>
      <param name="name">The name of the new connection configuration entry.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the saved connection data with the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> property set to <paramref name="name" />, and the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> property set to <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>Gets a collection of data connections defined in the current design session.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> objects representing the data connections available in the current design session.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Returns a code expression that contains the source code required to retrieve a connection string from the application's configuration file.</summary>
      <param name="connection">The connection to retrieve from the application's configuration file.</param>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object containing the source code required to retrieve a connection string from the application's configuration file.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets the schema for the specified data connection.</summary>
      <param name="connection">The data connection for which to return schema information.</param>
      <returns>An <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> object containing the schema information for the specified data connection, or <see langword="null" /> if no schema information is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets a database connection that can be used at design time.</summary>
      <param name="connection">The desired data connection.</param>
      <returns>A <see cref="T:System.Data.Common.DbConnection" /> object that can be used at design time.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>Defines methods for retrieving data-store schema information.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Gets a collection of specified schema items.</summary>
      <param name="schemaClass">The schema objects to return.</param>
      <returns>A collection of schema objects of the specified type.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Returns a value indicating whether the data store contains the specified data-schema object.</summary>
      <param name="schemaClass">The schema objects to return.</param>
      <returns>
        <see langword="true" /> if the data store supports the specified data-schema object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>Specifies the type of data-store query the design environment should construct.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>The query being built is a Delete query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>The query being built is an Insert query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>The query being built is a Select query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>The query being built is an Update query.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>This date time editor is a <see cref="T:System.Drawing.Design.UITypeEditor" /> suitable for visually editing <see cref="T:System.DateTime" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.</summary>
      <param name="context">A type descriptor context that can be used to provide additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> method. If the method is not supported, this will return None.</summary>
      <param name="context">A type descriptor context that can be used to provide additional context information.</param>
      <returns>An <see langword="enum" /> value indicating the provided editing style.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Represents a static header item on a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name string.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name and category strings.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Provides the base class for types that represent a panel item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
      <param name="description">Supplemental text for this item, potentially used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> property value.</summary>
      <returns>
        <see langword="true" /> if the item can be grouped; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Gets the group name for an item.</summary>
      <returns>A string that represents the group that the item is a member of.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Gets the supplemental text for the item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the descriptive text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Gets the text for this item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the display text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Gets a reference to a collection that can be used to store programmer-defined key/value pairs.</summary>
      <returns>A collection that implements <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>Gets or sets a value that indicates whether this item appears in source code view.</summary>
      <returns>
        <see langword="true" /> if this item appears in source code view; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to the current collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to add.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> index at which the value has been added.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines whether the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains a specific element.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains the specified value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Inserts an element into the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> at the specified index.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to remove from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Provides the base class for types that define a list of items used to create a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> class.</summary>
      <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.</summary>
      <returns>
        <see langword="true" /> if the panel should be shown when the owning component is created; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Gets the component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>A component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the component associated with the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType">A service provided by the <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />. This value is <see langword="null" /> if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with default settings.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with the specified panel items.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to populate the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to add.</param>
      <returns>The position into which the new element is inserted into the collection's internal list.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> array to the end of the current collection.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the end of the current collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Indicates whether the collection contains a specific value.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to search for.</param>
      <returns>
        <see langword="true" /> if the collection contains the specified value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array of type <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.  
-or-  
The number of elements in the current collection is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to locate in the collection.</param>
      <returns>The index of <paramref name="value" /> if found in the internal list; otherwise, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Inserts the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> into the collection at the specified position.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the count of elements in the current collection.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> at the specified index.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear">
      <summary>Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new element into the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
      <param name="value">The value of the element to remove from <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
      <param name="newValue">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
      <param name="value">The object to validate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.ComponentModel.Design.DesignerActionList" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to remove from the current collection.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the collection.</param>
      <param name="changeType">A value that specifies whether a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> has been added or removed from the collection.</param>
      <param name="actionLists">The collection of list elements after the action has been applied.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Gets the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects associated with this event.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that represents the current state of the collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Gets a flag indicating whether an element has been added or removed from the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> that indicates the type of change.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Gets the object that is associated with the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the managed <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Specifies the type of change occurring in a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been added to the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been removed from the collection.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Represents a smart tag panel item that is associated with a method in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, and display and description text.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Gets a value that indicates the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> should appear in other user interface contexts.</summary>
      <returns>
        <see langword="true" /> if the item is to be used in shortcut menus; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>Programmatically executes the method associated with the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException">The method, named in <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> cannot be found.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Gets the name of the method that this <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated method.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> objects to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies items.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Represents a panel item that is associated with a property in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and display names.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display and description text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Gets the name of the property that this item is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its items to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
      <param name="serviceProvider">The service provider for the current design-time environment.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="designerActionListCollection">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Releases all components from management and clears all push-model smart tag lists.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Determines whether the current smart tag service manages the action lists for the specified component.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to search for.</param>
      <returns>
        <see langword="true" /> if the component is managed by the current service; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is <see langword="null" />.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Occurs when a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> is removed or added for any component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Returns the collection of smart tag item lists associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <returns>The collection of smart tags for the specified component.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>Returns the collection of smart tag item lists of the specified type associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="type">The <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> to filter the associated smart tags with.</param>
      <returns>The collection of smart tags of the specified type for the specified component.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the pull-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the push-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from all components managed by the current service.</summary>
      <param name="actionList">The list of smart tags to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Removes all the smart tag lists associated with the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <param name="actionList">The smart tag list to remove.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Represents a static text item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The category used to group similar items on the panel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Occurs when a request is made to show or hide a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Hides the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be hidden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Updates the smart tag panel.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to refresh.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Indicates whether to automatically show the smart tag panel.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to automatically show.</param>
      <returns>
        <see langword="true" /> to automatically show the smart tag panel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Displays the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be displayed.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the panel.</param>
      <param name="changeType">A value that specifies whether the panel is being displayed or hidden.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Gets a flag indicating whether the smart tag panel is being displayed or hidden.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> that indicates the state of the panel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Gets the object that is associated with the smart tag panel.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the smart tag panel.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">The event-specific information.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Specifies the display state of a smart tag panel.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>The smart tag panel is being hidden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>The smart tag panel is being refreshed.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>The smart tag panel is being displayed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Represents a base class for design-time tools, not derived from <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, that provide smart tag or designer verb capabilities.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Gets the collection of all the smart tags associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the smart tags for the associated designed component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Returns a collection of command objects.</summary>
      <param name="name">The type of collection to return, indicating either a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> or a <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns>A collection that contains the specified type - either <see cref="T:System.ComponentModel.Design.DesignerActionList" /> or <see cref="T:System.ComponentModel.Design.DesignerVerb" /> - of command objects. The base implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Gets the collection of all the designer verbs associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the designer verbs for the associated designed component.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Presents a user interface for designing components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</param>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Begins the loading process with the given designer loader.</summary>
      <param name="loader">The designer loader to use for loading the designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Begins the loading process.</summary>
      <param name="rootComponentType">The type of component to create in design mode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Creates an instance of a component.</summary>
      <param name="componentType">The type of component to create.</param>
      <returns>The newly created component.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Creates a designer when a component is added to the container.</summary>
      <param name="component">The component for which the designer should be created.</param>
      <param name="rootDesigner">
        <see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</param>
      <returns>An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Creates an instance of the given type.</summary>
      <param name="type">The type to create.</param>
      <returns>The newly created object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <param name="owningComponent">The component that manages the nested container.</param>
      <returns>The nested container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <param name="owningComponent">The component that manages the nested container.</param>
      <param name="containerName">An additional name for the nested container.</param>
      <returns>The nested container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Occurs when the design surface is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Gets a value indicating whether the Design-time Error List is loading.</summary>
      <returns>
        <see langword="true" /> if the Design-time Error List is loading; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Serializes changes to the design surface.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Gets a service from the service container.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Gets a value indicating whether the design surface is currently loaded.</summary>
      <returns>
        <see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Occurs when the designer load has completed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Returns a collection of loading errors or a void collection.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of loading errors.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Occurs when the designer is about to be loaded.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Gets the service container.</summary>
      <returns>The service container that provides all services to designers contained within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Occurs when a designer has finished unloading.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Occurs when a designer is about to unload.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Gets the view for the root designer.</summary>
      <returns>The view for the root designer.</returns>
      <exception cref="T:System.InvalidOperationException">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">The designer loaded, but it does not offer a view compatible with this design surface.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>Contains a collection of design surfaces. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>Copies the collection members to the specified <see cref="T:System.ComponentModel.Design.DesignSurface" /> array beginning at the specified destination index.</summary>
      <param name="array">The array to copy collection members to.</param>
      <param name="index">The destination index to begin copying to.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>Gets the total number of design surfaces in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>The total number of elements in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>Gets the design surface at the specified index.</summary>
      <param name="index">The index of the design surface to return.</param>
      <returns>The design surface at the specified index.</returns>
      <exception cref="T:System.NotSupportedException">The design surface specified by <paramref name="index" /> is not supported.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.Count" /> property.</summary>
      <returns>The number of elements contained in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</summary>
      <returns>
        <see langword="true" /> if access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> class.</summary>
      <param name="surface">The design surface that is being created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>Gets the design surface that is being created.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is being created.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
      <param name="parentProvider">A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>Gets or sets the active designer.</summary>
      <returns>The active designer.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>Occurs when the currently active designer changes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>Creates an instance of a design surface.</summary>
      <returns>A new design surface instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>Creates an instance of a design surface.</summary>
      <param name="parentProvider">A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</param>
      <returns>A new design surface instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>Implementation that creates the design surface.</summary>
      <param name="parentProvider">A service provider to pass to the design surface. This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</param>
      <returns>A new design surface instance.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>Occurs when a designer is created.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>Occurs when a designer is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>Gets a collection of design surfaces.</summary>
      <returns>A collection of design surfaces that are currently hosted by the design surface manager.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>Gets a service in the design surface manager's service container.</summary>
      <param name="serviceType">The service type to retrieve.</param>
      <returns>An object that implements, or is a derived class of, the given service type; otherwise, <see langword="null" /> if the service does not exist in the service container.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>Occurs when the global selection changes.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</summary>
      <returns>The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>Defines identifiers that indicate the display modes used by <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>An ANSI format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> mode is selected. If the characters match a printable character set, a test is run to automatically select either the <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> or <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> display mode.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>A hexadecimal format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>A Unicode format display.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>A default implementation of the <see cref="T:System.ComponentModel.Design.IEventBindingService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.EventBindingService" /> class.</summary>
      <param name="provider">The service provider from which <see cref="T:System.ComponentModel.Design.EventBindingService" /> will query for services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique method name.</summary>
      <param name="component">The component for which the method name will be created.</param>
      <param name="e">The event to create a name for.</param>
      <returns>The unique method name.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is no longer being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method to be freed.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Returns a collection of names of compatible methods.</summary>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> containing the compatible delegate.</param>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>Gets the requested service from the service provider.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>A reference to the service specified by <paramref name="serviceType" />, or <see langword="null" /> if the requested service is not available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>Displays user code.</summary>
      <returns>
        <see langword="true" /> if it is possible to display the code; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Displays the user code for the specified method.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method for which to display code.</param>
      <returns>
        <see langword="true" /> if it is possible to display the code; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>Displays the user code at the given line number.</summary>
      <param name="lineNumber">The line number to show.</param>
      <returns>
        <see langword="true" /> if it is possible to display the code; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique name for an event-handler method for the specified component and event.</summary>
      <param name="component">The component instance the event is connected to.</param>
      <param name="e">The event to create a name for.</param>
      <returns>The recommended name for the event-handler method for this event.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Gets a collection of event-handler methods that have a method signature compatible with the specified event.</summary>
      <param name="e">The event to get the compatible event-handler methods for.</param>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</summary>
      <param name="property">The property that represents an event.</param>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Converts a set of event descriptors to a set of property descriptors.</summary>
      <param name="events">The events to convert to properties.</param>
      <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Converts a single event descriptor to a property descriptor.</summary>
      <param name="e">The event to convert.</param>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>Displays the user code for the designer.</summary>
      <returns>
        <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Displays the user code for the specified event.</summary>
      <param name="component">The component that the event is connected to.</param>
      <param name="e">The event to display.</param>
      <returns>
        <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>Displays the user code for the designer at the specified line.</summary>
      <param name="lineNumber">The line number to place the caret on.</param>
      <returns>
        <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>Validates that the provided method name is valid for the language or script being used.</summary>
      <param name="methodName">The method name to validate.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Represents the collection of exceptions.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> class.</summary>
      <param name="exceptions">An array of type <see cref="T:System.Exception" />, containing the objects to populate the collection.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Gets the array of <see cref="T:System.Exception" /> objects that represent the collection of exceptions.</summary>
      <returns>An <see cref="T:System.Exception" /> array that represent the collection of exceptions.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>Provides debugging services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>Asserts on a condition inside a design-time environment.</summary>
      <param name="condition">
        <see langword="true" /> to prevent <paramref name="message" /> from being displayed; otherwise, <see langword="false" />.</param>
      <param name="message">The message to display.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>Logs a failure message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>Gets or sets the indent level for debug output.</summary>
      <returns>The indent level for debug output.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>Gets a collection of trace listeners for monitoring design-time debugging output.</summary>
      <returns>A collection of trace listeners</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>Logs a debug message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
      <param name="category">The category of <paramref name="message" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>Allows a designer to store and retrieve its state.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a state item specified by the key for the given component.</summary>
      <param name="component">The component for which to retrieve the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
      <returns>The designer state for <paramref name="component" /> specified by <paramref name="key" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>Sets a state item specified by the key for the given component.</summary>
      <param name="component">The component for which to set the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
      <param name="value">The designer state item for <paramref name="component" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <summary>Utility for loading assemblies in a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Determines the load path for the specified assembly in the target framework.</summary>
      <param name="runtimeOrTargetAssemblyName">The full assembly name for the runtime or target assembly.</param>
      <param name="suggestedAssemblyPath">The suggested path from which to load the assembly.</param>
      <param name="targetFramework">The target framework for the designer.</param>
      <returns>The actual load path for the assembly, or <see langword="null" /> if the assembly is not loadable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <summary>Loads the specified runtime assembly.</summary>
      <param name="targetAssemblyName">The full target assembly name.</param>
      <returns>The loaded runtime assembly, or <see langword="null" /> if the assembly could not be loaded.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Defines multi-target type name resolution services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Resolves a type for the target framework to an assembly-qualified name.</summary>
      <param name="type">The type to resolve.</param>
      <returns>The <see cref="P:System.Type.AssemblyQualifiedName" /> for <paramref name="type" /> in the target framework.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Provides a set of methods for identifying inherited components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">The component to search for inherited components to add to the specified container.</param>
      <param name="container">The container to add the inherited components to.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">The base type to search for.</param>
      <param name="component">The component to search for inherited components to add to the specified container.</param>
      <param name="container">The container to add the inherited components to.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Gets the inheritance attribute of the specified component.</summary>
      <param name="component">The component to retrieve the inheritance attribute for.</param>
      <returns>An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Indicates whether to ignore the specified member.</summary>
      <param name="member">The member to check. This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component">The component instance this member is bound to.</param>
      <returns>
        <see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> class.</summary>
      <param name="succeeded">
        <see langword="true" /> to indicate that the designer load was successful; otherwise, <see langword="false" />.</param>
      <param name="errors">A collection of errors that occurred while the designer was loading.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Gets a collection of errors that occurred while the designer was loading.</summary>
      <returns>A collection of errors that occurred while the designer was loading.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Gets a value that indicates whether the designer load was successful.</summary>
      <returns>
        <see langword="true" /> if the designer load was successful; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>Provides design-time support for localization features to a root designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> class using the specified service provider and base component.</summary>
      <param name="serviceProvider">A service provider for the specified component.</param>
      <param name="baseComponent">The base component to localize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>Indicates whether this object can provide its extender properties to the specified object.</summary>
      <param name="o">The object to receive the extender properties.</param>
      <returns>
        <see langword="true" /> if this object can provide extender properties to the specified object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>Gets the current resource culture for the specified object.</summary>
      <param name="o">The object to get the current resource culture for.</param>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource variety.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>Gets the default resource culture to use when initializing the values of a localized object at design time.</summary>
      <param name="o">The object to get the resource culture for.</param>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource culture to use to initialize the values of the specified object.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>Gets a value indicating whether the specified object supports resource localization.</summary>
      <param name="o">The object to check for localization support.</param>
      <returns>
        <see langword="true" /> if the specified object supports resource localization; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>Resets the resource culture for the specified object.</summary>
      <param name="o">The object to reset the resource culture for.</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>Sets the current resource culture for the specified object to the specified resource culture.</summary>
      <param name="o">The base component to set the resource culture for.</param>
      <param name="language">A <see cref="T:System.Globalization.CultureInfo" /> that indicates the resource culture to use.</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>Sets a value indicating whether the specified object supports localized resources.</summary>
      <param name="o">The base component to set as localizable or not localizable.</param>
      <param name="localizable">
        <see langword="true" /> if the object supports resource localization; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>Gets a value indicating whether the specified object must have its localizable values persisted in a resource.</summary>
      <param name="o">The object to get the language support persistence flag for.</param>
      <returns>
        <see langword="true" /> if the localizable values should be persisted in resources; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> class.</summary>
      <param name="changeType">The type of change.</param>
      <param name="command">The menu command.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>Gets the type of change that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>Gets the command that was added, removed, or changed.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> that was added, removed, or changed.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event of a <see cref="T:System.ComponentModel.Design.MenuCommandService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>Specifies the type of action that occurred to the related object's <see cref="T:System.Windows.Forms.Design.MenuCommands" /> collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>Specifies that one or more command objects were added.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>Specifies that one or more commands have changed their status.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>Specifies that one or more commands were removed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class.</summary>
      <param name="serviceProvider">The service provider that this service uses to obtain other services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Adds a command handler to the menu command service.</summary>
      <param name="command">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A command handler <paramref name="command" /> already exists.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>Ensures that the verb list has been created.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</summary>
      <param name="commandID">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</summary>
      <param name="guid">The GUID of the command.</param>
      <param name="id">The ID of the command.</param>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>Gets the command list for a given GUID.</summary>
      <param name="guid">The GUID of the command list.</param>
      <returns>An <see cref="T:System.Collections.ICollection" /> of commands.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>Gets a reference to the requested service.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service to retrieve.</param>
      <returns>A reference to <paramref name="serviceType" />; otherwise, <see langword="null" /> if the service is not found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Invokes the given command on the local form or in the global environment.</summary>
      <param name="commandID">The command to invoke.</param>
      <returns>
        <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Invokes the given command with the given parameter on the local form or in the global environment.</summary>
      <param name="commandId">The command to invoke.</param>
      <param name="arg">A parameter for the invocation.</param>
      <returns>
        <see langword="true" />, if the command was found; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>Occurs when the status of a menu command has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Removes the given menu command from the document.</summary>
      <param name="command">The command to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Removes the given verb from the document.</summary>
      <param name="verb">The verb to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Shows the shortcut menu with the given command ID at the given location.</summary>
      <param name="menuID">The shortcut menu to display.</param>
      <param name="x">The x-coordinate of the shortcut menu's location.</param>
      <param name="y">The y-coordinate of the shortcut menu's location.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>Gets a collection of the designer verbs that are currently available.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Displays a dialog for editing multi-line strings in design mode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services can be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the supported editing style.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <see langword="false" />, indicating that this <see cref="T:System.Drawing.Design.UITypeEditor" /> does not display a visual representation in the Properties Window.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
      <param name="subObjectSelector">The specified sub-object selector value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Represents the current value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Fills a hierarchical collection of labeled items, with each item represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">A hierarchical collection of labeled items.</param>
      <param name="context">The context information for a component.</param>
      <param name="provider">The <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method of this interface that obtains the object that provides the service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Represents the previous value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Displays a hierarchical collection of labeled items, each represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Adds a new tree node to the collection.</summary>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
      <param name="parent">The parent of the node.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> added to the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Removes all tree nodes from the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>This field is for internal use only.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Occurs after the tree node is selected.</summary>
      <param name="sender">The source of an event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is clicked.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Sets the collection nodes to a specific value.</summary>
      <param name="value">The value to be set.</param>
      <param name="nodes">The nodes collection.</param>
      <returns>
        <see langword="true" /> if the collection nodes were set; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Initializes the editor service.</summary>
      <param name="edSvc">The editor service.</param>
      <param name="value">The value to be set.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Removes the editor service.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Represents a node of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> class.</summary>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Represents the value for the node.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Sets the current <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> to the specified value.</summary>
      <param name="value">The specified value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Specifies the target framework for a project.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> class.</summary>
      <param name="targetFrameworkMoniker">The target framework for the project.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Gets the target framework for the project.</summary>
      <returns>The target framework for the project.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Starts the loading process.</summary>
      <param name="host">The designer loader host to load.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <param name="enable">
        <see langword="true" /> to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
      <returns>
        <see langword="true" /> if the component notification was enabled prior to this call; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>Flushes pending changes to the designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
      <returns>The requested service, or <see langword="null" /> if the requested service cannot be found.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>Indicates whether the designer should be reloaded.</summary>
      <returns>
        <see langword="true" /> if the designer should be reloaded; otherwise, <see langword="false" />. The default implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>Gets the loader host.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>Gets a value indicating whether the designer loader is loading the design surface.</summary>
      <returns>
        <see langword="true" /> if the designer loader is currently loading the design surface; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>Gets or sets a value indicating whether the designer has been modified.</summary>
      <returns>
        <see langword="true" /> if the designer has been modified; otherwise, <see langword="false" />,</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">
        <see langword="true" /> if the load completed successfully; otherwise, <see langword="false" />.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>Notifies the designer loader that the state of the document is about to be modified.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Flushes all changes to the designer.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Loads a designer from persistence.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>Gets or sets the property provider for the serialization manager being used by the loader.</summary>
      <returns>An object whose properties are to be provided to the serialization manager.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>Queues a reload of the designer.</summary>
      <param name="flags">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>Defines the behavior of the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> method. These flags can be combined using the bitwise <see langword="OR" /> operator.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to <see langword="true" /> if load errors occur.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>The designer loader forces the reload to occur. Normally, a reload occurs only if the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> method returns <see langword="true" />. This flag bypasses calling this method and always performs the reload.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>The designer loader will set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to <see langword="true" /> if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>The designer loader abandons any changes before reloading.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>Gets a value indicating whether a reload has been queued.</summary>
      <returns>
        <see langword="true" />, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>Reports errors that occurred while flushing changes.</summary>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</param>
      <exception cref="T:System.InvalidOperationException">One or more errors occurred while flushing changes.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>Sets the full class name of the base component.</summary>
      <param name="name">A string representing the full name of the component to be designed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Signals that a dependent load has finished.</summary>
      <param name="successful">
        <see langword="true" /> to load successfully; otherwise, <see langword="false" />.</param>
      <param name="errorCollection">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</param>
      <exception cref="T:System.InvalidOperationException">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>Reloads the design document.</summary>
      <returns>
        <see langword="true" /> if the reload request is accepted; <see langword="false" /> if the loader does not allow the reload.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Serializes a set of components into a serialization store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class using the given service provider to resolve services.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> to use for resolving services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>A new serialization store.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Deserializes the given store to produce a collection of objects.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <returns>A collection of deserialized components.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <param name="container">A container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</param>
      <returns>A collection of deserialized components.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which the objects will be deserialized.</param>
      <param name="container">A container of objects to which data will be applied.</param>
      <param name="validateRecycledTypes">
        <see langword="true" /> to validate the recycled type; otherwise, <see langword="false" />.</param>
      <param name="applyDefaults">
        <see langword="true" /> to apply default property values; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from the given stream.</summary>
      <param name="stream">The stream from which to load the <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <returns>The loaded <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> supports seeking, but its length is 0.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object, accounting for default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which <paramref name="member" /> will be serialized.</param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object, but also serializes the member if it contains the default property value.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which <paramref name="member" /> will be serialized.</param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>Provides the base class for implementing a CodeDOM-based designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use.</summary>
      <returns>The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>Returns a value indicating whether a reload is required.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</summary>
      <param name="component">The component to rename.</param>
      <param name="oldName">The original name of the component.</param>
      <param name="newName">The new name of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">
        <see langword="true" /> to indicate that the load completed successfully; otherwise, <see langword="false" />.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Requests serialization of the root component of the designer.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Parses code from a CodeDOM provider.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>Deserializes the specified serialization data object and returns a collection of objects represented by that data.</summary>
      <param name="serializationData">An object consisting of serialized data.</param>
      <returns>A collection of objects represented by <paramref name="serializationData" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>Serializes the specified collection of objects and stores them in a serialization data object.</summary>
      <param name="objects">A collection of objects to serialize.</param>
      <returns>An object that contains the serialized state of the specified collection of objects.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> was not found.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Creates a new name that is unique to all components in the specified container.</summary>
      <param name="container">The container where the new object is added.</param>
      <param name="dataType">The data type of the object that receives the name.</param>
      <returns>A unique name for the data type.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <param name="name">The name to validate.</param>
      <returns>
        <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <param name="name">The name to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not a valid identifier, or there is already a component with the same name.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>Gets the type resolution service to be used with this designer loader.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>Writes compile-unit changes to persistent storage.</summary>
      <param name="unit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>Determines the localization model to be used by the CodeDom resource adapter.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>The localization provider will write localized property values into a resource file and use the <see cref="T:System.ComponentModel.ComponentResourceManager" /> class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>Provides CodeDOM resource serialization services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter</param>
      <param name="supportedCultures">An array of cultures that this resource adapter should support.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <param name="manager">The serialization manager requesting the serializer.</param>
      <param name="currentSerializer">An instance of the current serializer of the specified type. This can be <see langword="null" /> if no serializer of the specified type exists.</param>
      <param name="objectType">The data type of the object to serialize.</param>
      <param name="serializerType">The data type of the serializer to create.</param>
      <returns>An instance of a serializer of the type requested, or <see langword="null" /> if the request cannot be satisfied.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Deserializes the specified serialized CodeDOM object into an object.</summary>
      <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
      <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
      <returns>The deserialized CodeDOM object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="codeObject" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> is an unsupported code element.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a single statement.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="statement">The statement to deserialize.</param>
      <returns>An object instance resulting from deserializing <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Determines which statement group the given statement should belong to.</summary>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> for which to determine the group.</param>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> that <paramref name="statement" /> has been reduced to.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of <paramref name="statement" />.</param>
      <returns>The name of the component with which <paramref name="statement" /> should be grouped.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a CodeDOM object.</summary>
      <param name="manager">The serialization manager to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object, accounting for default values.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>A CodeDom object representing <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> representing the serialized state of <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member, accounting for default values.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <returns>A CodeDom object representing <paramref name="member" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified value to a CodeDOM expression.</summary>
      <param name="manager">The serialization manager to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>The serialized value. This returns <see langword="null" /> if no reference expression can be obtained for the specified value, or the value cannot be serialized.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Deserializes the given expression into an in-memory object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="name">The name of the object that results from the expression. Can be <see langword="null" /> if there is no need to name the object.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</param>
      <returns>An object resulting from interpretation of <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Returns an instance of the given type.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="type">The <see cref="T:System.Type" /> of the instance to return.</param>
      <param name="parameters">The parameters to pass to the constructor for <paramref name="type" />.</param>
      <param name="name">The name of the deserialized object.</param>
      <param name="addToContainer">
        <see langword="true" /> to add this object to the design container; otherwise, <see langword="false" />. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</param>
      <returns>An instance of <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="type" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Deserializes properties on the given object from the invariant culture's resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object from which the properties are to be deserialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a statement by interpreting and executing a CodeDOM statement.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="type">The target type.</param>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of events as defined in the project's target version of the .NET Framework.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
      <returns>A collection of events as defined in the project's target version of the .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns an expression for the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which to get an expression.</param>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing <paramref name="value" />, or <see langword="null" /> if there is no existing expression for <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of properties as defined in the project's target version of the .NET Framework.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
      <returns>A collection of properties as defined in the project's target version of the .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a reflection type generated from type metadata.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="type">The type to use metadata from.</param>
      <returns>A reflection type generated from the metadata of <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a reflection type generated from object metadata.</summary>
      <param name="manager">The serialization manager.</param>
      <param name="instance">The object to use metadata from.</param>
      <returns>A reflection type generated from the metadata of <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Locates a serializer for the given object value.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object specifying the serializer to retrieve.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Locates a serializer for the given type.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="valueType">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="valueType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</summary>
      <param name="provider">The type description provider service.</param>
      <param name="instance">An object from which the type description provider service can be derived, if <paramref name="provider" /> is <see langword="null" />.</param>
      <returns>A .NET Framework-aware type description provider.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a unique name for the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which the name will be retrieved.</param>
      <returns>A unique name for <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a value indicating whether the given object has been serialized.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <returns>
        <see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <param name="honorPreset">
        <see langword="true" /> to include preset expressions; otherwise, <see langword="false" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Returns an expression representing the creation of the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="isComplete">
        <see langword="true" /> if <paramref name="value" /> was fully serialized; otherwise, <see langword="false" />.</param>
      <returns>An expression representing the creation of <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Serializes the given event into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object to which <paramref name="descriptor" /> is bound.</param>
      <param name="descriptor">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the specified events into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object on which events will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</param>
      <param name="value">The object on which the properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the invariant culture's resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">Not used.</param>
      <param name="value">The object whose properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Serializes a property on the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</param>
      <param name="value">The object on which the property will be serialized.</param>
      <param name="propertyToSerialize">The property to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize. Can be <see langword="null" />.</param>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Serializes the given object into an expression appropriate for the invariant culture.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="ensureInvariant">
        <see langword="true" /> to serialize into the invariant culture; otherwise, <see langword="false" />.</param>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Associates an object with an expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Associates an object with an expression, optionally specifying a preset expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <param name="isPreset">
        <see langword="true" /> to specify a preset expression; otherwise, <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>The exception that is thrown when line number information is available for a serialization error.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified exception and line information.</summary>
      <param name="ex">The exception to throw.</param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class.</summary>
      <param name="ex">The exception to throw.</param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified serialization data and context.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing.</param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified message and line information.</summary>
      <param name="message">A message describing the exception.</param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class.</summary>
      <param name="message">A message describing the exception.</param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the parameter name and additional exception information.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing.</param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Gets or sets the line information for the error associated with this exception.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the line information for the error.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Serializes collections.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Verifies serialization support by the <paramref name="method" />.</summary>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> to check for serialization attributes.</param>
      <returns>
        <see langword="true" /> if the <paramref name="method" /> supports serialization; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given collection into a CodeDOM object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>A CodeDOM object representing <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Serializes the given collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="targetExpression">The <see cref="T:System.CodeDom.CodeExpression" /> that refers to the collection</param>
      <param name="targetType">The <see cref="T:System.Type" /> of the collection.</param>
      <param name="originalCollection">The collection to serialize.</param>
      <param name="valuesToSerialize">The values to serialize.</param>
      <returns>Serialized collection if the serialization process succeeded; otherwise, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, or <paramref name="valuesToSerialize" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Gets or sets to the container for this serialization manager.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Creates an instance of a type.</summary>
      <param name="type">The type to create an instance of.</param>
      <param name="arguments">The parameters of the type's constructor. This can be <see langword="null" /> or an empty collection to invoke the default constructor.</param>
      <param name="name">A name to give the object. If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</param>
      <param name="addToContainer">
        <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</param>
      <returns>A new instance of the type specified by <paramref name="type" />.</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Creates a new serialization session.</summary>
      <returns>An <see cref="T:System.IDisposable" /> that represents a new serialization session.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager is already within a session. This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Gets the list of errors that occurred during serialization or deserialization.</summary>
      <returns>The list of errors that occurred during serialization or deserialization.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Gets the type corresponding to the specified type name.</summary>
      <param name="typeName">The name of the type to get.</param>
      <returns>The specified type.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Gets the serializer for the given object type.</summary>
      <param name="objectType">The type of object for which to retrieve the serializer.</param>
      <param name="serializerType">The type of serializer to retrieve.</param>
      <returns>The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>The requested service, or <see langword="null" /> if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Gets the requested type.</summary>
      <param name="typeName">The name of the type to retrieve.</param>
      <returns>The requested type, or <see langword="null" /> if the type cannot be resolved.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container. The default is <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">This property was changed from within a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</summary>
      <returns>The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Gets or sets a value that indicates whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type. The default is <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Occurs when a session is created.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Occurs when a session is disposed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adds a custom serialization provider to the serialization manager.</summary>
      <param name="provider">The serialization provider to add.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Gets the context stack for this serialization session.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</summary>
      <param name="type">The data type to create.</param>
      <param name="arguments">The arguments to pass to the constructor for this type.</param>
      <param name="name">The name of the object. This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</param>
      <param name="addToContainer">
        <see langword="true" /> to add this object to the design container. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</param>
      <returns>The newly created object instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Retrieves an instance of a created object of the specified name.</summary>
      <param name="name">The name of the object to retrieve.</param>
      <returns>An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Retrieves a name for the specified object.</summary>
      <param name="value">The object for which to retrieve the name.</param>
      <returns>The name of the object, or <see langword="null" /> if the object is unnamed.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Gets a serializer of the requested type for the specified object type.</summary>
      <param name="objectType">The type of the object to get the serializer for.</param>
      <param name="serializerType">The type of the serializer to retrieve.</param>
      <returns>An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Gets a type of the specified name.</summary>
      <param name="typeName">The fully qualified name of the type to load.</param>
      <returns>An instance of the type, or <see langword="null" /> if the type cannot be loaded.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Removes a previously added serialization provider.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Used to report a recoverable error in serialization.</summary>
      <param name="errorInformation">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Occurs when serialization is complete.</summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Sets the name for the specified object.</summary>
      <param name="instance">The object to set the name.</param>
      <param name="name">A <see cref="T:System.String" /> used as the name of the object.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</summary>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
      <returns>A service object of type <paramref name="serviceType" />.  
 -or-  
 <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Gets or sets a value that indicates whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not. The default is <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Provides a means of passing context state among serializers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <param name="presetValue">The given code expression preset value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Gets the expression this context represents.</summary>
      <returns>The expression this context represents.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Gets the <see cref="T:System.Type" /> of the expression.</summary>
      <returns>The <see cref="T:System.Type" /> of the expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Gets the object owning this expression.</summary>
      <returns>The object owning this expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Gets the preset value of an expression.</summary>
      <returns>The preset value of this expression, or <see langword="null" /> if not assigned.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>Provides an interface that can be used to optimize the reloading of a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>Indicates whether the designer should reload in order to import the specified compile unit correctly.</summary>
      <param name="newTree">A <see cref="T:System.CodeDom.CodeCompileUnit" /> containing the designer document code.</param>
      <returns>
        <see langword="true" /> if the designer should reload; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Provides the base class for serializing a reflection primitive within the object graph.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Serializes the given member descriptor on the given value to a statement collection.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which <paramref name="descriptor" /> is serialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Determines if the given member should be serialized.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
      <returns>
        <see langword="true" />, if the member described by <paramref name="descriptor" /> should be serialized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Holds a table of statements that is offered by the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Determines whether the table contains the given statement owner.</summary>
      <param name="statementOwner">The owner of the statement collection.</param>
      <returns>
        <see langword="true" /> if <paramref name="statementOwner" /> is in the table; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Gets the statement collection for the given owner.</summary>
      <param name="statementOwner">The owner of the statement collection.</param>
      <returns>The statement collection for <paramref name="statementOwner" />, or <see langword="null" /> if <paramref name="statementOwner" /> is not in the table.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Populates the statement table with a collection of statement owners.</summary>
      <param name="statementOwners">A collection of statement owners to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Populates the statement table with a statement owner.</summary>
      <param name="owner">The statement owner to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adds a root context to provide a definition of the root object. This class cannot be inherited</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> class.</summary>
      <param name="expression">The expression representing the root object in the object graph.</param>
      <param name="value">The root object of the object graph.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Gets the expression representing the root object in the object graph.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing the root object in the object graph.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Gets the root object of the object graph.</summary>
      <returns>The root object of the object graph.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Specifies that serializers should handle default values. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class with the option of binding to a specific member.</summary>
      <param name="member">The member to which this context is bound. Can be <see langword="null" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Gets the member to which this context is bound.</summary>
      <returns>The member to which this context is bound, or <see langword="null" /> if the context is bound to all members of an object.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Gets a value indicating whether the given member should be serialized in this context.</summary>
      <param name="member">The member to be examined for serialization.</param>
      <returns>
        <see langword="true" /> if the given member should be serialized in this context; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Provides a location into which statements can be serialized. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Gets a collection of statements offered by the statement context.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> containing statements offered by the statement context.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Serializes an object to a new type.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Deserializes the given type declaration.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">Type declaration to use for serialization.</param>
      <returns>The root object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Returns the method where statements used to serialize a member are stored.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <param name="value">The value to use for serialization.</param>
      <returns>The method used to emit all of the initialization code for the given member.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Returns an array of methods to be interpreted during deserialization.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <returns>A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Serializes the object root by creating a new type declaration that defines root.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="root">The object to serialize.</param>
      <param name="members">Optional collection of members. Can be <see langword="null" /> or empty.</param>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Specifies generic undo/redo functionality at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine" /> class.</summary>
      <param name="provider">A parenting service provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A required service cannot be found. See <see cref="T:System.ComponentModel.Design.UndoEngine" /> for required services. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> to the undo stack.</summary>
      <param name="unit">The undo unit to add</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name">The name of the unit to create.</param>
      <param name="primary">
        <see langword="true" /> to create the first of a series of nested units; <see langword="false" /> to create subsequent nested units.</param>
      <returns>A new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> with a specified name.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Discards an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">The unit to discard.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Enables or disables the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Gets the requested service.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>The requested service, if found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>The requested service, or <see langword="null" /> if the requested service is not found.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Occurs immediately before an undo action is performed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Indicates if an undo action is in progress.</summary>
      <returns>
        <see langword="true" /> if an undo action is in progress; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Occurs immediately after an undo action is performed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Encapsulates a unit of work that a user can undo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</summary>
      <param name="engine">The undo engine that owns this undo unit.</param>
      <param name="name">The name for this undo unit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Receives a call from the undo engine to close this unit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Gets an instance of the requested service.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current name of the unit.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current name of the unit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Performs an undo or redo action.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
      <returns>The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</returns>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>This class is used to generate a database query method signature, as it will be created by the typed dataset generator.</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>Initializes a new instance of the <see langword="MethodSignatureGenerator" /> class.</summary>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>Gets or sets the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object.</summary>
      <returns>The <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object, which provides code generation and code compilation interfaces for generating code and managing compilation for a single programming language. Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>Gets or sets the type of object that the query will fill.</summary>
      <returns>The type of object that the query will fill. The type will be either <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>Gets or sets the type name of the typed dataset to be filled.</summary>
      <returns>A string representing the type name of the typed dataset to be filled.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>Returns the code member method representing the database query, as generated by the typed dataset generator.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> object representing the database query, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>Returns a string representing the database query method signature, as generated by the typed dataset generator.</summary>
      <returns>A string representing the database query method signature, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>Returns a code type declaration containing the Insert, Update, and Delete methods associated with the database query.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object containing the <see langword="Insert" />, <see langword="Update" />, and <see langword="Delete" /> methods associated with the database query.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>Gets or sets a value that indicates whether the signature generated needs to return a <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>
        <see langword="true" /> if the signature generated needs to return a data table; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>Gets or sets a Boolean value specifying whether the method supports paging.</summary>
      <returns>A Boolean value specifying whether the method supports paging: <see langword="True" /> if the method supports paging; <see langword="False" /> if it does not.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>Gets or sets the category of types to use for parameters.</summary>
      <returns>A <see langword="ParameterGenerationOption" /> value specifying the category of types to use for parameters: <see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" /> (the default), <see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" />, or <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>Sets the schema of the design table for which the database query method will be generated.</summary>
      <param name="designTableContent">A string representation of the table schema.</param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>Sets the database query for which the method signature will be generated.</summary>
      <param name="methodSourceContent">A string representation of the database query.</param>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>Gets or sets the type name of the typed table to fill.</summary>
      <returns>A string indicating the type name of the typed table to fill.</returns>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>Sets the type of parameters that are generated in a typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>Parameters in the typed dataset are CLR types.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>Parameters in the typed dataset are all of <see cref="T:System.Object" />.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>Parameters in the typed dataset are Sql types.</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on an existing <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeNamespace">The namespace that provides the target namespace for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="specifiedFactory">The <see cref="T:System.Data.Common.DbProviderFactory" /> to use to override the provider contained in the <paramref name="inputFileContent" />.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>Provides the <see cref="T:System.Data.Design.TypedDataSetGenerator" /> with information for creating typed datasets that support LINQ to DataSet and hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>Generates typed datasets that have a TableAdapterManager and associated methods for enabling hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>Generates typed datasets that have data tables that inherit from <see cref="T:System.Data.TypedTableBase`1" /> in order to enable the ability to perform LINQ queries on data tables.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>Generates typed datasets that are compatible with typed datasets generated in versions of Visual Studio earlier than Visual Studio 2008.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>Returns the first provider name found in the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <returns>A string that represents the specific provider for this <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>Returns the provider name for the <paramref name="tableName" /> in the input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="tableName">A string that represents the name of the table to return the provider name from.</param>
      <returns>A string that represents the provider name for the specific table passed in to the <paramref name="tableName" /> parameter.</returns>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>Gets or sets the collection of assemblies referenced in a typed dataset.</summary>
      <returns>A collection containing all referenced assemblies in the dataset.</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>The exception that is thrown when a name conflict occurs while a strongly typed <see cref="T:System.Data.DataSet" /> is being generated.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class by passing in a collection of errors.</summary>
      <param name="list">An <see cref="T:System.Collections.IList" /> of errors.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with the specified string and inner exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>Gets a dynamic list of generated errors.</summary>
      <returns>The error list.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see langword="ISerializable" /> interface and returns the data that you must have to serialize the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class</summary>
      <param name="dataSetGenerateOptions">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> value for generating typed datasets that enable LINQ to DataSet and Hierarchical Update.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <param name="name">A <see cref="T:System.String" /> representing the name of the schema to import.</param>
      <param name="namespaceName">A <see cref="T:System.String" /> representing the namespace of the XML schema.</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the XML schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <returns>A <see cref="T:System.String" /> representing the name of the typed dataset class.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <param name="type">XMLSchemaType</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">CodeNamespace</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <returns>A string representing the name of the typed dataset class.</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations. Expands upon <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> to provide additional functionality for typed datasets created for .NET Framework version 3.5.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" /> class.</summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A T:System.Type  that represents the type you want to convert from.</param>
      <returns>
        <see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to a string, using the specified context and culture information.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext  that provides a format context.</param>
      <param name="culture">The T:System.Globalization.CultureInfo  to use as the current culture.</param>
      <param name="value">The T:System.Object  to convert</param>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a collection of standard values for the data type this validator is designed for.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
        <see langword="true" /> because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports. This method never returns <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessDesigner" /> class.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process module.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" /> class.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process module exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process thread.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" /> class.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>Provides basic design-time functionality for the <see cref="T:System.Messaging.Message" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.MessageDesigner" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Modifies the set of properties that the designer exposes through the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> that contains the set of properties to filter for the component.</param>
    </member>
    <member name="T:System.Resources.Tools.ITargetAwareCodeDomProvider">
      <summary>Defines an interface that enables the strongly typed resource builder (<see cref="T:System.Resources.Tools.StronglyTypedResourceBuilder" /> object) to determine which types and properties are available so it can emit the correct Code Document Object Model (CodeDOM) tree.</summary>
    </member>
    <member name="M:System.Resources.Tools.ITargetAwareCodeDomProvider.SupportsProperty(System.Type,System.String,System.Boolean)">
      <summary>Indicates whether the specified type on the project target framework has a specified named property.</summary>
      <param name="type">The type whose properties are to be queried.</param>
      <param name="propertyName">The name of the property to find in <paramref name="type" />.</param>
      <param name="isWritable">A flag that indicates whether the property must include a get accessor.</param>
      <returns>
        <see langword="true" /> if <paramref name="type" /> on the project target framework has a property named <paramref name="propertyname" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>Provides support for strongly typed resources. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly typed properties that match the resources referenced in the specified collection.</summary>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</param>
      <param name="internalClass">
        <see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</param>
      <param name="unmatchable">An array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly typed properties that match the resources referenced in the specified collection.</summary>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that provides the language in which the class will be generated.</param>
      <param name="internalClass">
        <see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly typed properties that match the resources in the specified .resx file.</summary>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</param>
      <param name="internalClass">
        <see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> or <paramref name="codeProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly typed properties that match the resources in the specified .resx file.</summary>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> class that provides the language in which the class will be generated.</param>
      <param name="internalClass">
        <see langword="true" /> to generate an internal class; <see langword="false" /> to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> or <paramref name="codeProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a valid resource string based on the specified input string and code provider.</summary>
      <param name="key">The string to verify and, if necessary, convert to a valid resource name.</param>
      <param name="provider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that specifies the target language to use.</param>
      <returns>A valid resource name derived from the <paramref name="key" /> parameter. Any invalid tokens are replaced with the underscore (_) character, or <see langword="null" /> if the derived string still contains invalid characters according to the language specified by the <paramref name="provider" /> parameter.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="provider" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>Provides design-time services for the <see cref="T:System.ServiceProcess.ServiceController" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the <see cref="T:System.ServiceProcess.ServiceController" /> exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the <see cref="T:System.ServiceProcess.ServiceController" /> class.</param>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing an application setting expression in a configuration file at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an application setting expression string and provides the design-time value for a control property.</summary>
      <param name="expression">An application setting expression string to evaluate. <paramref name="expression" /> does not include the <see langword="AppSettings" /> expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />.</param>
      <param name="propertyType">The control property type.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>The object referenced by <paramref name="expression" />, if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for an application setting expression.</summary>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. <paramref name="expression" /> does not include the <see langword="AppSettings" /> expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines the application setting expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>Provides a data-binding handler for a calendar.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Sets the calendar's date to the current day if the <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> property is data-bound.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to which data binding will be added.</param>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>Represents a client script element in a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItem" /> class using the provided parameters.</summary>
      <param name="text">The contents for the <see langword="script" /> element; a string of script statements to run on the client.</param>
      <param name="source">The <see langword="src" /> attribute value for the <see langword="script" /> element, specifying an external source location for the client script contents.</param>
      <param name="language">The <see langword="language" /> attribute value for the <see langword="script" /> element, specifying the language of the script statements.</param>
      <param name="type">The type attribute value for the <see langword="script" /> element, indicating the MIME type for the associated scripting engine.</param>
      <param name="id">The ID for the <see langword="script" /> element. This argument is required by the design host (for example, Visual Studio 2005).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is null (thrown by the design host).</exception>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>Gets the <see langword="ID" /> attribute value for the client script element.</summary>
      <returns>The <see langword="ID" /> value of the <see langword="script" /> element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>Gets the <see langword="language" /> attribute value for the client script element.</summary>
      <returns>The language name specified for the <see langword="language" /> attribute in the <see langword="script" /> element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>Gets the <see langword="src" /> attribute value for the client script element.</summary>
      <returns>The path to the source file specified for the <see langword="src" /> attribute in the <see langword="script" /> element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>Gets the script statements contained in the client script element.</summary>
      <returns>The script statements contained in the <see langword="script" /> element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>Gets the <see langword="type" /> attribute value for the client script element.</summary>
      <returns>The name of the MIME type associated with the <see langword="script" /> element.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>Represents a read-only collection of client script blocks that are contained within a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> class.</summary>
      <param name="clientScriptItems">An array of <see cref="T:System.Web.UI.Design.ClientScriptItem" /> elements used to initialize the collection.</param>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>Provides an HTML color string builder at design time that allows a user to select a color.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>Starts a color editor to build an HTML color property value.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Web.UI.Control" /> used to parent the picker window.</param>
      <param name="initialColor">The initial color to be shown in the picker window, in a valid HTML color format.</param>
      <returns>The color value, represented as a string in an HTML color format, or <see langword="null" /> if the builder service could not be retrieved.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>Provides a base class for a user interface to select and edit a connection string property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object by using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
      <param name="provider">A service provider object through which to obtain editing services.</param>
      <param name="value">An instance of the object being edited.</param>
      <returns>The selected connection expression, as a string object; otherwise, if a connection expression was not selected, the same <paramref name="value" /> that was passed in.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editing style that is associated with the connection string editor for the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value that indicates the editing style for the provided user interface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the provider name for the provided instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
      <returns>Always an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Puts the provider name on the specified instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>Provides properties and methods for selecting a data connection expression that is associated with a control property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a connection string expression and provides the design-time value for a control property.</summary>
      <param name="expression">A connection string expression to evaluate. The expression does not include the <see langword="ConnectionStrings" /> expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>The object referenced by the evaluated expression string if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a connection string expression.</summary>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. The expression does not include the <see langword="ConnectionStrings" /> expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> instance that defines the connection string expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>Provides designer functionality for controls that contain child controls or properties that can be modified at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds the style attributes for the control at design time.</summary>
      <param name="styleAttributes">A keyed collection of style attributes.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>Gets a value indicating if the control can be resized at design time.</summary>
      <returns>
        <see langword="true" />, if the control can be resized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>Gets the caption that is displayed for a control at design time.</summary>
      <returns>The string used for the control frame caption at design time, if the control has a design-time caption; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>Gets the style that is applied to the control frame at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> for the control frame at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>Returns the collection of style attributes for the control at design time.</summary>
      <returns>A collection of style attributes applied to the control on the design surface. The style attribute names are keys used to access the style attribute values in the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Returns the HTML markup that is used to represent the control at design time.</summary>
      <param name="regions">A collection of designer regions.</param>
      <returns>An HTML markup string that represents the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for the editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <returns>The persisted content of the region contained within the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>Returns the persistable content of the control at design time.</summary>
      <returns>
        <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.NoWrap">
      <summary>Gets a value that specifies whether to use the HTML <see langword="nowrap" /> attribute on tables.</summary>
      <returns>
        <see langword="true" /> to use the HTML <see langword="nowrap" /> attribute on tables; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content for the editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">Content to assign for the editable design region.</param>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>Provides a property structure that defines Web content at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.ContentDefinition" /> class.</summary>
      <param name="id">A string identifier for the content.</param>
      <param name="content">The default HTML markup content.</param>
      <param name="designTimeHtml">The design-time HTML markup content.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>Gets the ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> control that is associated with the current content.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> associated with the current content.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>Gets the default HTML markup for the content.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>Gets the HTML markup to represent the content at design time.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>Enumerates the possible settings for the state of a <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>The associated control displays the default content.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>The associated control displays the user content.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
      <returns>
        <see langword="true" />, if the control can be resized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>Creates HTML markup to display a specified error message at design time.</summary>
      <param name="errorMessage">The error message to include in the generated HTML markup.</param>
      <returns>An HTML markup string that contains the specified error message.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
      <param name="errorMessage">The error message to include in the generated HTML string.</param>
      <param name="e">The exception to include in the generated HTML string.</param>
      <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
      <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
      <param name="instruction">A string that contains text and markup to add to the HTML output.</param>
      <returns>A string that contains design-time HTML markup providing information about the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
      <returns>
        <see langword="true" />, if the container for the control supports data binding; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
      <returns>A <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> property that implements <see cref="T:System.Collections.IDictionary" /> and uses the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> to persist state data for the associated control at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>Gets the view-control object for the control designer.</summary>
      <returns>
        <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
      <returns>
        <see langword="true" />, if loading must be complete before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <param name="regions">A collection of control designer regions for the associated control.</param>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The design-time HTML markup for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
      <returns>A string representing the persistable inner HTML markup for the associated control. The default is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>Retrieves the persistable inner HTML markup of the control.</summary>
      <returns>The persistable inner HTML markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
      <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
      <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
      <returns>
        <see langword="true" />, if the properties of the associated control are hidden when the control is in template mode; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>Gets or sets the ID string for the control.</summary>
      <returns>The ID string for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the control designer and loads the specified component.</summary>
      <param name="component">The control being designed.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
      <returns>
        <see langword="true" />, if the control is in either template viewing or editing mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is <see langword="null" />.  
-or-  
<paramref name="callback" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is <see langword="null" />.  
-or-  
<paramref name="callback" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is <see langword="null" />.  
-or-  
<paramref name="callback" /> is <see langword="null" />.  
-or-  
<paramref name="serviceProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
      <returns>
        <see langword="true" />, if the Web server control has changed since it was last persisted or loaded; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
      <param name="propName">The property to test for data binding.</param>
      <returns>
        <see langword="true" />, if the property is data-bound; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
      <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Called when the data-binding collection changes.</summary>
      <param name="propName">The property to test for changes in its bindings collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is <see langword="true" />.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
      <returns>
        <see langword="true" />, if the properties of the control are read-only at design time; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>Registers internal data in a cloned control.</summary>
      <param name="original">The control associated with the control designer.</param>
      <param name="clone">The cloned copy of the associated control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="original" /> is null.  
-or-  
<paramref name="clone" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object that can be used at design time to access components on the Web Forms page that contains the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
      <param name="region">An editable design region contained within the design-time view of the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
      <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
      <param name="setFlag">
        <see langword="true" /> to set the flag, <see langword="false" /> to remove the flag.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>Gets an object representing the HTML markup element for the associated control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> object that represents the HTML markup element for the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>
        <see langword="true" />, if the control designer uses a temporary copy of the control for design-time preview; otherwise, <see langword="false" />, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> object used by the base class to generate design-time HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>Gets or sets a value indicating whether a <see langword="View" /> control has been created for display on the design surface.</summary>
      <returns>
        <see langword="true" />, if a control has been created for viewing on the design surface; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>Gets a value that indicates whether the control is visible at design time.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>Provides access to the state of the control designer in the design host through the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> interface. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>Represents one element, identified by the given key, in the state collection for a control designer.</summary>
      <param name="key">The name of the item to set or retrieve from the state collection.</param>
      <returns>The object identified by <paramref name="key" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>Specifies the possible locations for adding a control in a container.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>Adds the control after the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>Adds the control before the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>Adds the control at the start of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>Adds the control as the first child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>Adds the control at the end of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>Adds the control as the last child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>Provides methods for creating a Web server <see cref="T:System.Web.UI.Control" /> control or <see cref="T:System.Web.UI.ITemplate" /> interface from a string of markup that represents a persisted control or template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">The HTML markup for the control.</param>
      <returns>The <see cref="T:System.Web.UI.Control" /> that controlText represents; otherwise, <see langword="null" />, if the parser cannot build the control.</returns>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host and directives.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">The text of the HTML markup for the control.</param>
      <param name="directives">The page directives to include in the code for the control.</param>
      <returns>The <see cref="T:System.Web.UI.Control" /> that <paramref name="controlText" /> represents.</returns>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an array of controls from the specified markup using the specified designer host.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">A string that represents a collection of markup for controls.</param>
      <returns>An array of <see cref="T:System.Web.UI.Control" /> elements, parsed from <paramref name="controlText" />; otherwise, <see langword="null" />, if the parser cannot build the controls.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is <see langword="null" />.  
-or-
 <paramref name="controlText" /> is <see langword="null" /> or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an <see cref="T:System.Web.UI.ITemplate" /> interface from the specified template markup.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="templateText">A string containing the template markup.</param>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Parses the specified template markup and creates an <see cref="T:System.Web.UI.ITemplate" /> interface.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="templateText">A string containing the template markup.</param>
      <param name="directives">Any directives to add to the beginning of the code for the template.</param>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>Provides methods for persisting Web server controls at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>Gets a string of data that represents the persisted form of the specified control.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <returns>A string that represents the persisted form of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified control, using the specified designer host.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
      <returns>A string that represents the persisted form of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that can persist the inner properties of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to use.</param>
      <param name="component">The component to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that can persist the inner properties of the specified control.</summary>
      <param name="component">The component to persist the inner properties of.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
      <returns>A string that contains the information to persist about the inner properties of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Writes a string of data that represents the persisted form of the specified template to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write the persisted template data to.</param>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified template.</summary>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
      <returns>A string that represents the persisted form of the template.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>Provides a type converter for <see cref="T:System.Web.UI.DataBindingCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a data binding collection to the specified type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the component or control to which the data binding collection belongs.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to provide additional culture information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>The object produced by the type conversion. If the <paramref name="destinationType" /> parameter is of type <see cref="T:System.String" />, this method returns an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>Provides a user interface for editing a collection of data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified data-binding collection using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control the collection belongs to.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> to use.</param>
      <param name="value">The collection to edit.</param>
      <returns>The new collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control to retrieve the edit style for.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> object that specifies the editor style of the component or control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>Provides a base class for a data-binding handler.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Binds the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>Provides a UI handler for data binding values.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>Adds a data binding for the specified property and the specified value item list, if the current control has data bindings and the current object does not already have a binding.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can provide additional context information.</param>
      <param name="propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property to add a data binding for.</param>
      <param name="valueUIItemList">An <see cref="T:System.Collections.ArrayList" /> of items that have data bindings.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>Provides a type converter for a property representing the field name of a bound column field in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> instance containing available values for assignment to the associated control property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>Provides a type converter that can retrieve a list of data fields from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data fields present within the selected data source if information about them is available.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; <see langword="false" /> if other values are possible.  
As implemented in this class, this method always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> can be called to find a common set of values the object supports; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>Provides a type converter that can retrieve a list of data members from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data members present within the selected data source, if information about them is available.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the data members of the data source selected for the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; <see langword="false" /> if other values are possible.  
As implemented in this class, this method always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />. This implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>Represents the structure, or schema, of a data field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> class using a specified <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> object that the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> object  describes.</param>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>Gets the type of data stored in the data field.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of data the data field contains.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the data field automatically increments for each new row added to the table or view.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> is numeric and the value of the column increments automatically as new rows are added to the <see cref="T:System.Data.DataTable" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.DataColumn" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the data field are required to be unique.</summary>
      <returns>
        <see langword="true" /> if data in the data field is unique; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>Gets a value indicating the size of data that can be stored in the data field.</summary>
      <returns>The number of bytes the column can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>Gets the name of the data field.</summary>
      <returns>The name of the data field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>Gets a value indicating whether the data field can accept <see langword="null" /> values.</summary>
      <returns>
        <see langword="true" /> if the data field can accept <see langword="null" /> values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the data field.</summary>
      <returns>This property always returns <see langword="-1" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the data field is in the primary key for the containing table or view.</summary>
      <returns>
        <see langword="true" /> if the data field is in the primary key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the data field are resolved.</summary>
      <returns>This property always returns -1.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>The <see cref="T:System.Web.UI.Design.DataSetSchema" /> class represents the structure, or schema, of a data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetSchema" /> class using a specified <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> that the <see cref="T:System.Web.UI.Design.DataSetSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>Gets an array containing information about each view in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>Represents the structure, or schema, of a <see cref="T:System.Data.DataTable" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> class using a specified <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>
        <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>Gets an array containing information about each data field in the view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>Gets the name of the view using its <see cref="P:System.Data.DataTable.TableName" /> property.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>Provides a type converter for a property representing a Boolean field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available Boolean values that can be assigned to the associated field.</summary>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>A collection of Boolean values.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of data sources accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.  
As implemented in this class, this method always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the standard data sources accessible to the control.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indicating the component or control to get values for.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values; <see langword="false" /> if other values are possible.  
As implemented in this class, this method always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />. This implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <param name="component">The component to check as a valid data source.</param>
      <returns>
        <see langword="true" /> if <paramref name="component" /> implements <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>Provides design-time support in a design host for the <see cref="T:System.Web.UI.DataSourceControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>Gets a list of items that are used to create an action list menu at design time.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object containing the action list items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> can be called; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup for displaying the associated data source control at design time.</summary>
      <returns>The markup for the design-time display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <param name="viewName">The name of the view.</param>
      <returns>This implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>Returns an array of the view names that are available in this data source.</summary>
      <returns>An array of view names.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is <see langword="false" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is <see langword="false" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">
        <see langword="true" /> to allow events when refreshing the schema; <see langword="false" /> to disable the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> and <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> events when refreshing the schema.</param>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after the data source events have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>Provides a value that indicates whether two schemas are equal.</summary>
      <param name="schema1">The first schema to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceSchema" />).</param>
      <param name="schema2">The second schema to compare.</param>
      <returns>
        <see langword="true" /> if both schemas are equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Gets a value indicating whether the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event or the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method occurs.</summary>
      <returns>
        <see langword="true" /> if events are being suppressed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>Provides a value that determines whether two schema views are equal.</summary>
      <param name="viewSchema1">The first view to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />).</param>
      <param name="viewSchema2">The second view to compare.</param>
      <returns>
        <see langword="true" /> if both views are equivalent; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>Provides a type converter for a property representing a field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
      <returns>
        <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="typeFilter">A type used to filter fields to include in the standard values list.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>Provides the abstract base class for creating formats that can be applied to a custom Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class.</summary>
      <param name="name">A string that identifies a specific <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>Applies the associated formatting to the specified control.</summary>
      <param name="control">A Web server control to apply the formatting to.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>Returns a copy of the associated control in order to provide a preview before applying the format to the control.</summary>
      <param name="runtimeControl">A run-time version of the Web server control.</param>
      <returns>The <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> method returns a copy of the associated Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>Gets the name of a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>Gets a <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> object that is used by the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to render a design-time preview of the associated control.</summary>
      <returns>An  object that is used by the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to render a design-time preview of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> property of the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to the end of the collection.</summary>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
      <returns>The index at which the format was added to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>Removes all formats from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Determines whether the specified format is contained within the collection.</summary>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
      <returns>
        <see langword="true" />, if the specified format is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object within the collection.</summary>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to locate within the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="format" /> within the collection; otherwise, -1, if the format is not in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="format" />.</param>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to get or set in the collection.</param>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> at the specified index in the collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>Gets the maximum outer dimensions of the control as it will appear at run time.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> structure that contains the height and width of the control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object from the collection.</summary>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <param name="array">The <see cref="T:System.Array" /> to receive the designated items.</param>
      <param name="index">The starting index for the items to copy.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements that are contained in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe) when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>
        <see langword="true" />, if the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> is synchronized; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> interface that iterates through the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to add to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</param>
      <returns>The index of the added item.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains a specific value when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
      <returns>
        <see langword="true" />, if the object is in the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The value.</param>
      <returns>The index of a item in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the collection at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index at which to insert <paramref name="value" />.</param>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection has a fixed size when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this method, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Always <see langword="true" />, which indicates that the collection cannot be replaced or deleted.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the element at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>Represents the style for a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object. This class is used primarily by control developers.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> class using default values.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents for the associated control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> values. The default is <see langword="NotSet" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>Serves as the base class for design-time data source view classes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class using the specified data source designer and view name.</summary>
      <param name="owner">The parent data source designer.</param>
      <param name="viewName">The name of the view in the data source.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />  
-or-  
<paramref name="viewName" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>
        <see langword="true" /> if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows instead of the data itself.</summary>
      <returns>
        <see langword="true" /> if retrieving the total number of data rows is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
      <returns>
        <see langword="true" /> if a sorted view on the underlying data source is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>Gets a reference to the designer that created this <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> control.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object provided when the current <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> instance was created.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the specified number of rows, indicating whether it is returning sample data or real data.</summary>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">
        <see langword="true" /> to indicate that the returned data is sample data; <see langword="false" /> to indicate that the returned data is live data.</param>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>Gets the name of the view as provided when this instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class was created.</summary>
      <returns>The view name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>Provides a base class for designers for data views based on hierarchical data. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> that is the designer for the associated control.</param>
      <param name="viewPath">A unique path to the block of data to use for the view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />  
-or-  
<paramref name="viewPath" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>Gets the associated designer.</summary>
      <returns>The parent <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <param name="isSampleData">
        <see langword="true" /> to indicate the returned data is sample data; <see langword="false" /> to indicate the returned data is live data.</param>
      <returns>This implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>Gets the path to the block of data that is presented in the view.</summary>
      <returns>The path provided when creating the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view for the associated control.</summary>
      <returns>This implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>Represents an object in a design host such as Visual Studio 2005. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerObject" /> class.</summary>
      <param name="designer">The parent designer.</param>
      <param name="name">The name of the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />.  
-or-  
<paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>Gets the associated designer component.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>Gets a service from the design host, as identified by the provided type.</summary>
      <param name="serviceType">The type of service being requested.</param>
      <returns>The requested service.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>Gets the name of the object.</summary>
      <returns>The name of the object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>Gets the object's properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object containing the object's properties and their values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType">The type of service being requested.</param>
      <returns>The requested service.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>Defines a region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />.  
-or-  
<paramref name="designer" /> is an empty string ("").  
-or-  
<paramref name="name" /> is <see langword="null" />.  
-or-  
<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer, optionally setting the instance as a selectable region in the designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <param name="selectable">
        <see langword="true" /> to select the region; otherwise, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />.  
-or-  
<paramref name="designer" /> is an empty string ("").  
-or-  
<paramref name="name" /> is <see langword="null" />.  
-or-  
<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>Gets or sets the description for a designer region.</summary>
      <returns>A text description of the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>Defines the HTML attribute name for a designer region.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>Gets or sets the friendly display name for a designer region.</summary>
      <returns>A text display name for the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>Gets or sets a value indicating whether the region size is to be explicitly set on the designer region by the design host.</summary>
      <returns>
        <see langword="true" />, if the design host should set the size on the designer region; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>Retrieves the size of the designer region on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the designer region size on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>Gets or sets a value indicating whether to highlight the designer region on the design surface.</summary>
      <returns>
        <see langword="true" />, if the visual designer should highlight the designer region on the design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>Gets or sets a value indicating whether the designer region can be selected by the user on the design surface.</summary>
      <returns>
        <see langword="true" />, if the designer region can be selected by the user on the design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>Gets or sets a value indicating whether the designer region is currently selected on the design surface.</summary>
      <returns>
        <see langword="true" />, if the designer region is currently selected on the design surface; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>Gets or sets optional user data to associate with the designer region.</summary>
      <returns>An object that contains user data stored for the designer region. The default is <see langword="null" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects within a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class for the specified control designer.</summary>
      <param name="owner">The control designer that owns this collection of designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object to the end of the collection.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to add to the collection.</param>
      <returns>The index at which the region was added to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>Removes all regions from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>Gets a value indicating whether the specified region is contained within the collection.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
      <returns>
        <see langword="true" />, if the region is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object within the collection.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="region" /> within the collection; otherwise, -1, if <paramref name="region" /> is not in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert the region.</param>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object has a fixed size.</summary>
      <returns>
        <see langword="true" />, if the size of the collection cannot be changed by adding or removing items; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is read-only.</summary>
      <returns>
        <see langword="true" />, if the collection cannot be changed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is synchronized (thread safe).</summary>
      <returns>
        <see langword="true" />, if access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> is synchronized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to get or set in the collection.</param>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> at the specified index in the collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.  
-or-
 <paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>Gets the control designer that owns the designer region collection.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> that represents the control designer that owns the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object from the collection.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, if access to the collection is synchronized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="o">The item to add to the collection.</param>
      <returns>The index at which the item was added to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
      <returns>
        <see langword="true" />, if the region is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
      <returns>The zero-based index of the first occurrence of the object within the collection; otherwise, -1, if the object is not in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert the object.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="false" />, if the collection dynamically increases in size as new objects are added; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="index">The zero-based index of the object to get in the collection.</param>
      <returns>The object at the specified index in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when you click on a selected control or a designer region in a selected control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> class with the specified region and location.</summary>
      <param name="region">The designer region that was clicked; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />.</param>
      <param name="location">The location that was clicked, relative to the upper left corner of the region; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>Gets the location within the control that was clicked.</summary>
      <returns>The <see cref="T:System.Drawing.Point" /> identifying the location within the region that was clicked.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>Gets the designer region that was clicked, if any.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the click event applies to, or <see langword="null" /> if no region was clicked.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>Provides helper methods that can be used by control designers to generate sample data for data-bound properties at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names indicating that the columns are connected to a data source.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> object with three columns and no data.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names that indicate that the columns contain sample data.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> with three columns. These columns can contain data of type string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>Creates a sample <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data.</summary>
      <param name="referenceData">A data source with the desired schema to use as the format for the sample <see cref="T:System.Data.DataTable" /> object.</param>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains columns with the same names and data types as the provided <paramref name="referenceData" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data and optionally containing column names indicating that the data is bound data.</summary>
      <param name="referenceData">An <see cref="T:System.Collections.IEnumerable" /> object containing data.</param>
      <param name="useDataBoundData">If <see langword="true" />, the column names indicate that they contain bound data.</param>
      <returns>A <see cref="T:System.Data.DataTable" /> object.</returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>Gets an event handler for data binding.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>Gets a collection of property descriptors for the data fields of the specified data source.</summary>
      <param name="dataSource">The data source from which to retrieve the data fields.</param>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that describes the data fields of the specified data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>Gets the specified data member from the specified data source.</summary>
      <param name="dataSource">An <see cref="T:System.ComponentModel.IListSource" /> that contains the data in which to find the member.</param>
      <param name="dataMember">The name of the data member to retrieve.</param>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the specified data member from the specified data source, if it exists.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> is <see langword="null" />  
-or-  
<paramref name="dataMember" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>Gets the names of the data members in the specified data source.</summary>
      <param name="dataSource">The data source from which to retrieve the names of the members.</param>
      <returns>An array of type <see langword="String" /> that contains the names of the data members in the specified data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>Adds the specified number of sample rows to the specified data table.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to which the sample rows are added.</param>
      <param name="minimumRows">The minimum number of rows to add.</param>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing sample data for use at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data source name.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object that contains the data source.</param>
      <param name="dataSource">The name of the data source to retrieve.</param>
      <returns>An object implementing either <see cref="T:System.ComponentModel.IListSource" /> or <see cref="T:System.Collections.IEnumerable" /> representing the selected data source, or <see langword="null" /> if the data source or the designer host could not be accessed.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data-source name and member name.</summary>
      <param name="component">The object implementing <see cref="T:System.ComponentModel.IComponent" /> that contains the data sourced property.</param>
      <param name="dataSource">The data source to retrieve.</param>
      <param name="dataMember">The data member to retrieve.</param>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the data member, or <see langword="null" /> if the data source, member, or component's site could not be accessed.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>Used by control localization to read and write resources at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>When overridden in a derived class, creates a global resource provider using the provided <see cref="T:System.IServiceProvider" /> interface and resource class name.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
      <param name="classKey">The name of the resource class.</param>
      <returns>Either an <see cref="T:System.Web.Compilation.IResourceProvider" /> or an <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource provider using the provided reference to the design host.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
      <returns>An <see cref="T:System.Web.Compilation.IResourceProvider" /> or a class derived from <see cref="T:System.Web.Compilation.IResourceProvider" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource writer for using the provided reference to the design host.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
      <returns>A local resource writer for using the provided reference to the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveAttribute">
      <summary>Specifies a custom attribute of a directive.</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.Directives.DirectiveAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.AllowedOnMobilePages">
      <summary>Gets or sets an attribute of a directive that specifies whether the attribute is allowed on mobile pages.</summary>
      <returns>
        <see langword="true" /> if the attribute is allowed on mobile pages; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.BuilderType">
      <summary>Gets or sets the type that is associated with the attribute.</summary>
      <returns>The type that is associated with the attribute.</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.Culture">
      <summary>Gets or set whether a culture value that is associated with the attribute.</summary>
      <returns>
        <see langword="true" /> if a culture value that is associated with the attribute; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.RenameType">
      <summary>Gets or sets a value representing the renamed type of the attribute.</summary>
      <returns>A value representing the renamed type of the attribute.</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageExtensions">
      <summary>Gets or sets a value indicating whether server language extensions are available.</summary>
      <returns>
        <see langword="true" /> if server language extensions are available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageNames">
      <summary>Gets or sets a value indicating whether server language names are available.</summary>
      <returns>
        <see langword="true" /> if server language names are available; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveRegistry">
      <summary>Provides support when creating directive IntelliSense at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)">
      <summary>Returns a collection of directives based on the <paramref name="frameworkVersion" /> parameter and the <paramref name="extension" /> parameter.</summary>
      <param name="frameworkVersion">The .NET Framework version.</param>
      <param name="extension">The file name extension.</param>
      <returns>A read only collection.</returns>
    </member>
    <member name="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute">
      <summary>Specifies a custom name for a directive attribute.</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.SchemaElementNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute" /> class.</summary>
      <param name="value">The name value.</param>
    </member>
    <member name="P:System.Web.UI.Design.Directives.SchemaElementNameAttribute.Value">
      <summary>Gets a name value for the directive attribute.</summary>
      <returns>A name value for the directive attribute.</returns>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>Represents an editable content region within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name and the initial value of the <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> property.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
      <param name="serverControlsOnly">
        <see langword="true" /> to have the region accept only Web server controls for content; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>Gets or sets the HTML markup for the content of the region.</summary>
      <returns>HTML markup representing the content of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>Returns a <see cref="T:System.Web.UI.Design.ViewRendering" /> object containing the design-time HTML markup for the given control.</summary>
      <param name="control">The control for which to get the <see cref="T:System.Web.UI.Design.ViewRendering" /> object for the current region.</param>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>Gets or sets a value indicating whether the region can accept only Web server controls.</summary>
      <returns>
        <see langword="true" /> if the region can contain only Web server controls; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value indicating whether the region can be bound to a data source.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content supports binding to a data source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an expression string and provides the design-time value for a control property.</summary>
      <param name="expression">An expression string to evaluate. The expression does not include the expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />. This typically is provided by the expression builder.</param>
      <param name="propertyType">The type of the control property to which <paramref name="expression" /> is bound.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.</summary>
      <returns>A string representing the prefix for expressions supported by the class derived from the <see cref="T:System.Web.UI.Design.ExpressionEditor" />; otherwise, an empty string (""), if the expression editor does not have an associated expression prefix.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression prefix.</summary>
      <param name="expressionPrefix">The expression prefix used to find the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionPrefix" />; otherwise, <see langword="null" />, if <paramref name="expressionPrefix" /> is not defined or is not associated with an <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression builder type.</summary>
      <param name="expressionBuilderType">The type of the derived expression builder class, used to locate the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionBuilderType" />; otherwise, <see langword="null" />, if <paramref name="expressionBuilderType" /> cannot be located or has no associated <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionBuilderType" /> is <see langword="null" />.  
-or-
 <paramref name="serviceProvider" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet that is associated with the current expression editor.</summary>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> that defines the custom expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for a custom expression. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</summary>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</summary>
      <returns>The custom expression string for the current property values.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the expression string is valid.</summary>
      <returns>
        <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the expression editor sheet.</summary>
      <returns>An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>Provides a type converter for expression binding collections.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an expression binding collection to the specified type.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the component or control the expression binding collection belongs to.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that can be used to provide additional culture information.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <returns>If <paramref name="destinationType" /> is not of type <see cref="T:System.String" />, the object produced by the type conversion; otherwise, if <paramref name="destinationType" /> is a string, an empty string ("").</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>Provides a user interface for selecting and editing an expressions binding collection at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object with the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information such as the associated control.</param>
      <param name="provider">A service provider object through which editing services can be obtained.</param>
      <param name="value">An instance of the object being edited.</param>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> object containing the selected expressions; otherwise, if no expressions are selected, the <paramref name="value" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor for the specified context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the editing style for the provided user interface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of the hierarchical data sources that are accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <param name="component">The component to check as a valid data source.</param>
      <returns>
        <see langword="true" /> if <paramref name="component" /> implements <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>This implementation always returns <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>This implementation always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <param name="viewPath">The unique path to the block of data to use in creating the view.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is <see langword="false" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is <see langword="false" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data.</summary>
      <param name="preferSilent">This parameter is not used in this implementation. However, it should be supported in derived classes.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after they have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property is <see langword="false" />.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Indicates whether data source events have been disabled.</summary>
      <returns>
        <see langword="true" /> if the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> or <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event has been disabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>Provides basic design-time functionality for ASP.NET server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>Gets or sets the DHTML behavior that is associated with the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> that is associated with the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>Gets the data bindings collection for the current control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataBindingCollection" /> that contains the data bindings for the current control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>Gets the design-time object representing the control that is associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object on the design surface.</summary>
      <returns>The design-time object representing the control associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>Gets the expression bindings for the current control at design time.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> that contains the expressions strings set for properties in the current control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and sets the component for design.</summary>
      <param name="component">The control element for design.</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>Called when a behavior is associated with the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>Called when a behavior disassociates from the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Provides a method that can be used to indicate when a data binding has changed.</summary>
      <param name="propName">The name of the property that has changed.</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>Provides a way to perform additional processing when the associated control is attached to a parent control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Sets the list of events that are exposed at design-time for the <see cref="T:System.ComponentModel.TypeDescriptor" /> object for the component.</summary>
      <param name="events">An <see cref="T:System.Collections.IDictionary" /> that contains the names of the events of the component to expose.</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows the designer to expose a specific set of properties through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object at design time.</summary>
      <param name="properties">The set of properties to filter for the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>Gets or sets a value indicating whether to create a field declaration for the control in the code-behind file for the current design document during serialization.</summary>
      <returns>
        <see langword="true" />, if a declaration should be created; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>Provides a base designer for all intrinsic HTML controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>Provides a data-binding handler for a hyperlink property.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Resolves design-time data-binding for the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>Provides an interface for access to a master page from a content page at design time, if provided by a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>Gets the <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects for the content placeholders that are identified in the master page.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing identifiers and <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>Retrieves the current state of the identified content place holder.</summary>
      <param name="identifier">The identifier for a content place holder.</param>
      <returns>The current state of the identified content placeholder.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>Sets the current state of the identified content place holder.</summary>
      <param name="identifier">The identifier for a content place holder.</param>
      <param name="state">A <see cref="T:System.Web.UI.Design.ContentDesignerState" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>Enables the extension of specific behaviors of a control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>Gets the design-time view control object for the designer.</summary>
      <returns>The view control object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>Gets or sets the design-time HTML for the designer's control.</summary>
      <returns>The HTML used at design time to format the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform processing when the designer enters or exits template mode.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>Provides an interface for design-time access to the HTML markup for a control that is associated with a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>Retrieves the value of the identified attribute on the tag.</summary>
      <param name="name">The name of the attribute.</param>
      <returns>A string containing the value of the attribute.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>Retrieves the HTML markup for the content of the tag.</summary>
      <returns>The HTML markup for the content of the tag.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>Retrieves the complete HTML markup for the control, including the outer tags.</summary>
      <returns>The outer HTML markup for the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>Gets a value indicating whether or not an attribute or the content of a tag has changed.</summary>
      <returns>
        <see langword="true" /> if the tag has changed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>Deletes the specified attribute from the tag.</summary>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified attribute and creates the attribute, if necessary.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>Sets the HTML markup for the content of the tag.</summary>
      <param name="content">The HTML markup for the content of the tag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property of the tag.</summary>
      <param name="dirty">The value for the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>Provides an interface for access to the visual representation and content of a control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>Gets the designer region that contains the associated control, if any.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerRegion" /> object if the associated control is contained in a designer region; otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>Retrieves the outer bounds of the designer view.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> for which you want to retrieve the bounds.</param>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> containing information about the location and measurements of the view at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>Notifies the design host that the area represented by the provided rectangle needs to be repainted on the design surface.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> representing the location and outer measurements of the view on the design surface. The coordinate-system origin for this rectangle is the top-left corner of the element to which the behavior is attached.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>Gets the designer component for the naming container of the associated control, if any.</summary>
      <returns>An IDesigner object representing the designer component for the naming container for the associated control; otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />.</summary>
      <param name="viewFlags">A member of the <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration.</param>
      <param name="setFlag">
        <see langword="true" /> to set the flag, <see langword="false" /> to cancel the flag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Puts the provided content into the provided designer region.</summary>
      <param name="region">A <see cref="T:System.Web.UI.Design.DesignerRegion" /> into which the content is to be put.</param>
      <param name="content">The HTML markup to be put into the designer region.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>Gets a value indicating whether designer regions are supported.</summary>
      <returns>
        <see langword="true" /> if designer regions are supported; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>Causes the associated control to redraw the invalidated regions within its client area.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>An event raised by the design host for the view and designer component.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>Provides an interface for design-time access to a schema provider in a design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema.</summary>
      <returns>
        <see langword="true" />, if the schema can be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema for the data source.</summary>
      <param name="preferSilent">
        <see langword="true" /> to disable data-binding events until after the schema has been refreshed; <see langword="false" /> to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>Gets the current schema object for the designer.</summary>
      <returns>The current schema object for the designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>Defines the basic functionality for a data source designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the underlying data source has a configuration wizard that can be launched with the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the underlying data source can refresh its schema; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>Launches the underlying data source's configuration wizard.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source has changed in a way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> for the specified view.</summary>
      <param name="viewName">The name of a view in the underlying data source.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> containing information about the identified view, or <see langword="null" /> if a view with the specified name is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>Gets the names of the views in the underlying data source.</summary>
      <returns>An array of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Resumes raising data source events after calling the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Suppresses all events raised by a data source until the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>Provides basic functionality for describing the structure of a data field at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>Gets the type of data stored in the field.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the field automatically increments for each new row.</summary>
      <returns>
        <see langword="true" /> if the field's <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> is numeric and the underlying field increments automatically as new rows are added; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the field is editable.</summary>
      <returns>
        <see langword="true" /> if the field is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the field are required to be unique.</summary>
      <returns>
        <see langword="true" /> if data in the field must be unique; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>Gets a value indicting the size of data that can be stored in the field.</summary>
      <returns>The number of bytes the field can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>Gets the name of the field.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>Gets a value indicating whether the field can accept <see langword="null" /> values.</summary>
      <returns>
        <see langword="true" /> if the field can accept <see langword="null" /> values; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the field.</summary>
      <returns>The maximum number of digits used to represent the values of the field if the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type. If this property is not implemented, it should return -1.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the field is in the primary key.</summary>
      <returns>
        <see langword="true" /> if the field is in the primary key; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the field are resolved.</summary>
      <returns>If the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type, returns the number of decimal places to which values are resolved, otherwise <see langword="-1" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>Defines an interface that a control designer can implement to provide access to a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an <see cref="T:System.ComponentModel.IListSource" /> (such as a <see cref="T:System.Data.DataSet" />) for the data source, and provides a <see langword="DataMember" /> property to select a particular list (or <see cref="T:System.Data.DataTable" />) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>Gets a reference to the selected data source from the data source provider.</summary>
      <returns>The currently selected data source object of this data source provider.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>Provides basic functionality for describing the structure of a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>Gets an array of schema descriptors for views contained in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>Defines a set of methods and properties used to examine a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects that represent the child views contained in the current view.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>Gets an array containing information about each field in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects representing each of the fields in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>Gets the name of the view.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>Provides an interface for creating a custom <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object.</summary>
      <returns>A design time resource provider factory.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>Used by the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class to localize data at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>Creates a key, using the provided string, to use to retrieve data from the given resource.</summary>
      <param name="resourceName">The name of the resource.</param>
      <param name="obj">The object to localize.</param>
      <returns>The key used to write or retrieve <paramref name="obj" /> from <paramref name="resourceName" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>Provides an interface for accessing a document item retrieved from a design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>Provides access to the contents of a document item that is retrieved from the design host.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>Opens a document item that is retrieved from the design host.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>Provides an interface for a project folder in a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>Adds a document to a project folder in a design host, such as Visual Studio 2005.</summary>
      <param name="name">The name of the document.</param>
      <param name="content">An array of type <see cref="T:System.Byte" /> containing the document contents.</param>
      <returns>An <see cref="T:System.Web.UI.Design.IDocumentProjectItem" /> representing the added document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>Creates a new folder in a project folder of a design host, such as Visual Studio 2005.</summary>
      <param name="name">The name for the new folder.</param>
      <returns>An <see cref="T:System.Web.UI.Design.IFolderProjectItem" /> representing the new folder.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>Gets a collection of items in a project folder in a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the items in the project folder of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for a class that is derived from the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the underlying data source has a configuration wizard that can be launched with <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />, otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source control has changed in some way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view that is associated with the data source control.</summary>
      <param name="viewPath">The XPath for the part of the data source to retrieve.</param>
      <returns>The named data source view that is associated with the data source control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">
        <see langword="true" /> to suppress events raised while refreshing the schema; otherwise <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores events after calling the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Turns off events in the data source control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>Defines an interface that enables the extension of specific behaviors of an HTML control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>Gets or sets the designer that the behavior is associated with.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> that the behavior is associated with.  
   
 The <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>Gets the element that the designer is associated with.</summary>
      <returns>The object that the designer is associated with.  
   
 The <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>Gets the specified attribute.</summary>
      <param name="attribute">The attribute to retrieve.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
      <returns>The attribute that was retrieved.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Gets the specified style attribute.</summary>
      <param name="attribute">The style attribute to retrieve.</param>
      <param name="designTimeOnly">
        <see langword="true" /> if the attribute is only active at design time; otherwise, <see langword="false" />.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
      <returns>The style attribute that was retrieved.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>Removes the specified attribute.</summary>
      <param name="attribute">The attribute to remove.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Removes the specified style attribute.</summary>
      <param name="attribute">The style attribute to remove.</param>
      <param name="designTimeOnly">
        <see langword="true" /> if the attribute is only active at design time; otherwise, <see langword="false" />.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>Sets the specified attribute to the specified object.</summary>
      <param name="attribute">The attribute to set.</param>
      <param name="value">The object on which to set the attribute.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Sets the specified style attribute to the specified object.</summary>
      <param name="attribute">The attribute to set.</param>
      <param name="designTimeOnly">
        <see langword="true" /> if the attribute is only active at design-time; otherwise, <see langword="false" />.</param>
      <param name="value">The object to set the attribute on.</param>
      <param name="ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>Provides a user interface for selecting a URL that references an image.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ImageUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This string is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>The filter string that can be used to filter the file list of the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>Provides an interface for an item that is retrieved at design time from a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>Gets the URL for the item relative to the design host.</summary>
      <returns>The relative URL.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>Gets the name of the item.</summary>
      <returns>The name of the item.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>Gets a reference to the containing item, if any.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />, if the current item is contained within another item; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>Gets the path for a project item.</summary>
      <returns>The path for the item.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>Provides an interface to manage a template editing area.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>Closes the control and optionally saves any changes.</summary>
      <param name="saveChanges">
        <see langword="true" /> if changes to the document should be saved; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>Gets the style for the editing frame.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the Web server control style attributes for the editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>Gets or sets the initial height of the control.</summary>
      <returns>The initial height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>Gets or sets the initial width of the control.</summary>
      <returns>The initial width of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>Gets the name of the editing frame.</summary>
      <returns>The name of the editing frame.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>Opens and displays the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>Resizes the control to the specified width and height.</summary>
      <param name="width">The new width for the control.</param>
      <param name="height">The new height for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>Saves any changes to the document.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>Gets a set of names of templates to use.</summary>
      <returns>An array of template names.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>Gets the template styles for the control.</summary>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Style" /> objects that represent the template styles for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>Changes the name of the control to the specified name.</summary>
      <param name="newName">The new name for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>Gets or sets the verb that invokes the template.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that invokes the template.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>Provides services for editing control templates at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, using the specified name, template names, control style, and template styles.</summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame.</param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame.</param>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template.</param>
      <returns>The name of the parent template.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>
        <see langword="true" /> if the service supports nested template editing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>Provides an interface for creating services for administering a Web site at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>Starts the Web administration facility in the design host.</summary>
      <param name="arguments">An <see cref="T:System.Collections.IDictionary" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>Provides an interface for accessing a Web application in a design host, such as Microsoft Visual Studio 2005, at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>Returns a project item from a design host based on its URL.</summary>
      <param name="appRelativeUrl">The relative path to the project item to retrieve.</param>
      <returns>A project item from a design host based on its URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>Returns a <see cref="T:System.Configuration.Configuration" /> object representing the current Web application in the design host.</summary>
      <param name="isReadOnly">
        <see langword="true" /> to indicate the returned <see cref="T:System.Configuration.Configuration" /> is editable; otherwise, <see langword="false" />.</param>
      <returns>An object representing the current Web application in the design host.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>Gets the root project item from the design host.</summary>
      <returns>The root project item from the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>Provides an interface that can look up information about the types used in the current Web Forms project.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>Gets the type of the specified object.</summary>
      <param name="tagPrefix">The tag prefix for the type.</param>
      <param name="typeName">The name of the type.</param>
      <returns>The <see cref="T:System.Type" /> of the object, if it could be resolved.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project.</summary>
      <returns>The register directives for the current project.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified type of object.</summary>
      <param name="objectType">The type of the object.</param>
      <returns>The tag prefix for the specified object type, if it could be located.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>Provides methods to start specific user interfaces for building properties at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>Starts a <see cref="T:System.Web.UI.Design.ColorBuilder" /> to build a color property.</summary>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.ColorBuilder" />.</param>
      <param name="initialColor">The initial color for the editor to pre-select.</param>
      <returns>The color that was selected. This value will be a named color, or an RGB color expressed in HTML color format (#RRGGBB).</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Launches an editor to build a URL property.</summary>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</param>
      <param name="initialUrl">The initial URL to display in the selection interface.</param>
      <param name="baseUrl">The base URL used to construct relative URLs.</param>
      <param name="caption">A caption that presents a message in the selection interface.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the selection interface.</param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</param>
      <returns>A string that contains the URL returned by the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>Provides methods to access services for tracking the loading state of a Web Forms document, handling events at load time, accessing a document's location, managing a document's undo service, and setting a new selection within the document.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>Creates a discardable undo unit.</summary>
      <returns>The new discardable undo unit.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>Discards the specified undo unit.</summary>
      <param name="discardableUndoUnit">The undo unit to discard.</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>Gets the URL at which the document is located.</summary>
      <returns>The URL at which the document is located, or <see langword="null" /> if the document has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>Enables the ability to undo actions that occur within undoable action units or transactions.</summary>
      <param name="enable">
        <see langword="true" /> if actions should be undoable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>Gets a value indicating whether the document service is currently loading.</summary>
      <returns>
        <see langword="true" /> if the document service is loading; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>Occurs when the service has finished loading.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>When implemented in a derived class, updates the current selection.</summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>Provides a user interface for selecting and editing a mail file name for a property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MailFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>Gets the caption for the editor dialog.</summary>
      <returns>The caption for the design-time dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>Gets the file filter string for the dialog (such as "*.txt").</summary>
      <returns>The filter for selecting files in the design-time dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>Provides a design-time user interface for selecting a Microsoft Access database file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MdbDataFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>Extends design-time behavior for read/write server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a property, including description and value, to an intrinsic HTML style.</summary>
      <param name="propName">The name of the property to map.</param>
      <param name="varPropValue">The value of the property.</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>Provides notification that is raised when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event of the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> class.</summary>
      <param name="sender">The object sending the event.</param>
      <param name="ce">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the display of the control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing a resource expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a resource expression and provides the design-time value for a control property.</summary>
      <param name="expression">A resource expression to evaluate. <paramref name="expression" /> does not include the <see langword="Resources" /> expression prefix.</param>
      <param name="parseTimeData">An object supplying additional parse data, in the form of a <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> value.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns a resource expression editor sheet that is initialized with the input expression string and service provider implementation.</summary>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to initialize the expression editor sheet.</param>
      <returns>A <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> that defines the resource expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a resource expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> class.</summary>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>Gets or sets the key that matches the filename for the resource in the project's global resource folder.</summary>
      <returns>The key for a resource file in the global resource folder.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>Returns a resource expression that is formed by the expression editor sheet property values.</summary>
      <returns>The resource expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the resource expression string is valid.</summary>
      <returns>
        <see langword="true" /> if the resource expression string is valid; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>Gets or sets the name of the resource, which is used as a key to find the resource value.</summary>
      <returns>The name of the resource.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditor">
      <summary>Provides properties and methods for composing a <see langword="RouteURL" /> expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a <see langword="RouteUrl" /> expression and provides the design-time value.</summary>
      <param name="expression">A <see langword="RouteUrl" /> expression to evaluate. The expression does not include the <see langword="RouteUrl" /> expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
      <returns>The URL for the specified route and route parameter values if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a <see langword="RouteUrl" /> expression.</summary>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the <see langword="RouteUrl" /> expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
      <returns>A <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> instance that defines the <see langword="RouteUrl" /> expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a <see langword="RouteUrl" /> expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> class.</summary>
      <param name="expression">A <see langword="RouteUrl" /> expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression">
      <summary>Returns a <see langword="RouteUrl" /> expression that is formed by the expression editor sheet property values.</summary>
      <returns>The <see langword="RouteUrl" /> expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the <see langword="RouteUrl" /> expression string is valid.</summary>
      <returns>
        <see langword="true" /> if the <see langword="RouteUrl" /> expression string is valid; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName">
      <summary>Gets or sets the name of the route that a URL is to be generated for.</summary>
      <returns>The name of the route that a URL is to be generated for.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues">
      <summary>Gets or sets the URL parameter names and values that are to be used to generate a URL from a route.</summary>
      <returns>The URL parameter names and values that are to be used to generate a URL from a route.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditor">
      <summary>Provides properties and methods for composing a <see langword="RouteValue" /> expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a <see langword="RouteValue" /> expression and provides the design-time value.</summary>
      <param name="expression">A <see langword="RouteValue" /> expression to evaluate. The expression does not include the <see langword="RouteValue" /> expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information that is used to evaluate the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
      <returns>The value of the specified URL parameter if the expression evaluation succeeded; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a <see langword="RouteValue" /> expression.</summary>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the <see langword="RouteValue" /> expression prefix.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
      <returns>A <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> instance that defines the <see langword="RouteValue" /> expression properties.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a <see langword="RouteValue" /> expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> class.</summary>
      <param name="expression">A <see langword="RouteValue" /> expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression">
      <summary>Returns a <see langword="RouteValue" /> expression that is formed by the expression editor sheet property values.</summary>
      <returns>The <see langword="RouteValue" /> expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the <see langword="RouteValue" /> expression string is valid.</summary>
      <returns>
        <see langword="true" /> if the <see langword="RouteValue" /> expression string is valid; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue">
      <summary>Gets or sets the name of the URL parameter to be evaluated by the <see langword="RouteValue" /> expression.</summary>
      <returns>The name of the URL parameter to be evaluated by the <see langword="RouteValue" /> expression.</returns>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>Provides a list of valid skin IDs for a control at design time, based on the currently applicable theme.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the provided format context and type.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext that provides a format context for the control being designed.</param>
      <param name="sourceType">A <see cref="T:System.Type" />.</param>
      <returns>
        <see langword="true" />, if the conversion can be made; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to the specified type, using the specified context.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext that provides a format context for the control being designed.</param>
      <param name="destType">A T:System.Type that represents the type to convert to.</param>
      <returns>
        <see langword="true" />, if a conversion can be made; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given string to a <see cref="P:System.Web.UI.Control.SkinID" /> object using the specified context and culture information.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext that provides a format context that represents the control being designed.</param>
      <param name="culture">A T:System.Globalization.CultureInfo. If <see langword="null" /> is passed, the current culture is assumed.</param>
      <param name="value">The string to convert.</param>
      <returns>An object that can be cast as a <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> object, if the conversion can be made; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the specified context and culture information.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext that provides a format context that represents the control being designed.</param>
      <param name="culture">A T:System.Globalization.CultureInfo. If <see langword="null" />, the current culture is assumed.</param>
      <param name="value">The <see cref="P:System.Web.UI.Control.SkinID" /> object to convert.</param>
      <param name="destinationType">The T:System.Type to convert <paramref name="value" /> to (must be a <see cref="T:System.String" />).</param>
      <returns>An object that represents the converted value.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be applied to the control that is represented by the given format context.</summary>
      <param name="context">An T:System.ComponentModel.ITypeDescriptorContext that provides a format context that represents the control being designed. <paramref name="context" /> or properties of <paramref name="context" /> can be <see langword="null" />.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects; otherwise, <see langword="null" />, if the control does not support skins.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value indicating whether the control that is represented by the given context supports a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be picked from a list.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the control being designed.</param>
      <returns>
        <see langword="true" />, if <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>Indicates whether a control designer requires a preview instance of the control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class and sets the initial value of the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> property.</summary>
      <param name="supportsPreviewControl">The initial value to assign for <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />.</param>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>Gets an instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class that is set to the default preview value. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same preview attribute setting as the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <param name="obj">The object to compare with the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> attribute and its value is the same as this instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>Returns the hash code for this instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <returns>A 32-bit signed integer hash code for the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>Indicates whether the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class is set to the default preview attribute value.</summary>
      <returns>
        <see langword="true" /> if the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> is equal to the default preview attribute value; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>Gets a value indicating whether the control designer requires a temporary preview control at design time.</summary>
      <returns>
        <see langword="true" /> if the designer uses a temporary copy of the associated control for design-time preview; <see langword="false" /> if the designer uses an instance of the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> control that is contained in the designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>Extends design-time behavior for template-based server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>Gets the active template editing frame.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> that is the currently active template editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>Gets a value indicating whether or not this designer will allow the viewing or editing of templates.</summary>
      <returns>
        <see langword="true" /> if the designer will allow the viewing or editing of templates; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>When overridden in a derived class, creates a template editing frame for the specified verb.</summary>
      <param name="verb">The template editing verb to create a template editing frame for.</param>
      <returns>The new template editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether the designer allows data binding.</summary>
      <returns>
        <see langword="true" />, if the designer allows data binding; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>Opens a particular template frame object for editing in the designer.</summary>
      <param name="newTemplateEditingFrame">The template editing frame object to open in the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Closes the currently active template editing frame after saving any relevant changes.</summary>
      <param name="fSwitchingTemplates">
        <see langword="true" /> when switching from one template editing frame to another; otherwise <see langword="false" />.</param>
      <param name="fNested">
        <see langword="true" /> if this designer is nested (one or more levels) within another control whose designer is also in template editing mode; otherwise <see langword="false" />.</param>
      <param name="fSave">
        <see langword="true" /> if templates should be saved on exit; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects, if any.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template's container.</summary>
      <param name="templateName">The name of the template.</param>
      <returns>A string representing the data.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <param name="templateName">The name of the template.</param>
      <returns>The data source of the container of the specified template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>When overridden in a derived class, gets the template's content.</summary>
      <param name="editingFrame">The template editing frame to retrieve the content of.</param>
      <param name="templateName">The name of the template.</param>
      <param name="allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only.</param>
      <returns>The content of the template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>Gets the template editing verbs available to the designer.</summary>
      <returns>The template editing verbs available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>Creates a template from the specified text.</summary>
      <param name="text">The text to retrieve a template from.</param>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> from the specified text.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the type of the parent of the template property.</summary>
      <param name="templateName">The name of the template to return the type of the parent for.</param>
      <returns>The type of the object that has the template property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>Gets a string of text that represents the specified template.</summary>
      <param name="template">The <see cref="T:System.Web.UI.ITemplate" /> to convert to text.</param>
      <returns>A string that represents the specified template.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="template" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the designer document is in template mode.</summary>
      <returns>
        <see langword="true" /> if the designer document is in template mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>Provides an opportunity to perform additional processing when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Delegate to handle the component changed event.</summary>
      <param name="sender">The object sending the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>Provides an opportunity to perform additional processing when the parent of this designer is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform additional processing when the template mode is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>Saves the active template editing frame.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>When overridden in a derived class, sets the specified template's content to the specified content.</summary>
      <param name="editingFrame">The template editing frame to provide content for.</param>
      <param name="templateName">The name of the template.</param>
      <param name="templateContent">The content to set for the template.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing a template definition.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> elements.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>Updates the design-time HTML.</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>Defines an editable region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> class using the provided template definition.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> instance for the template to edit.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>Gets or sets whether the template occurs only once per instance of the containing control, such as a <see langword="header" /> template, or can appear many times according to available data, such as an <see langword="item" /> template.</summary>
      <returns>
        <see langword="true" /> if the template appears only once; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value that indicates whether the template can be bound to a data source.</summary>
      <returns>
        <see langword="true" /> if the template represented by the region can be bound to a data source; otherwise, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>Gets a <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object describing the template that is referenced by the region.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>Provides properties and methods that define a template element in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, and property name.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />,  
-or-  
<paramref name="templatedObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and whether to limit the template contents to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template content should allow only Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />,  
-or-  
<paramref name="templatedObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and <see cref="T:System.Web.UI.WebControls.Style" /> object.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />,  
-or-  
<paramref name="templatedObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, <see cref="T:System.Web.UI.WebControls.Style" /> object, and whether to limit content to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template should limit content to Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is <see langword="null" />,  
-or-  
<paramref name="templatedObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>Gets a value that indicates whether the template should enable editing of its contents.</summary>
      <returns>
        <see langword="true" /> if editing is allowed; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>Gets or sets the HTML markup representing the content of the template.</summary>
      <returns>HTML markup for the content of the template.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>Retrieves a value indicating whether the template should limit content to Web server controls, as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>
        <see langword="true" /> if content is limited to Web server controls; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>Retrieves the style that should be applied to the template as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>Retrieves or sets a value indicating whether the template supports data binding.</summary>
      <returns>
        <see langword="true" /> if the template supports data binding; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>Retrieves the component in which the template resides. This property is read-only.</summary>
      <returns>The component as set when this <see cref="T:System.Web.UI.Design.TemplateDefinition" /> was created.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>Retrieves the property name for the template that the design host should display in the property grid.</summary>
      <returns>The name of the template as it should appear in the Properties list of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>Provides services for editing control templates at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> class with the specified designer host.</summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> implementation, used to access components at design time.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> object, using the specified name, template names, control style, and template styles.</summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame.</param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame.</param>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Finalize">
      <summary>Finalizes the service.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template.</param>
      <returns>The name of the parent template.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>
        <see langword="true" /> if the service supports nested template editing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>Represents a designer verb that creates a template editing frame, and that can be invoked only by a template editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class with the specified verb text and index.</summary>
      <param name="text">The text to show for the verb on a menu.</param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class.</summary>
      <param name="text">The text to show for the verb on a menu.</param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs.</param>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that can use this verb.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>Attempts to free resources before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>Gets the index or other user data for the verb.</summary>
      <returns>The index or user data for the verb.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>A collection of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects representing the template elements in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name.</summary>
      <param name="groupName">The name of the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name and style.</summary>
      <param name="groupName">The name of the group</param>
      <param name="groupStyle">A <see cref="T:System.Web.UI.WebControls.Style" /> object to be applied to templates in the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>Adds the provided <see cref="T:System.Web.UI.Design.TemplateDefinition" /> to the group.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>Gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>Gets the current style for the group.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> for the group if set; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>Gets a value indicating whether there are any templates in the group.</summary>
      <returns>
        <see langword="true" /> if there are no templates in the group; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>Gets an array of all template definitions in the group.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object to the end of the collection.</summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
      <returns>The index at which the <see cref="T:System.Web.UI.Design.TemplateGroup" /> was added to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>Adds the template groups in an existing <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object to the current <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</summary>
      <param name="groups">A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> that contains the groups to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groups" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>Removes all groups from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>Determines whether the specified group is contained within the collection.</summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
      <returns>
        <see langword="true" /> if the <paramref name="group" /> is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>Copies the groups in the collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.  
-or-  
<paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.  
-or-  
The number of elements in the source <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object within the collection.</summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="group" /> within the collection; otherwise, -1, if <paramref name="group" /> is not in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="group" />.</param>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to get or set in the collection.</param>
      <returns>The <see cref="T:System.Web.UI.Design.TemplateGroup" /> at <paramref name="index" /> in the collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.  
-or-
 <paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object from the collection.</summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.  
-or-
 <paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="false" />, if access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is not synchronized (thread safe); otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object to use to synchronize access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to use to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
      <returns>The index at which <paramref name="o" /> was added to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
      <returns>
        <see langword="true" />, if <paramref name="o" /> is in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="o" /> within the collection; otherwise, -1, if <paramref name="o" /> is not in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="o" />.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="false" />, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> dynamically increases as new objects are added; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>
        <see langword="false" />, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> can be added, modified, and removed; otherwise, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see the <see cref="T:System.Collections.IList" /> class.</summary>
      <param name="index">The zero-based index of the object to get in the collection.</param>
      <returns>The object at <paramref name="index" /> in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when the template mode changes for a control on the design surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> class with the specified template group.</summary>
      <param name="newTemplateGroup">A new template group that is used to initialize the <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>Gets the template group that was created when you entered template editing mode.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroup" /> if you entered template editing mode with a new template; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>Extends design-time behavior for Web server controls that have a <see langword="Text" /> property that is persisted as inner text.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the associated control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>Provides a data-binding handler for a data-bound control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Data-binds the specified control.</summary>
      <param name="designerHost">An object implementing <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data-bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>A delegate that refers to a method in a custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> object that is to be called by the <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> method for implementing property changes in the designer's associated control.</summary>
      <param name="context">The method to call when the transaction is invoked.</param>
      <returns>
        <see langword="true" /> if the transaction completed successfully; <see langword="false" /> if the transaction should be rolled back.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>Represents the structure, or schema, of an object type.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.TypeSchema" /> class using the provided <see cref="T:System.Type" /> object.</summary>
      <param name="type">A <see cref="T:System.Type" /> that describes an object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>Gets an array of schema descriptors for views into a data source.</summary>
      <returns>An array of instances of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />, or of instances of a class that implements the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> interface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>Starts a URL editor that allows a user to select or create a URL. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>Creates a UI to create or pick a URL.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window.</param>
      <param name="initialUrl">The initial URL to be shown in the picker window.</param>
      <param name="caption">The caption of the picker window.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window.</param>
      <returns>The URL returned from the UI.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window.</param>
      <param name="initialUrl">The initial URL to be shown in the picker window.</param>
      <param name="caption">The caption of the picker window.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window.</param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection.</param>
      <returns>The URL returned from the UI.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window.</param>
      <param name="initialUrl">The initial URL to be shown in the picker window.</param>
      <param name="caption">The caption of the picker window.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window.</param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection.</param>
      <returns>The URL returned from the UI.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>Defines identifiers for settings of a <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>Build a URL that references a path relative to the current path, rather than one that references a fully qualified, absolute path.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>Use no additional options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>Provides a user interface for selecting a URL.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption to display on the selection dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style provided by the <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this method should return the same object it was passed.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>Provides designer functionality for user controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>Gets the action list collection for the user control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the action list tags for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the user control can be resized.</summary>
      <returns>
        <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the user control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Control.ID" /> property of a child control is empty or <see langword="null" />.</exception>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>Provides a dialog box for selecting files to edit at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>Gets the caption for the dialog box.</summary>
      <returns>The caption for the editor window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>Gets the file name filter string used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that filters the list of files available in the dialog box, such as "*.txt".</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>Represents the kind of event that has occurred on a view of a control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>Indicates that a view event was raised for a click on a designer region.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>Indicates that a view event was raised for drawing a control on the design surface.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>Indicates that a view event was raised for changing the template mode of a control designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewEventArgs" /> class for the type of view event on the design surface.</summary>
      <param name="eventType">The type of action that raised the event; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />.</param>
      <param name="region">The designer region that the action applies to; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />.</param>
      <param name="eventArgs">The event arguments associated with <paramref name="eventType" />; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>Gets the event arguments that are associated with the action that raised the event.</summary>
      <returns>An <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> that contains additional event data that is specific to the type of event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>Gets the type of action that raised the event.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewEvent" /> that specifies the type of action that raised the event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>Gets the designer region that the event applies to.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the action applies to.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised by visual design tools, such as Visual Studio 2005, implementing the <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interface. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.Design.ViewEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>Indicates which features are enabled with the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method of a designer.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>Enables painting events for displaying a custom control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>Postpones all events until after the control is completely loaded.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>Enables template editing at design time.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>Contains the design-time markup for content and regions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content and regions.</summary>
      <param name="content">HTML markup.</param>
      <param name="regions">A collection that contains the regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content, regions, and visibility mode.</summary>
      <param name="content">The HTML markup.</param>
      <param name="regions">A collection of regions</param>
      <param name="visible">A value that indicates whether the control is rendered.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>Gets the design-time HTML markup.</summary>
      <returns>The HTML markup to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>Gets a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects at design time.</summary>
      <returns>A collection of regions.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>Gets a value that indicates whether the control is visible.</summary>
      <returns>
        <see langword="true" /> if the control is rendered; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>Implements a designer property to shadow the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name and path of the data file associated with the <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.String" /> that contains the design-time connection string for the associated <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control on the design surface.</summary>
      <returns>The markup that represents the control on the design surface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>Provides design-time support in a visual designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>When overridden in a derived class, typically unhooks events from the previous data source, and then attaches new events to the new data source.</summary>
      <returns>
        <see langword="true" /> if a connection to a new data source was performed, typically; <see langword="false" /> if the old and new data sources are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>When overridden in a derived class, creates a new data source for the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>When overridden in a derived class, performs the necessary actions to set up the associated control that is derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> with which this designer is associated.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property for the associated control.</summary>
      <returns>The data-binding expression used by the associated control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.DataSourceControl" /> associated with the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>When overridden in a derived class, unhooks events from the current data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> object, and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control at design time.</summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Provides the markup that is used to render the control at design time if the control is empty or if the data source cannot be retrieved.</summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object changes.</summary>
      <param name="forceUpdateView">
        <see langword="true" /> to force the update of design-time markup; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object loads a new schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> containing the properties to filter.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>In a design host, such as Visual Studio 2005, displays a dialog box to assist the user in creating a data source.</summary>
      <param name="controlDesigner">A reference to this designer.</param>
      <param name="dataSourceType">The type of data source.</param>
      <param name="configure">
        <see langword="true" /> to enable editing of the configuration, or <see langword="false" /> to disable configuration editing.</param>
      <param name="dataSourceID">The ID of a <see cref="T:System.Web.UI.DataSourceControl" /> control on the page.</param>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>Provides a component editor base class for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" /> class.</summary>
      <param name="initialPage">The index in the array of page control types, of the initial page to display.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Edits the specified component by using the specified context descriptor and parent window.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
      <param name="obj">An <see cref="T:System.Object" /> implementing the <see cref="T:System.ComponentModel.IComponent" />, which represents the component to edit.</param>
      <param name="parent">The <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the parent window.</param>
      <returns>
        <see langword="true" /> the component was successfully edited; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>Gets the index of the initial page to display in the component editor.</summary>
      <returns>The index of the initial page in the array.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>Provides a base class for components that provide design-time support in a designer host for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>Gets or sets the value of the data key field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>Gets or sets the value of the data member field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>Gets or sets the value of the data source property of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>Gets or sets the designer's version of the data source ID property and is used to shadow the corresponding property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that is the data source ID of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> representing the default view of the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the designer and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <param name="selectedDataSource">An object implementing an <see cref="T:System.Collections.IEnumerable" /> that is used as a template for the data format.</param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source data should contain.</param>
      <param name="dummyDataSource">
        <see langword="true" /> if the returned data source contains dummy data; <see langword="false" /> if the returned data source contains data from an actual data source.</param>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain.</param>
      <param name="dummyDataSource">
        <see langword="true" /> if the returned data source contains dummy data; <see langword="false" /> if the returned data source contains data from an actual data source.</param>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> of the associated control, resolved to the <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> parameter; otherwise, <see langword="null" /> if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property of the associated control; otherwise, <see langword="null" /> if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <param name="templateName">A <see cref="T:System.String" /> that specifies the name of the template for which to get the data source.</param>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface containing a design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>Invokes a component editor for the associated control.</summary>
      <param name="initialPage">The index of the page with which to initialize the component editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Handles the <see langword="AutoFormat" /> event.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when an automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that is the source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>Represents the method that handles the property-builder event.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that is the source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>Can be overridden to implement functionality that should occur when a style of the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Can be overridden to implement functionality that should occur when the designer template-editing verbs have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing an <see cref="T:System.Collections.IDictionary" /> interface of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>
        <see langword="true" /> if the schema can be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">
        <see langword="true" /> to disable data-binding events until after the schema has been refreshed; <see langword="false" /> to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>Provides design-time support in a visual designer for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control to render on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add properties in the properties grid, or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.BulletedList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows the designer to filter the set of events that the associated control will expose at design time.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the <see cref="T:System.ComponentModel.EventDescriptor" /> objects representing the events of the control. The keys in the <see cref="T:System.Collections.IDictionary" /> are event names.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Button" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Button" /> at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>Provides an Auto Format dialog box for a <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>Creates a new AutoFormatPage instance associated with a <see cref="T:System.Web.UI.WebControls.Calendar" /> instance for a designer host.</summary>
      <param name="calendar">The <see cref="T:System.Web.UI.WebControls.Calendar" /> instance for which the AutoFormatePage is displayed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>Executes any initialization that was delayed until the first idle time</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>Occurs when the <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> is activated.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>Handles changes in the pre-defined schema choices</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>Handles changes in the predefined schema choices</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>Saves any changes into the component</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>Gets all the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object containing the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object for this designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Called when an auto-format scheme has been applied to the control.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>Gets the action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AllowResize">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control allows resizing.</summary>
      <returns>
        <see langword="true" /> if the control allows resizing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>Gets the collection of automatic format schemes that will be displayed in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which a definition of the current view of the associated control has been added.</param>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the persisted form of the current template of the associated control.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that is not used by this <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> override.</param>
      <returns>A <see cref="T:System.String" /> containing the persisted form of the current template of the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the markup that renders to a placeholder containing information about the error that occurred while attempting to create or render the associated control at design time.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown while creating or rendering the associated control.</param>
      <returns>The markup for the placeholder that contains information about the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.ChangePassword" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>
        <see langword="true" /> if the control uses an outer table container to apply inline CSS style rules; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the value of a template of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to set content for.</param>
      <param name="content">A <see cref="T:System.String" /> containing a persisted control or template.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>Extends design-time behavior for controls that implement the methods of the <see cref="T:System.Web.UI.WebControls.CompositeControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>Creates the child controls of this <see cref="T:System.Web.UI.WebControls.CompositeControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" />, which is the control associated with this designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Content" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized on the visual designer surface.</summary>
      <returns>
        <see langword="true" /> if the control can be resized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time from the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> associated with the design-time markup generated by <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />.</param>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> from which to get the content.</param>
      <returns>The persistence string for the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>Gets the inner markup of the control.</summary>
      <returns>The inner markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in which to set the content.</param>
      <param name="content">The persistence string for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized.</summary>
      <returns>
        <see langword="true" /> if the control can be resized; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the HTML that is used to represent the control at design time using the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to use for generating design-time HTML.</param>
      <returns>The HTML that is used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object from which to extract content.</param>
      <returns>The content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>Gets the persistable inner HTML of the control.</summary>
      <returns>The persistable inner HTML of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> instance to set.</param>
      <param name="content">The new content for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object for each step associated with the underlying wizard control, and then adds it to the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which regions associated with the wizard control are added.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Converts the child controls associated with the underlying wizard control to a custom navigation template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The HTML for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Exposes the properties associated with each default step through the property grid on the designer tool.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the component's base class. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer uses the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control itself to generate the design-time HTML or uses a temporarily created copy.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>Provides an editor in a design host such as Visual Studio 2005 to edit the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> object of a <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the items in the collection associated with the collection editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Returns a value indicating whether a provided object can be removed from the collection.</summary>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WizardStep" /> object to determine whether it can be removed from the collection.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.WizardStep" /> can be removed from the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a modal dialog box for editing the contents of a collection of <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>Gets the <see langword="Help" /> keyword used to display the Help topic or topic list when users click the Help button or press the F1 key in the editor's dialog box.</summary>
      <returns>The <see langword="Help" /> keyword to display the Help topic or topic list when Help is requested from the editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>Provides a base class for design-time support for controls that derive from <see cref="T:System.Web.UI.WebControls.DataBoundControl" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>Disconnects events from the previous data source and connects them to the current data source.</summary>
      <returns>
        <see langword="true" /> if the data-bound control connected to a new data source; <see langword="false" /> if the data source did not change.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>Invokes the standard dialog box to create a new data source control, and sets the new data source control's ID to the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the data-bound control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to the data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to bind to the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>Gets the shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property of the underlying data-bound control.</summary>
      <returns>The shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source of the underlying data-bound control.</summary>
      <returns>The designer of the data source of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Disconnects the data-bound control from data source events.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets the design-time data source from either the associated <see langword="DataSourceDesigner" /> or the <see langword="DataSource" /> property.</summary>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface referencing the design-time data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>Gets dummy sample data to render the data-bound control on the design surface if sample data cannot be created from the <see langword="DataSourceDesigner" /> or <see langword="DataSource" /> properties.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface containing dummy sample data used to render the data-bound control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Overridden by the designer to shadow run-time properties of the data-bound control with corresponding properties implemented by the designer.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties to filter.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>Gets the number of rows that the data-bound control displays on the design surface.</summary>
      <returns>The number of rows that the data-bound control displays on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>
        <see langword="true" /> if the designer can refresh the data source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an <see langword="IListSource" /> object (such as a <see cref="T:System.Data.DataSet" /> object) for the data source, and provides a <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property to select a particular list (or <see cref="T:System.Data.DataTable" /> object) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property of the associated control, or <see langword="null" /> if a data source is not found.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value indicating whether the designer should include "Choose a data source" in its action list.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner">
      <summary>Provides design-time support in a visual designer for adding and editing data fields in a data-bound control, such as <see cref="T:System.Web.UI.WebControls.GridView" /> or <see cref="T:System.Web.UI.WebControls.DetailsView" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField">
      <summary>When overridden in a derived class, creates an empty field object.</summary>
      <returns>An empty field object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>When overridden in a derived class, creates a new field object using the specified data field information.</summary>
      <param name="fieldSchema">Schema information that contains the structure of a data field.</param>
      <returns>A new field object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, creates a <see cref="T:System.Web.UI.WebControls.TemplateField" /> field for the specified data field.</summary>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
      <returns>The new template field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.DefaultNodeText">
      <summary>When overridden in a derived class, gets the default text that is displayed for the data field in the fields editor.</summary>
      <returns>The default text that is displayed for the data field in the fields editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNewDataSourceName(System.Type,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Gets an unique ID for a control that is created when a data field is converted into a <see cref="T:System.Web.UI.WebControls.TemplateField" />.</summary>
      <param name="controlType">The type of the control that will be created.</param>
      <param name="mode">The data entry mode for the control.</param>
      <returns>A unique ID for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>When overridden in a derived class, gets the name that is displayed for the data field in the fields editor.</summary>
      <param name="dataControlField">The data field.</param>
      <returns>The name that is displayed for the data field in the fields editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <param name="serviceType">The type of service object to get.</param>
      <returns>The service object of the specified type.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplate(System.Web.UI.WebControls.DataBoundControl,System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.ITemplate" /> object that contains the template markup for the specified data-bound control.</summary>
      <param name="control">The data-bound control.</param>
      <param name="templateContent">The template markup.</param>
      <returns>An object that contains the template markup for the specified data-bound control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object for the specified data field.</summary>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
      <returns>The new template field.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, gets a value that indicates whether the data field is enabled in the fields editor.</summary>
      <param name="parent">The data-bound control that contains the data field.</param>
      <returns>A value that indicates whether the data field is enabled in the fields editor.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the fields editor.</summary>
      <returns>The service provider implementation, typically provided by the design host, which can be used to obtain additional design-time services.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.UsesSchema">
      <summary>When overridden in a derived class, gets a value that indicates whether schema information is used to load the data fields.</summary>
      <returns>
        <see langword="true" /> if schema information is used to load the data fields; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>Provides an editing user interface (UI) for a data control field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> and <see cref="T:System.IServiceProvider" /> objects.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> containing a reference to the associated designer.</param>
      <param name="value">The object to edit.</param>
      <returns>The final value of the object after it has been edited.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default value is <see langword="Modal" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>Provides an editing user interface (UI) for the column collection of a <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value using the specified context descriptor and service provider.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> object containing a reference to the associated designer.</param>
      <param name="value">The object to edit.</param>
      <returns>The final value of the object after it has been edited.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default is <see langword="Modal" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to 0.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
      <returns>A template editing frame.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both the managed and unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</summary>
      <returns>The HTML markup that is used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML markup used to represent an empty template-based control at design time.</summary>
      <returns>The HTML markup used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup displayed at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The HTML markup displayed at design time for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template container.</summary>
      <param name="templateName">The name of the template.</param>
      <returns>The data item property of the container of the template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> from which to get the content.</param>
      <param name="templateName">The name of the template.</param>
      <param name="allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only.</param>
      <returns>The content of the template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the <see cref="T:System.Type" /> object corresponding to the parent of the specified template.</summary>
      <param name="templateName">The name of the template.</param>
      <returns>The <see cref="T:System.Type" /> corresponding to the parent of the specified template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>Called when the columns of the template change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to set the content for.</param>
      <param name="templateName">The name of the template.</param>
      <param name="templateContent">The new content for the template.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataList" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class, and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataList" /> control can be resized.</summary>
      <returns>
        <see langword="true" /> if the data list has templates; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both the managed and unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</summary>
      <returns>The HTML that is used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML used to represent an empty template-based control at design time.</summary>
      <returns>The HTML used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML to display at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The HTML displayed at design time for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the template container.</summary>
      <param name="templateName">The name of the template.</param>
      <returns>The <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the container of the template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance from which to get the content.</param>
      <param name="templateName">The name of the template.</param>
      <param name="allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only.</param>
      <returns>The content of the template.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>Called when the data source to which the underlying control is bound loads a new schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance for which to set the content.</param>
      <param name="templateName">The name of the template.</param>
      <param name="templateContent">The new content for the template.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>Gets a value indicating whether there are templates defined for the associated control.</summary>
      <returns>
        <see langword="true" /> if the associated control has templates defined; otherwise <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>Creates a user-selectable list of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the available ADO.NET providers.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names are an exclusive list of possible values.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names that can be picked from a list.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>Creates a user-selectable list of data source names.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the specified source type to the native type of the converter.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="sourceType">The <see cref="T:System.Type" /> of the object for which conversion is being requested.</param>
      <returns>
        <see langword="true" /> if <paramref name="sourceType" /> is a string; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture of the <paramref name="value" /> parameter.</param>
      <param name="value">The object to convert.</param>
      <returns>The <paramref name="value" /> parameter is returned as a string.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is other than a string or <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available data source names.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the controls that implement the <see cref="T:System.Web.UI.IDataSource" /> interface and are available for use in the given context.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned data source names are an exclusive list of possible values.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of data source names that can be picked from a list.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value that indicates whether the specified component is a valid data source.</summary>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
      <returns>
        <see langword="true" /> if <paramref name="component" /> is a valid data source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.DetailsView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which to add definitions of the selectable and clickable regions in the design-time view of the control.</param>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
      <returns>The content for an editable region of the design-time view of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.DetailsView" />, control which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view for the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the <paramref name="Properties" /> grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows to show.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control associated with the designer, to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>Provides a component editor for embedded mail object collections in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to gain additional context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.FormView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes for display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.FormView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.FormView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds or removes properties in the properties grid in a design host at design time, or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>
        <see langword="true" /> if the control uses an outer table container to apply inline CSS style rules; otherwise, <see langword="false" />. The default is <see langword="false" /></returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always returns <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>Gets or sets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>Gets or sets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.GridView" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.GridView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view of the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>Gets or sets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view for the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>Gets or sets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>
        <see langword="true" /> if the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HiddenField" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.HiddenField" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.HiddenField" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>Provides design-time support in a designer host for the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>Performs the actions that are necessary to connect to the current data source.</summary>
      <returns>
        <see langword="true" /> if a connection to a new data source was performed; <see langword="false" /> if the old and new data source are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>Creates a new data source for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> to bind to the design-time data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>Provides access to the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />, which implements the <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> representing the default view of the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Performs the actions that are necessary to disconnect from the current data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets a data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the control should render its default action lists, which contain a data source ID drop-down list and related tasks.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>Creates a user-selectable list of hierarchical data source names.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value indicating whether the specified component is a valid data source.</summary>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="component" /> is a valid data source; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> objects in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.HotSpot" /> collection elements can be selected at one time.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>Gets the multiple data types that the collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> can create.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> object.</summary>
      <returns>A string that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HyperLink" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the associated hyperlink control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Label" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LinkButton" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>Performs data binding of a <see cref="T:System.Web.UI.WebControls.ListControl" /> Web server control within a visual designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Performs data binding on the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>Serves as the base class for designers that provide design-time support in the Visual Web Designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for the designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the specified control to the design-time data source.</summary>
      <param name="dataBoundControl">The associated control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" />, or a copy of that control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>Gets or sets the data text field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> of the list control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>Gets or sets the data value field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> of the list control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />, resolved to the <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface and containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source for the associated control has changed.</summary>
      <param name="forceUpdateView">A <see cref="T:System.Boolean" /> that indicates whether the design-time markup is to be unconditionally updated. This parameter is ignored.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove additional properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties to expose for the associated control at design time.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the associated control should render its default action lists.</summary>
      <returns>Always returns <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> objects in a control that is derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.ListItem" /> elements can be selected at one time.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Literal" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Login" /> Web-server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>Gets the designer action-list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control allows resizing.</summary>
      <returns>
        <see langword="true" /> if the control allows resizing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the template that is used to render the associated control at design time.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time after an error has occurred.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Login" />, that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>
        <see langword="true" /> if the control uses an outer table container to apply inline CSS style rules; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginName" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginName" /> at design time after an error has occurred.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control that is associated with the designer, to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginStatus" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the <see cref="T:System.Web.UI.WebControls.LoginView" /> are added.</param>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the current template that is used to render the associated control at design time.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to obtain content.</param>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when the current template is not defined.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time after an error has occurred.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.LoginView" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.LoginView" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the control that is associated with this designer.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.LoginView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>Provides an editor for selecting message body files in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>Gets the caption to appear on the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> form.</summary>
      <returns>A string that is the caption to appear on the editor form.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>Gets the list of file types for the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> object to accept.</summary>
      <returns>A string specifying a user-friendly name for each accepted file type and file specifications for each type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>Provides a component editor for the <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the data bindings collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> interface, through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that indicates the context of the object being edited.</param>
      <returns>The editing style that is associated with this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the provider can refresh the schema.</summary>
      <returns>
        <see langword="true" /> if the schema can be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.Menu" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Menu" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when no markup is otherwise available.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> object that was thrown.</param>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Menu" /> at design time after an error has occurred.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source to use at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> to use as a data source for the associated <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Menu" />, which implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
      <exception cref="T:System.ArgumentException">component is not a <see cref="T:System.Web.UI.WebControls.Menu" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Menu" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <param name="preferSilent">If <see langword="true" />, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>Gets a schema that describes the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the structure of the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" /> property.</summary>
      <returns>
        <see langword="true" />, if the schema can be refreshed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see the <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" /> method.</summary>
      <param name="preferSilent">
        <see langword="true" /> to indicate that error messages should not be displayed when exceptions occur during processing; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>Gets the current schema object for the designer. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" /> property.</summary>
      <returns>The current schema object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a copy of the associated control or use the control itself to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>Provides a component editor for the collection that is specified by the <see cref="P:System.Web.UI.WebControls.Menu.Items" /> property of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the menu item collection of the associated control.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
      <returns>Always returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> objects in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <param name="itemType">The <see cref="T:System.Type" /> of item to create.</param>
      <returns>A new instance of the specified type, <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.MultiView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MultiViewDesigner.NoWrap">
      <summary>Gets a value that indicates that the <see langword="nowrap" /> HTML attribute should not be used.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called; <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>Displays the Configure Data Source wizard on the visual designer surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>Returns a data source view with the specified name.</summary>
      <param name="viewName">A string containing the name of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.</param>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> with the name specified by <paramref name="viewName" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>Returns a list of data source view names for the associated control.</summary>
      <returns>A string array containing the names of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> objects of the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Extracts the metadata for the Select method from the business object that is specified by the associated control.</summary>
      <param name="preferSilent">If <see langword="true" />, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>Gets or sets the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> method of the associated control is called.</summary>
      <returns>A string containing the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> is called.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>Gets or sets the name of the type that contains the methods that are specified in the associated control.</summary>
      <returns>A string containing the name of the type that contains the methods that perform the Delete, Insert, Select, and Update database operations specified in the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>Provides the design-time view that is associated with the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> that owns this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
      <param name="viewName">A string containing the name of this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform a Delete operation.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform a Delete operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Insert operation.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Insert operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the associated data source control can perform server-based paging.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the associated data source control can return the total number of rows that are returned by a query.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the associated data source control can sort rows.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Update operation.</summary>
      <returns>
        <see langword="true" /> if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Update operation; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control.</summary>
      <param name="minimumRows">An integer containing the minimum number of rows to retrieve.</param>
      <param name="isSampleData">A value indicating whether the data returned is sample data or real data.</param>
      <returns>A sample of the data represented by the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> or <see langword="null" /> if the designer cannot generate any sample data.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> that describes the view and the properties of the objects in the list or <see langword="null" /> if the schema is unavailable.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds string representations of style attributes to a collection to be used in the design-time rendering of the control.</summary>
      <param name="styleAttributes">A collection of style attributes implementing the <see cref="T:System.Collections.IDictionary" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>Gets the caption that appears on the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A string that contains the panel caption.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>Gets the styles of the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object that contains the design-time styles for the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Panel" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.Panel" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Panel" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a specified property and value to a specified markup style.</summary>
      <param name="propName">A string containing the property name.</param>
      <param name="varPropValue">An object that is the property value.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>Provides notification when a behavior is attached to the designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> object that is specified by the <see langword="Parameters" /> properties of the associated data source control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the elements of the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects of the associated data source control.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
      <returns>The editing style that is associated with this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>Provides a reusable <see cref="T:System.Windows.Forms.UserControl" /> object for editing <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class using the specified <see cref="T:System.IServiceProvider" />.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> interface to the current design host, such as Visual Studio 2005.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>Adds an array of existing parameters to the editor.</summary>
      <param name="parameters">A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of existing parameters to add to the editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>Removes all parameters from the editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>Gets all parameters from the editor.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of all parameters from the editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> event when the state of a parameter in the editor changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>Occurs when any parameter or one of the parameter's properties is changed.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>Returns a value indicating whether all the parameters in the editor are configured.</summary>
      <returns>
        <see langword="true" /> if all parameters in the editor are fully configured; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>Controls whether additions and deletions can be made to the values in the editor.</summary>
      <param name="allowChanges">A <see cref="T:System.Boolean" /> that indicates whether additions and deletions can be made to the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> being edited.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.TypeDescriptionProvider">
      <summary>Provides metadata for the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class.</summary>
      <returns>A type descriptor provider object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control allows resizing.</summary>
      <returns>
        <see langword="true" /> if the control allows resizing; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to display the associated control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display all regions at design time.</summary>
      <param name="regions">A collection of control designer regions for the associated control.</param>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region for the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The design-time HTML markup for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer class to add properties to, or remove properties from, the Properties grid at design time or to shadow properties of the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>
        <see langword="true" /> if the control uses an outer table container to apply inline CSS style rules; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Establishes the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region that is contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>Provides design-time support in a visual designer for a control where the design surface must use a preview of the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>Provides a dialog box for editing regular expressions used by the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> class.</summary>
      <param name="site">The site for this dialog box.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Help event of the dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the OK event of the dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TestValidate event of the dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="args">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> and optionally releases the managed resources.</summary>
      <param name="disposing">A value indicating to all resources held by any managed objects that this <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> references.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the SelectedIndexChanged event of the dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Activated event of dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>Gets or sets the name of the regular expression to edit.</summary>
      <returns>The name of the regular expression.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TextChanged event of the dialog box.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>Provides a user interface for editing regular expressions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the given regular expression object using the given service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can provide additional context information.</param>
      <param name="provider">A service provider.</param>
      <param name="value">The regular expression object whose value is to be edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this method returns the same object it received.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the editor style used by the method.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>Gets or sets the name of a specific table or view in the data source object to bind the <see cref="T:System.Web.UI.WebControls.Repeater" /> control to.</summary>
      <returns>The name of a table or view in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>A data-binding expression that identifies the source of data for the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>A data binding expression.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>Provides access to the associated designer component for the data source.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> property of the associated control.</summary>
      <returns>The ID of the associated control's data source control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both the managed and unmanaged resources; <see langword="false" /> to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>Called by a design host such as Visual Studio 2005 after a user selects a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>Returns design-time sample data based on the provided data and using the specified number of rows.</summary>
      <param name="selectedDataSource">An <see cref="T:System.Collections.IEnumerable" /> object containing data to use in creating similar sample data at design time.</param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain.</param>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>Returns design-time sample data based on the <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> method and using the specified number of rows.</summary>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain.</param>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup to be used for the design-time representation of the control.</summary>
      <returns>Design-time HTML markup.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>The design-time HTML markup for the specified exception.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> that contains a collection of values used to supply design-time data. The default value is <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>Retrieves the selected data source component from the container of the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>The selected data source; <see langword="null" /> if a data source is not found or if a data source with the selected name does not exist.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the provided <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="source">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>Handles changes made to the data source</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Filters the properties to replace the runtime data source property descriptor with the designer's property descriptor.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>Gets a value indicating whether the associated control has any templates defined.</summary>
      <returns>A value that indicates whether any templates are defined for the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>Provides a design-time editor for the <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" /> class.</summary>
      <param name="type">The type of objects in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>Provides a value indicating whether the editor allows selection of multiple items in the collection.</summary>
      <returns>
        <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the schema can be refreshed.</summary>
      <returns>This implementation always returns <see langword="true" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> for the specified view.</summary>
      <param name="viewPath">The XPath query for the part of the data source to retrieve.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>Gets an array of names representing named views in the data source.</summary>
      <returns>This implementation always returns an empty string array.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated component changes.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object containing information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Called by the designer host to refresh the schema of the underlying data source.</summary>
      <param name="preferSilent">
        <see langword="true" /> to suppress data source events until the refresh operation has completed; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />.</summary>
      <returns>
        <see langword="true" /> if the underlying data source has a configuration wizard that can be launched with the <see langword="Configure" /> method; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />.</summary>
      <param name="viewName">The name of the view to get.</param>
      <returns>A designer data-source view that contains information about the identified view, or <see langword="null" /> if a view with the specified name is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>The names of the views in the underlying data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">
        <see langword="true" /> suppresses data source events until the refresh is finished.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /></summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> and <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> classes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> class using the provided <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> object and view name.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view for which the data source provides data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <param name="minimumRows">The minimum number of rows to retrieve or create.</param>
      <param name="isSampleData">
        <see langword="true" /> to indicate sample data; <see langword="false" /> to indicate real data.</param>
      <returns>Design-time data that matches the schema of the associated data source control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data that is represented by this <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> or an object that derives from <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>Provides a design-time view of hierarchical data for the <see cref="T:System.Web.SiteMap" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> that is the designer for the associated <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />.</param>
      <param name="viewPath">An XPath query that defines the block of data to use for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample data or real data.</summary>
      <param name="isSampleData">
        <see langword="true" /> to indicate that the returned data is sample data; <see langword="false" /> to indicate that the returned data is real data.</param>
      <returns>Design-time data that matches the schema of the associated data source control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>A schema that describes the data source view that is represented by this view object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>Returns <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup that provides information about the specified exception.</summary>
      <param name="e">The exception that occurred.</param>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.SiteMapPath" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>Returns <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>Provides a user interface for selecting and editing a connection string property of a <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
      <returns>The <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, if the <paramref name="instance" /> is not <see langword="null" />; otherwise, an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
      <param name="connection">The <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" /> method can be called by the design host.</summary>
      <returns>
        <see langword="true" /> if the design host supports the <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" /> interface; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called by the design host.</summary>
      <returns>
        <see langword="true" /> if the <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> and <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> properties are not empty; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>The string used to open a database connection at runtime.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>Creates a new <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> instance using the specified name.</summary>
      <param name="viewName">The name of the view to create.</param>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>Gets or sets the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> that supports delete queries.</summary>
      <returns>The <see cref="F:System.Web.UI.DataSourceOperation.Delete" /> query.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>Derives the parameters from the specified SQL command and adds corresponding <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the command's parameters collection.</summary>
      <param name="providerName">The name of the data provider.</param>
      <param name="command">A <see cref="T:System.Data.Common.DbCommand" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <param name="viewName">The name of the view to get.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object if found in the data source; otherwise <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>Gets a list of available views.</summary>
      <returns>A string array containing the names of the available views.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>Returns an array of parameters using the specified connection, command text, and command type.</summary>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object.</param>
      <param name="commandText">The text of the command.</param>
      <param name="commandType">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> indicating the type of command.</param>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>Gets or sets the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> that supports insert queries.</summary>
      <returns>The <see cref="F:System.Web.UI.DataSourceOperation.Insert" /> query.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The properties to be filtered.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>Gets or sets the name of the .NET Framework data provider that the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</summary>
      <returns>A string containing the name of the data provider.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the underlying data source.</summary>
      <param name="preferSilent">
        <see langword="true" /> to suppress all data source events until the schema is refreshed; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>Gets or sets the SQL query in the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> for selecting data from the underlying database.</summary>
      <returns>An SQL query.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>Gets or sets the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> that supports select queries.</summary>
      <returns>The <see cref="F:System.Web.UI.DataSourceOperation.Select" /> query.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>Gets or sets the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> that supports update queries.</summary>
      <returns>The <see cref="F:System.Web.UI.DataSourceOperation.Update" /> query.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> class using the provided data source designer and name of the view.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>
        <see langword="true" /> if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows instead of the data itself.</summary>
      <returns>
        <see langword="true" /> if retrieving the total number of data rows is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
      <returns>
        <see langword="true" /> if a sorted view on the underlying data source is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>
        <see langword="true" /> if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a value indicating whether the data is sample or real data.</summary>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">
        <see langword="true" /> to indicate that the returned data is sample data; <see langword="false" /> to indicate that the returned data is live data.</param>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" /> class.</summary>
      <param name="type">The type to create an instance of.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <param name="itemType">The type to create an instance of.</param>
      <returns>A collection of the specified type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> object in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create.</param>
      <returns>A new instance of the specified type, which should be <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>Provides a user interface for editing the collection of cells in a table row.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple table cells can be selected at the same time.</summary>
      <returns>
        <see langword="true" /> if multiple cells can be selected at the same time; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the editor for use with the specified type.</summary>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create.</param>
      <returns>An object of the specified type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Table" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>Provides a user interface for editing rows of a table.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>
        <see langword="true" /> if multiple items can be selected at once; otherwise, <see langword="false" />. This implementation always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the specified type.</summary>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create.</param>
      <returns>An object of the specified type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>Provides a type converter to convert the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> property to and from other representations.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the type of this converter using the provided context and culture information.</summary>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <returns>An object that represents the converted value.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the object to the specified type using the provided context and culture information.</summary>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> to.</param>
      <returns>An object that represents the converted value.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="Overload:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" /> class.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection edits.</summary>
      <returns>The data type that this collection edits.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>Provides a design-time data bindings editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">The type descriptor context.</param>
      <param name="provider">The service provider.</param>
      <param name="value">The value to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" /> method.</summary>
      <param name="context">The type descriptor context.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>Displays a dialog box to edit the line images for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The data bound control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>Displays a dialog box to edit the data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>Displays a dialog box to edit the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the control at design time when an error has occurred.</summary>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>When overridden in a derived class, provides for custom initialization of the given <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>
        <see langword="true" />, if the control designer uses a temporary copy of the control for design-time preview; otherwise, <see langword="false" />, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements a dictionary of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.View" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <param name="regions">A collection of designer regions.</param>
      <returns>An HTML markup string that represents the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> object.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ViewDesigner.NoWrap">
      <summary>Gets a value that indicates that the <see langword="nowrap" /> HTML attribute should not be used.</summary>
      <returns>
        <see langword="true" /> in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />, and <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" /> class</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default CatalogZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time by calling the <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method with a null argument.</summary>
      <returns>A method call to <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null argument as the parameter.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates an <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in the designer before generating the design-time HTML of the control.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
      <returns>A <see cref="T:System.String" /> representing the design-time HTML of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for a CatalogZone environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A predefined <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default ConnectionZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> that is the markup to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the specified <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Hides a preset group of properties at design time.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the set of properties associated with the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Overrides the parent method to prevent rendering of the control.</summary>
      <returns>Either an empty string ("") or the value of <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control on the design surface.</summary>
      <returns>An empty markup string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control and sets the <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> view flag to <see langword="true" />.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>The appended <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> associated with this class.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default EditorZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>Invokes <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null parameter.</summary>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for an EditorZone environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>Provides design-time support in a visual designer for a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to initialize.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>Extends design-time behavior for controls that implement the <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Creates an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control associated with this designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>Provides minimal design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>Gets an empty string (""), which indicates that the visual design environment should revert to default control rendering.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>Provides design-time support in a visual designer for a Web Parts zone.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>Gets the action list collection for the zone designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the Web Parts zone.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to initialize.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ViewInBrowseMode">
      <summary>Gets or sets a value indicating whether the Web Parts zone is displayed when the user is in the browse display mode.</summary>
      <returns>
        <see langword="true" /> if the Web Parts zone is displayed when the user is in the browse display mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner">
      <summary>Provides design-time visual support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to a control and validates that the control is a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control associated with this designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner">
      <summary>Provides minimal design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.GetDesignTimeHtml">
      <summary>Returns an empty string (""), which indicates that the visual design environment should revert to default control rendering.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control associated with this designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Hides the <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" /> property at design time.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the set of properties associated with the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default WebPartZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time by calling the <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method with a null argument.</summary>
      <returns>A method call to <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null argument as the parameter.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates an <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in the designer before generating the design-time HTML of the control.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
      <returns>A <see cref="T:System.String" /> representing the design-time HTML of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region content.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Provides an empty string ("") if there is no design-time HTML for the associated control.</summary>
      <returns>An empty string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Attaches the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content for the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object with default settings for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner">
      <summary>Provides design-time visual support for <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Creates an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always <see langword="true" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Adds the provided designer region collection to the current designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to add.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Creates a navigation template from the active step and saves it in the <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> property of the active step.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>Converts a selection of controls to a template in the associated control.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The wizard control associated with this designer.</param>
      <param name="templateName">The name of the template to convert to.</param>
      <param name="keys">An array of IDs for the controls that are to be included in the template.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>Creates the child controls of the associated control.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>Gets or sets a property in the associated wizard control indicating whether to display a sidebar.</summary>
      <returns>
        <see langword="true" /> to display the sidebar; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <param name="regions">A collection of control designer regions for the associated control.</param>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the editable region of the control at design time.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</param>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host, or provides new design-time settings or properties that correspond to properties on the associated control.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>Resets the specified template to its default value.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.Wizard" /> control associated with this designer.</param>
      <param name="templateName">The name of the template to reset.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the design host should use a preview control.</summary>
      <returns>
        <see langword="true" /> to use a preview control; <see langword="false" /> to use the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>Provides a design-time editor in a design host such as Visual Studio 2005 for a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of items in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>
        <see langword="true" /> if multiple items can be selected at once; otherwise, <see langword="false" />. This implementation always returns <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the collection of the specified <see cref="T:System.Type" />.</summary>
      <param name="itemType">The <see cref="T:System.Type" /> of collection to create.</param>
      <returns>A collection of the specified <paramref name="itemType" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>Retrieves the data types this collection can contain.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> class using the given designer and step.</summary>
      <param name="designer">A <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> that is the parent designer for the wizard.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that defines the step.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>The associated design-time wizard step.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a template in a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" /> class.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object that defines a template element in a wizard step at design time.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object that represents a step displayed in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>
        <see langword="true" />, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>
        <see langword="true" />, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called, otherwise <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>Gets or sets a block of XML that the associated data source control binds to.</summary>
      <returns>A string of XML data.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>Gets or sets the file name of an XML file that the associated data source control binds to.</summary>
      <returns>An XML file name.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves the design-time data source view object for the associated <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
      <param name="viewPath">The path to the view to retrieve.</param>
      <returns>The design-time data source view object for the associated <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by a designer component to add properties to or remove properties from, the Properties grid in a design host at design time or to provide new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">An <see langword="IDictionary" /> of properties.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">
        <see langword="true" /> to suppress schema UI events; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />.</summary>
      <returns>
        <see langword="true" /> if the data source can be configured; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />.</summary>
      <returns>
        <see langword="true" /> if the schema can be refreshed; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />.</summary>
      <param name="viewName">The name of a view in the underlying data source.</param>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object containing information about the identified view, or <see langword="null" /> if a view with the specified name is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>An array of names of the views in the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">Specifies whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>Gets or sets a block of Extensible Stylesheet Language (XSL) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XSL data string.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>Gets or sets the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>The XSLT file name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>Gets or sets an XPath query to apply to the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XPath query.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Xml" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> control and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML that is used to fill an empty control.</summary>
      <returns>The HTML used to fill an empty control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the control that this instance of the designer is associated with.</summary>
      <param name="component">The associated control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" /> class.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">
        <see langword="true" /> to indicate that the returned data is sample data; <see langword="false" /> to indicate that the returned data is live data.</param>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>Provides a hierarchical design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> class using the provided designer and XPath.</summary>
      <param name="owner">An <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewPath">An XPath string that identifies the data for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <param name="isSampleData">
        <see langword="true" /> to indicate that the returned data is sample data; <see langword="false" /> to indicate that the returned data is live data.</param>
      <returns>This implementation always returns <see langword="null" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>Provides a base class for a Web server control <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">A SerializationInfo object containing information needed to instantiate the Web control through deserialization.</param>
      <param name="context">A StreamingContext object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided type.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the tool for this toolbox item.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates objects from each type contained in this <see cref="T:System.Drawing.Design.ToolboxItem" />, and adds them to the specified designer.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <returns>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</returns>
      <exception cref="T:System.Exception">The <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> method is only available in Windows Forms.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Loads the state of the toolbox item from the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that describes the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Gets the value of the specified type of attribute of the toolbox item.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <param name="attributeType">The type of attribute to retrieve the value of.</param>
      <returns>The value of the specified type of attribute.</returns>
      <exception cref="T:System.ArgumentException">The <paramref name="attributeType" /> parameter is not a <see cref="T:System.Web.UI.PersistChildrenAttribute" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the HTML for the Web control that the tool creates.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <returns>The HTML for the Web control that the tool creates.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the type of this toolbox item.</summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <returns>The <see cref="T:System.Type" /> of this toolbox item.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>Initializes this toolbox item.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the Web server control toolbox item.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the state of the toolbox item to the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used to save the state of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for a component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> class using the provided reference to the design host.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Gets the smart-tag item lists that are associated with a component.</summary>
      <param name="component">A reference to the control associated with the designer.</param>
      <param name="actionLists">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add the associated smart tags to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>Provides a base class for accessing the types, directives, and controls in the current Web project document. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project document.</summary>
      <returns>A collection of strings representing the register directives defined in the current document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified object type.</summary>
      <param name="objectType">The type of the object.</param>
      <returns>The tag prefix for the specified object type, if found; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>Gets the object type with the specified tag prefix and tag name.</summary>
      <param name="tagPrefix">The tag prefix of the type to retrieve.</param>
      <param name="tagName">The tag name of the type to retrieve.</param>
      <returns>The <see cref="T:System.Type" /> of the object with the specified tag prefix and name, if found; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>Gets the relative URL path for the user control with the specified tag prefix and tag name.</summary>
      <param name="tagPrefix">The tag prefix of the user control to retrieve.</param>
      <param name="tagName">The tag name of the user control to retrieve.</param>
      <returns>A string representing the relative URL path for the specified user control, if found; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>Adds a tag prefix for the specified type.</summary>
      <param name="objectType">The type to add a tag prefix for in the current document.</param>
      <returns>The tag prefix string.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>Provides a base class for the design-time functionality of a Web Forms page and allows access to and manipulation of components and controls that are contained within the Web Forms page at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>When overridden in a derived class, adds a client script element to the current Web Forms page.</summary>
      <param name="scriptItem">A <see cref="T:System.Web.UI.Design.ClientScriptItem" /> to add to the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>When overridden in a derived class, adds a Web server control to the Web Forms page.</summary>
      <param name="newControl">The control to add to the Web Forms page.</param>
      <param name="referenceControl">The control relative to which <paramref name="newControl" /> is added.</param>
      <param name="location">A <see cref="T:System.Web.UI.Design.ControlLocation" /> value that indicates the location for <paramref name="newControl" /> relative to <paramref name="referenceControl" />.</param>
      <returns>The ID of the control that was added.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>Gets or sets the component that this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>Returns a design-time <see cref="T:System.ComponentModel.Design.DesignerActionService" /> object.</summary>
      <param name="serviceProvider">A design host, such as Visual Studio 2005, cast as an <see cref="T:System.IServiceProvider" />.</param>
      <returns>A design-time designer action service object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>Returns an <see cref="T:System.Web.UI.IUrlResolutionService" /> that resolves relative URLs.</summary>
      <returns>An object that resolves relative URLs.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>Gets the culture information for the current thread.</summary>
      <returns>The culture information for the current thread.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>When overridden in a derived class, gets the URL at which the Web Forms page is located.</summary>
      <returns>The URL at which the Web Forms page is located; otherwise, <see langword="null" />, if the Web Forms page has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>Frees the resources of the current <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object before it is reclaimed by the garbage collector.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>Generates empty HTML markup for a control at design time.</summary>
      <param name="control">The control to generate HTML markup for.</param>
      <returns>HTML markup for an empty control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>Generates HTML markup that is used to display an error message at design time by using the specified control, exception, and message.</summary>
      <param name="control">The control that raised the exception.  
 -or-  
 <see langword="null" />.</param>
      <param name="e">The exception.  
 -or-  
 <see langword="null" />.</param>
      <param name="errorMessage">A message to add to the exception message.  
 -or-  
 An empty string ("").</param>
      <returns>HTML markup for a control and exception information.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> object that contains all client script items that are on the page.</summary>
      <returns>An object that contains all client script items that are on the page.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>When overridden in a derived class, returns both the current design-time view and the HTML markup for the specified control.</summary>
      <param name="control">The control to provide the view and tag for.</param>
      <param name="view">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="view" /> contains an <see langword="IControlDesignerView" /> object that provides access to the visual representation and content of a control at design time. <paramref name="view" /> is passed uninitialized.</param>
      <param name="tag">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="tag" /> contains an <see langword="IControlDesignerTag" /> object that provides access to the HTML element for the control's control designer. <paramref name="tag" /> is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>Returns the requested service.</summary>
      <param name="serviceType">The type of service to retrieve.</param>
      <returns>The requested service; otherwise, <see langword="null" />, if the service cannot be resolved.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Returns a view object that is determined by the provided <see cref="T:System.ComponentModel.Design.ViewTechnology" /> object.</summary>
      <param name="viewTechnology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> obtained from the <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" /> property.</param>
      <returns>An object containing the current view of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object using the specified component.</summary>
      <param name="component">The component that this designer is designing.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>When overridden in a derived class, gets a value indicating whether the designer view is locked.</summary>
      <returns>
        <see langword="true" />, if the designer view is locked; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>When overridden in a derived class, gets a value indicating whether the Web Forms page is still loading.</summary>
      <returns>
        <see langword="true" />, if the Web Forms page is loading; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>Occurs when the designer completes loading the Web Forms page.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> event when the Web Forms page is completely loaded.</summary>
      <param name="e">An <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>When overridden in a derived class, gets a <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> object that has information about the current Web Forms page.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> containing information about the current Web Forms page.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>Removes the specified client script from the document at design time.</summary>
      <param name="clientScriptId">The identifier for the previously registered client script.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>When overridden in a derived class, removes the specified control from the Web Forms page.</summary>
      <param name="control">The control to remove from the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>Converts a relative URL into a fully qualified URL.</summary>
      <param name="relativeUrl">A relative URL for a resource on the site.</param>
      <returns>A fully qualified URL resolved from <paramref name="relativeUrl" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>Sets the <see langword="ID" /> property of the specified control with the specified string.</summary>
      <param name="control">The control on which to set the ID.</param>
      <param name="id">The string to set as the ID for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>Gets or sets the design-time verbs that are supported by the designer. For a description of this member, see <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />.</summary>
      <returns>The design-time verbs that are supported by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Gets a view object for the specified view technology. For a description of this member, see <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />.</summary>
      <param name="viewTechnology">The view technology.</param>
      <returns>The view object for the specified view technology.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display. For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of technologies that the designer component can support for its display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>Gets the design-time verbs that are supported by the designer.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects supported by the designer; otherwise, <see langword="null" />, if the component has no verbs.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>Provides a design-time user interface for selecting an XML data file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>Represents the structure, or schema, of an <see cref="T:System.Xml.XmlDocument" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> class using a specified <see cref="T:System.Xml.XmlDocument" /> and an XPath string.</summary>
      <param name="xmlDocument">An instance of an <see cref="T:System.Xml.XmlDocument" /> object.</param>
      <param name="xPath">An XPath string identifying the child nodes of the document root.</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>Gets an array containing information about each child node starting at the node identified by the <paramref name="xPath" /> parameter in the constructor, or each child node starting at the document root if the <paramref name="xPath" /> parameter is empty.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>Provides a user interface for selecting an XML file using a standard <see cref="T:System.Windows.Forms.OpenFileDialog" /> box.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlFileEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object it was passed.</returns>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>Provides a user interface for selecting a URL that indicates the location of an XML file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>Provides a design-time user interface for selecting an XML schema definition file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which are used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>Provides a design-time user interface for selecting an XML transform file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XslTransformFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>Provides a user interface for selecting an URL that indicates the location of an XSL file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XslUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>Provides a user interface for configuring an <see cref="P:System.Windows.Forms.Control.Anchor" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>Imports ActiveX controls and generates a wrapper that can be accessed by a designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxImporter" /> class.</summary>
      <param name="options">An <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> that indicates the options for the ActiveX control importer to use.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedAssemblies">
      <summary>Gets the names of the assemblies that are generated for the control.</summary>
      <returns>An array of names of the generated assemblies, or an empty string array if no assemblies have been generated.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedSources">
      <summary>Gets the names of the source files that were generated.</summary>
      <returns>An array of file names of the generated source files, or <see langword="null" /> if none exist.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedTypeLibAttributes">
      <summary>Gets the attributes for the generated type library.</summary>
      <returns>An array of type <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> that indicates the attributes for the generated type library.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromFile(System.IO.FileInfo)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <param name="file">A <see cref="T:System.IO.FileInfo" /> indicating the file that contains the control.</param>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <exception cref="T:System.Exception">A type library could not be loaded from <paramref name="file" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> that indicates the type library to generate the control from.</param>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <exception cref="T:System.Exception">No registered ActiveX control was found in <paramref name="typeLib" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib,System.Guid)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> that indicates the type library to generate the control from.</param>
      <param name="clsid">The <see cref="T:System.Guid" /> for the control wrapper.</param>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <exception cref="T:System.Exception">No registered ActiveX control was found in <paramref name="typeLib" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GetFileOfTypeLib(System.Runtime.InteropServices.TYPELIBATTR@)">
      <summary>Gets the path and file name to the specified type library.</summary>
      <param name="tlibattr">A <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> that indicates the type library to retrieve the file name of.</param>
      <returns>The path and file name to the specified type library, or <see langword="null" /> if the library could not be located.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolves a reference to the specified type library that contains an ActiveX control.</summary>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> to resolve a reference to.</param>
      <returns>A fully qualified path to an assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>Resolves a reference to the specified assembly that contains a COM component.</summary>
      <param name="name">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to resolve a reference to.</param>
      <returns>A fully qualified path to an assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolves a reference to the specified type library that contains an COM component.</summary>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> to resolve a reference to.</param>
      <returns>A fully qualified path to an assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>Resolves a reference to the specified assembly.</summary>
      <param name="assemName">The name of the assembly to resolve a reference to.</param>
      <returns>A fully qualified path to an assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>Represents a set of options for an <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> class.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>Specifies whether the generated assembly is strongly named and will be signed later.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>Specifies whether sources for the type library wrapper should be generated.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>Specifies whether to use only input from the command line instead relying on a registered version.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>Specifies the path to the file that contains the strong name key container for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>Specifies the path to the file that contains the strong name key for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>Specifies the strong name used for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>Specifies the path to the directory that the generated assemblies will be created in.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>Specifies the filename to generate the ActiveX control wrapper to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>Specifies whether to overwrite existing files when generating assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>Specifies the public key used to sign the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>Specifies the <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> to use to resolve types and references when generating assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>Specifies whether to compile in silent mode, which generates less displayed information at compile time.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>Specifies whether to compile in verbose mode, which generates more displayed information at compile time.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxParameterData">
      <summary>Represents a parameter of a method of a hosted ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified parameter information.</summary>
      <param name="info">A <see cref="T:System.Reflection.ParameterInfo" /> indicating the parameter information to use.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified parameter information and whether to ignore by reference parameters.</summary>
      <param name="info">A <see cref="T:System.Reflection.ParameterInfo" /> indicating the parameter information to use.</param>
      <param name="ignoreByRefs">A value indicating whether to ignore parameters passed by reference.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified name and type name.</summary>
      <param name="inname">The name of the parameter.</param>
      <param name="typeName">The name of the type of the parameter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified name and type.</summary>
      <param name="inname">The name of the parameter.</param>
      <param name="type">The type of the parameter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[])">
      <summary>Converts the specified parameter information to an <see cref="T:System.Windows.Forms.Design.AxParameterData" /> object.</summary>
      <param name="infos">An array of <see cref="T:System.Reflection.ParameterInfo" /> objects to convert.</param>
      <returns>An array of <see cref="T:System.Windows.Forms.Design.AxParameterData" /> objects representing the specified array of <see cref="T:System.Reflection.ParameterInfo" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[],System.Boolean)">
      <summary>Converts the specified parameter information to an <see cref="T:System.Windows.Forms.Design.AxParameterData" /> object, according to the specified value indicating whether to ignore by reference parameters.</summary>
      <param name="infos">An array of <see cref="T:System.Reflection.ParameterInfo" /> objects to convert.</param>
      <param name="ignoreByRefs">A value indicating whether to ignore parameters passed by reference.</param>
      <returns>An array of <see cref="T:System.Windows.Forms.Design.AxParameterData" /> objects representing the specified array of <see cref="T:System.Reflection.ParameterInfo" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Direction">
      <summary>Indicates the direction of assignment fields.</summary>
      <returns>A <see cref="T:System.CodeDom.FieldDirection" /> indicating the direction of assignment fields.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsByRef">
      <summary>Indicates whether the parameter data is passed by reference.</summary>
      <returns>
        <see langword="true" /> if the parameter data is by reference; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsIn">
      <summary>Indicates whether the parameter data is in.</summary>
      <returns>
        <see langword="true" /> if the parameter data is in; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOptional">
      <summary>Indicates whether the parameter data is optional.</summary>
      <returns>
        <see langword="true" /> if the parameter data is optional; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOut">
      <summary>Indicates whether the parameter data is out.</summary>
      <returns>
        <see langword="true" /> if the parameter data is out; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Name">
      <summary>Gets or sets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.ParameterType">
      <summary>Gets the type expected by the parameter.</summary>
      <returns>The type expected by the parameter.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.TypeName">
      <summary>Gets the name of the type expected by the parameter.</summary>
      <returns>The name of the type expected by the parameter.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxWrapperGen">
      <summary>Generates a wrapper for ActiveX controls for use in the design-time environment.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxWrapperGen.#ctor(System.Type)">
      <summary>Generates an ActiveX wrapper for design-time hosting of an ActiveX control.</summary>
      <param name="axType">The type of ActiveX control to generate a wrapper for.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.AxWrapperGen.GeneratedSources">
      <summary>This field initializes a local <see cref="T:System.Collections.ArrayList" /> variable named GeneratedSources.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>Manages a collection of user-interface related <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>Gets or sets a value indicating if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is enabled.</summary>
      <returns>
        <see langword="true" />, if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> collection.</summary>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window within the given <see cref="T:System.Drawing.Rectangle" />.</summary>
      <param name="rectangle">The area to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window within the given <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to invalidate.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>Represents the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> objects that are managed by a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="callParentBehavior">
        <see langword="true" /> if the parent behavior should be called if it exists; otherwise, <see langword="false" />.</param>
      <param name="behaviorService">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> is <see langword="true" />, and <paramref name="behaviorService" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>Gets the cursor that should be displayed for this behavior.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that should be displayed for this behavior.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>Gets a value indicating whether <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects should be disabled.</summary>
      <returns>
        <see langword="true" /> if all <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects the designer receives should have states set to <c>Enabled = false</c> when this <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> is active; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Intercepts commands.</summary>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object.</param>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" />. By default, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> returns <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-and-drop behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> object on which to invoke drag-and-drop behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-enter behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-enter behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Permits custom drag-leave behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-leave behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-over behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-over behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Permits custom drag-and-drop feedback behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Called by the adorner window when it loses mouse capture.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any double-click message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the click occurred.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any mouse-down message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the click occurred.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Called when any mouse-enter message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>Called when any mouse-hover message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc">The location at which the hover occurred.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Called when any mouse-leave message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any mouse-move message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the move occurred.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>Called when any mouse-up message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <returns>
        <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Sends this drag-and-drop event from the adorner window to the appropriate <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> or hit-tested <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> and <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> events.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> class.</summary>
      <param name="dragComponents">The <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>Gets the list of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</summary>
      <returns>The <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>Represents the methods that will handle the <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> and <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> events of a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>Manages user interface in the designer. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>A collection of adorner.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> for the adorner window.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> for the adorner window.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>Translates a <see cref="T:System.Drawing.Point" /> in the adorner window to screen coordinates.</summary>
      <param name="p">The <see cref="T:System.Drawing.Point" /> value to transform.</param>
      <returns>The transformed <see cref="T:System.Drawing.Point" /> value, in screen coordinates.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>Gets the location of the adorner window in screen coordinates.</summary>
      <returns>The location, from the upper-left corner of the adorner window, in screen coordinates.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> starts a drag-and-drop operation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>Returns the bounding <see cref="T:System.Drawing.Rectangle" /> of a <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to translate.</param>
      <returns>The bounding <see cref="T:System.Drawing.Rectangle" /> of a <see cref="T:System.Windows.Forms.Control" /> translated to the adorner window coordinates.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>Returns the location of a <see cref="T:System.Windows.Forms.Control" /> translated to adorner window coordinates.</summary>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to translate.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> value indicating the location of <paramref name="c" /> in adorner window coordinates.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the behavior stack without removing it.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the behavior stack.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> completes a drag operation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Returns the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> immediately after the given <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> in the behavior stack.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> preceding the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to be returned.</param>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> immediately after <paramref name="behavior" /> in the behavior stack, or <see langword="null" /> if there is no following behavior.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>Invalidates the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates, within the adorner window, the specified area of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect">The rectangular area to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>Invalidates, within the adorner window, the specified area of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r">The region to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>Converts a point in a handle's coordinate system to the adorner window coordinates.</summary>
      <param name="handle">An adorner window's handle.</param>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> in a handle's coordinate system.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> in the adorner window coordinates.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Removes and returns the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the stack.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to remove from the stack.</param>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> that was removed from the stack.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> stack is empty.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Pushes a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> onto the behavior stack.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Pushes a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> onto the behavior stack and assigns mouse capture to the behavior.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>Translates a point in screen coordinates into the adorner window coordinates of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p">The <see cref="T:System.Drawing.Point" /> value to transform.</param>
      <returns>The transformed <see cref="T:System.Drawing.Point" /> value, in adorner window coordinates.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>Occurs when the current selection should be refreshed.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>Synchronizes all selection glyphs.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>Stores <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> objects in a strongly typed collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class with the given array.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> reference.</summary>
      <param name="behaviorService">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> reference.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class from an existing <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> from which to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Adds an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> with the specified value to the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">An <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to add to the end of the collection.</param>
      <returns>The index at which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Copies the elements of an array to the end of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to copy to the end of the collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Adds the contents of another <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contains the specified <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to locate.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is contained in the collection; otherwise, <see langword="false" /></returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Returns the index of an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to locate.</param>
      <returns>The index of the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> of <paramref name="value" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Inserts an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> into the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to insert.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element.</param>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> element specified by <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Removes a specific <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> from the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to remove from the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>Supports iteration over a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> class.</summary>
      <param name="mappings">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> for which to create the enumerator.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator was past the end of the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see the <see cref="P:System.Collections.IEnumerator.Current" /> property.</summary>
      <returns>The current <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerator.MoveNext" /> method.</summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator was past the end of the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerator.Reset" /> method.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>Associates a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with its component.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> class.</summary>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> class.</summary>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="p">A point to hit-test.</param>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Provides paint logic.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> containing the <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>Gets the component that is associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</summary>
      <returns>An <see cref="T:System.ComponentModel.IComponent" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>Associates a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with its control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> class.</summary>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> class.</summary>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="designer">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>Gets the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="p">A point to hit test.</param>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>Represents a single user interface (UI) entity managed by an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> class.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, or <see langword="null" /> if there is no behavior.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>Gets the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>Provides hit test logic.</summary>
      <param name="p">A point to hit-test.</param>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Provides paint logic.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Changes the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">A <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to associate with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>Stores <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects in a strongly typed collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> array.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class based on another <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Adds a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with the specified value to the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to add to the end of the collection.</param>
      <returns>The index at which the new element was inserted.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Copies the elements of an array to the end of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to copy to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Adds the contents of another <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contains the specified <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to locate.</param>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Returns the index of a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to locate.</param>
      <returns>The index of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> of <paramref name="value" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Inserts a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> into the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to insert.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element.</param>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> element at the specified index.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Removes a specific <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> from the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to remove from the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>Describes the designer selection state of a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is not selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is the primary selection.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type and offset.</summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, and filter name.</summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="filter">A <see cref="T:System.String" /> used to specify a programmer-defined category of snaplines.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, filter name, and priority.</summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="filter">A <see cref="T:System.String" /> used to specify a programmer-defined category of snaplines.</param>
      <param name="priority">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> of the snapline.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, and priority.</summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="priority">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> of the snapline.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>Adjusts the <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> property of the snapline.</summary>
      <param name="adjustment">The number of pixels to change the snapline offset by.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>Gets the programmer-defined filter category associated with this snapline.</summary>
      <returns>A <see cref="T:System.String" /> that defines the filter category. The default is <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>Gets a value indicating whether the snapline has a horizontal orientation.</summary>
      <returns>
        <see langword="true" /> if the snapline is horizontal; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>Gets a value indicating whether the snapline has a vertical orientation.</summary>
      <returns>
        <see langword="true" /> if the snapline is vertical; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>Gets the number of pixels that the snapline is offset from the origin of the associated control.</summary>
      <returns>The offset, in pixels, of the snapline.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>Gets a value indicating the relative importance of the snapline.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> that represents the priority category of a snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> should snap to another <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1">The specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
      <param name="line2">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> to which the specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> is expected to snap.</param>
      <returns>
        <see langword="true" /> if <paramref name="line1" /> should snap to <paramref name="line2" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>Gets the type of a snapline, which indicates the general location and orientation.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> that represents the orientation and general location, relative to control edges, of a snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>Returns a string representation of the current snapline.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>Specifies the relative importance of a snapline.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>The highest priority category.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>The lowest priority category.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>The middle priority category.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>Specifies the orientation and relative location of a snapline.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a <see cref="T:System.Windows.Forms.Label" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>A horizontal snapline typically aligned to the bottom edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>A horizontal snapline typically not associated with an edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>A vertical snapline typically aligned to the left edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>A vertical snapline typically aligned to the right edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>A horizontal snapline typically aligned to the top edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>A vertical snapline typically not associated with an edge of a control.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>Provides an editor for setting the <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> providing information about the control or component.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> providing custom support to other objects.</param>
      <param name="value">The object value to edit.</param>
      <returns>The edited object.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see langword="EditValue" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> providing information about the control or component.</param>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values. If the method is not supported, this method returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>Base designer class for extending the design mode behavior of a root design document that supports nested components.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>Gets the control for the designer.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> the designer is editing.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a value indicating whether the specified tool is supported by the designer.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test for toolbox support.</param>
      <returns>
        <see langword="true" /> if the tool should be enabled on the toolbox; <see langword="false" /> if the document designer doesn't know how to use the tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>For a description of this member, see <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> that indicates a particular view technology.</param>
      <returns>An object that represents the view for this designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">The component to filter the attributes of.</param>
      <param name="attributes">A dictionary of attributes that can be modified.</param>
      <returns>
        <see langword="true" /> if the set of filtered attributes is to be cached; <see langword="false" /> if the filter service must query again.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">The component to filter events for.</param>
      <param name="events">A dictionary of events that can be modified.</param>
      <returns>
        <see langword="true" /> if the set of filtered events is to be cached; <see langword="false" /> if the filter service must query again.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component">The component to filter properties for.</param>
      <param name="properties">A dictionary of properties that can be modified.</param>
      <returns>
        <see langword="true" /> if the set of filtered properties is to be cached; <see langword="false" /> if the filter service must query again.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
      <returns>
        <see langword="true" /> if the tool is supported by the toolbox and can be enabled; <see langword="false" /> if the document designer does not know how to use the tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.</summary>
      <returns>
        <see langword="true" /> if the component tray for the designer is in auto-arrange mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>Gets or sets a value indicating whether the component tray for the designer is in large icon mode.</summary>
      <returns>
        <see langword="true" /> if the component tray for the designer is in large icon mode; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>Provides behavior for the component tray of a designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentTray" /> class using the specified designer and service provider.</summary>
      <param name="mainDesigner">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that is the main or document designer for the current project.</param>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that can be used to obtain design-time services.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>Adds a component to the tray.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to add to the tray.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>Gets or sets a value indicating whether the tray items are automatically aligned.</summary>
      <returns>
        <see langword="true" /> if the tray items are automatically arranged; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a value indicating whether the specified tool can be used to create a new component.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test.</param>
      <returns>
        <see langword="true" /> if the specified tool can be used to create a component; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>Gets a value indicating whether the specified component can be displayed.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to test.</param>
      <returns>
        <see langword="true" /> if the component can be displayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>Gets the number of components contained in the tray.</summary>
      <returns>The number of components in the tray.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>Displays an error message to the user with information about the specified exception.</summary>
      <param name="e">The exception about which to display information.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ComponentTray" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>Gets the location of the specified component, relative to the upper-left corner of the component tray.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the location of.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> indicating the coordinates of the specified component, or an empty <see cref="T:System.Drawing.Point" /> if the specified component could not be found in the component tray. An empty <see cref="T:System.Drawing.Point" /> has an <see cref="P:System.Drawing.Point.IsEmpty" /> property equal to <see langword="true" /> and typically has <see cref="P:System.Drawing.Point.X" /> and <see cref="P:System.Drawing.Point.Y" /> properties that are each equal to zero.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Similar to <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, this method returns the next component in the tray, given a starting component.</summary>
      <param name="component">The component from which to start enumerating.</param>
      <param name="forward">
        <see langword="true" /> to enumerate forward through the list; otherwise, <see langword="false" /> to enumerate backward.</param>
      <returns>The next component in the component tray, or <see langword="null" />, if the end of the list is encountered (or the beginning, if <paramref name="forward" /> is <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>Gets the requested service type.</summary>
      <param name="serviceType">The type of the service to retrieve.</param>
      <returns>An instance of the requested service, or <see langword="null" /> if the service could not be found.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>Gets the value of the <see langword="Location" /> extender property.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> that receives the location extender property.</param>
      <returns>A <see cref="T:System.Drawing.Point" /> representing the location of <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>Tests a component for presence in the component tray.</summary>
      <param name="comp">The component to test for presence in the component tray.</param>
      <returns>
        <see langword="true" /> if <paramref name="comp" /> is being shown on the tray; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object that has been dragged is dropped on the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object is dragged over, and has entered the area over, the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>Called when an object is dragged out of the area over the component tray.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object is dragged over the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.</summary>
      <param name="gfevent">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>Called when a mouse drag selection operation is canceled.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse is double clicked over the component tray.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse button is pressed.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse cursor position has changed.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse button has been released.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the view for the component tray should be refreshed.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>Called to set the mouse cursor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>Removes the specified component from the tray.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to remove from the tray.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Sets the location of the specified component to the specified location.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> to set the location of.</param>
      <param name="location">A <see cref="T:System.Drawing.Point" /> indicating the new location for the specified component.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Sets the value of the <see langword="Location" /> extender property.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> that receives the location extender property.</param>
      <param name="location">A <see cref="T:System.Drawing.Point" /> representing the location of <paramref name="receiver" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.</summary>
      <returns>
        <see langword="true" /> if large icons are displayed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="component">The <see cref="T:System.Object" /> to receive the extender properties.</param>
      <returns>
        <see langword="true" /> if this object can provide extender properties to the specified object; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>Specifies the accessibility object for the designer.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>Gets the collection of components associated with the component managed by the designer.</summary>
      <returns>The components that are associated with the component managed by the designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</summary>
      <returns>
        <see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>Indicates if this designer's control can be parented by the control of the specified designer.</summary>
      <param name="parentDesigner">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</param>
      <returns>
        <see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>Gets the control that the designer is designing.</summary>
      <returns>The control that the designer is designing.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>Provides an <see cref="T:System.Windows.Forms.AccessibleObject" /> for <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> class using the specified designer and control.</summary>
      <param name="designer">The <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> for the accessible object.</param>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> for the accessible object.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>Gets the points that define the boundaries of the accessible object for the designer.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that indicates the boundaries of the accessible object for the designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the specified object.</summary>
      <returns>A description of the default action for a specified object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>Gets a string that describes the visual appearance of the specified object.</summary>
      <returns>A description of the object's visual appearance to the user, or <see langword="null" /> if the object does not have a description.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Retrieves the accessible child corresponding to the specified index.</summary>
      <param name="index">The zero-based index of the accessible child.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>Retrieves the number of children belonging to an accessible object.</summary>
      <returns>The number of children belonging to an accessible object.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>Retrieves the object that has the keyboard focus.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns <see langword="null" /> if no object has focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>Retrieves the currently selected child.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns <see langword="null" /> if is no child is currently selected and the object itself does not have focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Retrieves the child object at the specified screen coordinates.</summary>
      <param name="x">The horizontal screen coordinate.</param>
      <param name="y">The vertical screen coordinate.</param>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns <see langword="null" /> if no object is at the tested location.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>Gets or sets the object name.</summary>
      <returns>The object name, or <see langword="null" /> if the property has not been set.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>Gets the parent of an accessible object.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or <see langword="null" /> if there is no parent object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>Gets the state of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>Gets or sets the value of an accessible object.</summary>
      <returns>The value of an accessible object, or <see langword="null" /> if the object has no value set.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Provides default processing for Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>Displays information about the specified exception to the user.</summary>
      <param name="e">The <see cref="T:System.Exception" /> to display.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>Enables design time functionality for a child control.</summary>
      <param name="child">The child control for which design mode will be enabled.</param>
      <param name="name">The name of <paramref name="child" /> as exposed to the end user.</param>
      <returns>
        <see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>Enables or disables drag-and-drop support for the control being designed.</summary>
      <param name="value">
        <see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support. The default is <see langword="false" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>Gets a value indicating whether drag rectangles can be drawn on this designer component.</summary>
      <returns>
        <see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</summary>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</summary>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the control.</summary>
      <param name="point">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</param>
      <returns>
        <see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>Routes messages from the child controls of the specified control to the designer.</summary>
      <param name="firstChild">The first child <see cref="T:System.Windows.Forms.Control" /> to process. This method may recursively call itself for children of the control.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with. This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Re-initializes an existing component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be <see langword="null" /> if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be <see langword="null" /> if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex">A specified index to select the internal control designer. This index is zero-based.</param>
      <returns>A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</returns>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</summary>
      <param name="x">The x coordinate at which to display the context menu.</param>
      <param name="y">The y coordinate at which to display the context menu.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>Provides an opportunity to perform additional processing immediately after the control handle has been created.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call to clean up a drag-and-drop operation.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop object is dropped onto the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop operation enters the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Receives a call when a drag-and-drop operation leaves the control designer view.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop object is dragged over the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Receives a call in response to the left mouse button being pressed and held while over the component.</summary>
      <param name="x">The x position of the mouse in screen coordinates.</param>
      <param name="y">The y position of the mouse in screen coordinates.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</summary>
      <param name="cancel">
        <see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Receives a call for each movement of the mouse during a drag-and-drop operation.</summary>
      <param name="x">The x position of the mouse in screen coordinates.</param>
      <param name="y">The y position of the mouse in screen coordinates.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>Receives a call when the mouse first enters the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>Receives a call after the mouse hovers over the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>Receives a call when the mouse first enters the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>Called when the designer is intialized.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>Receives a call each time the cursor needs to be set.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>Gets the selection rules that indicate the movement capabilities of a component.</summary>
      <returns>A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</summary>
      <returns>A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>Routes messages for the children of the specified control to each control rather than to a parent designer.</summary>
      <param name="firstChild">The first child <see cref="T:System.Windows.Forms.Control" /> to process. This method may recursively call itself for children of the control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages and optionally routes them to the control.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>Provides access to get and set option values for a designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>Gets or sets a value that enables or disables in-place editing for <see cref="T:System.Windows.Forms.ToolStrip" /> controls.</summary>
      <returns>
        <see langword="true" /> if in-place editing for <see cref="T:System.Windows.Forms.ToolStrip" /> controls is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>Gets or sets a <see cref="T:System.Drawing.Size" /> representing the dimensions of a grid unit.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> representing the dimensions of a grid unit.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.</summary>
      <returns>
        <see langword="true" /> to allow a component's smart tag panel to open automatically upon creation; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>Gets or sets a value that enables or disables the grid in the designer.</summary>
      <returns>
        <see langword="true" /> if the grid is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.</summary>
      <returns>
        <see langword="true" /> if snapping is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>Gets or sets a value that enables or disables the component cache.</summary>
      <returns>
        <see langword="true" /> if the component cache is enabled; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>Gets or sets a value that enables or disables smart tags in the designer.</summary>
      <returns>
        <see langword="true" /> if smart tags in the designer are enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>Gets or sets a value that enables or disables snaplines in the designer.</summary>
      <returns>
        <see langword="true" /> if snaplines in the designer are enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>Provides a user interface for specifying a <see cref="P:System.Windows.Forms.Control.Dock" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DockEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>An enum value indicating the provided editing style.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a <see cref="T:System.Windows.Forms.Control" /> that supports nested controls and should receive scroll messages.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Checks for the existence of a menu editor service and creates one if one does not already exist.</summary>
      <param name="c">The <see cref="T:System.ComponentModel.IComponent" /> to ensure has a context menu service.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> representing the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</summary>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Indicates whether the specified tool is supported by the designer.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test for toolbox support.</param>
      <returns>
        <see langword="true" /> if the tool should be enabled on the toolbox; <see langword="false" /> if the document designer doesn't know how to use the tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>Initializes the menuEditorService variable to <see langword="null" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Called when the context menu should be displayed.</summary>
      <param name="x">The horizontal screen coordinate to display the context menu at.</param>
      <param name="y">The vertical screen coordinate to display the context menu at.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>Called immediately after the handle for the designer has been created.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.SelectionRules" /> for the designer.</summary>
      <returns>A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>For a description of this member, see <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> that indicates a particular view technology.</param>
      <returns>An object that represents the view for this designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
      <returns>
        <see langword="true" /> if the tool is supported by the toolbox and can be enabled; <see langword="false" /> if the document designer does not know how to use the tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Selects the specified tool.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component for.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>Provides a systematic way to manage event handlers for the current document.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> class.</summary>
      <param name="focusWnd">The <see cref="T:System.Windows.Forms.Control" /> which is being designed.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>Fires an OnEventHandlerChanged event.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>Gets the control to which event handlers are attached.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> which was attached through the constructor.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>Gets the currently active event handler of the specified type.</summary>
      <param name="handlerType">The type of the handler to get.</param>
      <returns>An instance of the handler, or <see langword="null" /> if there is no handler of the requested type.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>Pops the given handler off of the stack.</summary>
      <param name="handler">The handler to remove from the stack.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>Pushes a new event handler on the stack.</summary>
      <param name="handler">The handler to add to the stack.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>Provides a user interface for selecting a file name.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service provider object through which editing services may be obtained.</param>
      <param name="value">An instance of the value being edited.</param>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style used by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>Initializes the open file dialog when it is created.</summary>
      <param name="openFileDialog">The <see cref="T:System.Windows.Forms.OpenFileDialog" /> to use to select a file name.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>Provides a user interface for choosing a folder from the file system.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object using the editor style provided by <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">A service object provider.</param>
      <param name="value">The value to set.</param>
      <returns>The new value of the object, or the old value if the object couldn't be updated.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>Gets or sets a description to show above the folders.</summary>
      <returns>The description to show above the folders.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>Gets the directory path to the object the user picked.</summary>
      <returns>The directory path to the object the user picked.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>Shows the folder browser dialog.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DialogResult" /> from the form.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Shows the folder browser dialog with the specified owner.</summary>
      <param name="owner">Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).</param>
      <returns>The <see cref="T:System.Windows.Forms.DialogResult" /> from the form.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>Gets or sets the start location of the root node.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> that indicates the location for the folder browser to initially browse to.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>The styles the folder browser will use when browsing folders. This should be a combination of flags from the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> enumeration.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> enumeration member that indicates behavior for the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> to use.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>Defines identifiers used to indicate the root folder for a folder browser to initially browse to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>The user's desktop.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>The user's favorites list.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>The contents of the My Computer icon.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>The user's My Documents folder.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>User's location to store pictures.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>Network and dial-up connections.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>The network neighborhood.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>A folder containing installed printers.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>A folder containing shortcuts to recently opened files.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>A folder containing shortcuts to applications to send documents to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>The user's start menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>The user's file templates.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>Defines identifiers used to specify behavior of a <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>The folder browser can return any object that it can return.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>The folder browser will only return obejcts of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>The folder browser includes a <see cref="T:System.Windows.Forms.TextBox" /> control in the browse dialog box that allows the user to type the name of an item.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style used by the <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>Initializes the folder browser dialog.</summary>
      <param name="folderBrowser">A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> to choose a folder.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>Gets an enumeration of <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.</summary>
      <returns>An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>Serializes string dictionaries.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.</summary>
      <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
      <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
      <returns>The deserialized CodeDOM object.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="codeObject" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a Code Document Object Model (CodeDOM) object.</summary>
      <param name="manager">The serialization manager to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>Provides an editor that can perform default file searching for bitmap (.bmp) files.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by the <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">An <see cref="T:System.Object" /> being edited.</param>
      <returns>An <see cref="T:System.Object" /> representing the new value. If the value of the object has not changed, the <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method returns the object that was passed to it.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>Gets the description for the default file-list filter provided by this editor.</summary>
      <returns>The description for the default file-list filter.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>Gets an array of supported image types.</summary>
      <returns>An array of <see cref="T:System.Type" /> representing supported image types.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <see langword="true" /> if <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a value indicated by the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
      <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> indicating what to paint and where to paint it.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>Provides access to the menu editing service.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>Gets the current menu.</summary>
      <returns>The current <see cref="T:System.Windows.Forms.Menu" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>Indicates whether the current menu is active.</summary>
      <returns>
        <see langword="true" /> if the current menu is currently active; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>Allows the editor service to intercept Win32 messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
      <returns>
        <see langword="true" /> if the message is for the control; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>Sets the specified menu visible on the form.</summary>
      <param name="menu">The <see cref="T:System.Windows.Forms.Menu" /> to render.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>Sets the selected menu item of the current menu.</summary>
      <param name="item">A <see cref="T:System.Windows.Forms.MenuItem" /> to set as the currently selected menu item.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>Defines a set of members for derived classes to provide options for the masked text box UI type editor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>Gets the <see cref="T:System.Globalization.CultureInfo" /> representing the locale the mask is authored for.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> representing the locale the mask is authored for.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
      <param name="maskDescriptor">The <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> to compare with the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary>Serves as a hash function for a particular type.</summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.</summary>
      <param name="maskDescriptor">The mask descriptor to test for validity.</param>
      <returns>
        <see langword="true" /> if <paramref name="maskDescriptor" /> is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.</summary>
      <param name="maskDescriptor">The mask descriptor to test for validity.</param>
      <param name="validationErrorDescription">A string representing a validation error. If no validation error occurred, the <paramref name="validationErrorDescription" /> is <see cref="F:System.String.Empty" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="maskDescriptor" /> is valid; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>Gets the mask being defined.</summary>
      <returns>A <see cref="T:System.String" /> containing the mask being defined.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>Gets the user-friendly name of the mask.</summary>
      <returns>A <see cref="T:System.String" /> containing the name or brief description of the <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>Gets a sample of a formatted string for the mask.</summary>
      <returns>A <see cref="T:System.String" /> containing text that is formatted by using the <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>Gets the type providing validation associated with the mask.</summary>
      <returns>The <see cref="T:System.Type" /> that the formatted string is validated against.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>Defines a set of <see cref="T:System.ComponentModel.Design.CommandID" /> fields that each correspond to a command function provided by the host environment.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.MenuCommands" /> class.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the component tray menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the container menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the properties page for the designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the edit label handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the cancel key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the end key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the home key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the smart tag invocation handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move down key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move left key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move right key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move up key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge down key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge height decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge height increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge left key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge right key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge up key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge width decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge width increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the reverse cancel key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the select next key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the select previous key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the SHIFT-END key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the SHIFT-HOME key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size height decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size height increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size width decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size width increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the tab order select key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the selection menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to set the status rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to set the status rectangle text.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the tray selection menu.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" /> that supports nested controls.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>Adds padding snaplines.</summary>
      <param name="snapLines">An <see cref="T:System.Collections.ArrayList" /> that contains <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>Gets a value indicating whether selected controls will be re-parented.</summary>
      <returns>
        <see langword="true" /> if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.</summary>
      <returns>
        <see langword="true" /> if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns>
        <see langword="true" /> if the z-order of dragged controls should be maintained when dropped on a <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>Called when a component is added to the parent container.</summary>
      <param name="component">The component to test for errors.</param>
      <returns>
        <see langword="true" /> if <paramref name="component" /> can be added; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>Indicates whether the specified control can be a child of the control managed by this designer.</summary>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to test.</param>
      <returns>
        <see langword="true" /> if the specified control can be a child of the control managed by this designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.</summary>
      <param name="controlDesigner">The designer for the control to test.</param>
      <returns>
        <see langword="true" /> if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document at the specified location.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from.</param>
      <param name="location">The <see cref="T:System.Drawing.Point" />, in design-time view screen coordinates, at which to center the component.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> indicating the location and size for the component created from the tool. The <see cref="P:System.Drawing.Rectangle.X" /> and <see cref="P:System.Drawing.Rectangle.Y" /> values of the <see cref="T:System.Drawing.Rectangle" /> indicate the design-time view screen coordinates of the upper-left corner of the component.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Provides core functionality for all the <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> methods.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from.</param>
      <param name="x">The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.</param>
      <param name="y">The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.</param>
      <param name="width">The width of the tool. This parameter is ignored if the <paramref name="hasSize" /> parameter is set to <see langword="false" />.</param>
      <param name="height">The height of the tool. This parameter is ignored if the <paramref name="hasSize" /> parameter is set to <see langword="false" />.</param>
      <param name="hasLocation">
        <see langword="true" /> if a location for the component is specified; <see langword="false" /> if the component is to be positioned in the center of the currently selected control.</param>
      <param name="hasSize">
        <see langword="true" /> if a size for the component is specified; <see langword="false" /> if the default height and width values for the component are to be used.</param>
      <returns>An array of components created from the tool.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>Gets the default location for a control added to the designer.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that indicates the default location for a control added to the designer.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, and optionally releases the managed resources.</summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>Gets or sets a value indicating whether a grid should be drawn on the control for this designer.</summary>
      <returns>
        <see langword="true" /> if a grid should be drawn on the control in the designer; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>Gets a value indicating whether drag rectangles are drawn by the designer.</summary>
      <returns>
        <see langword="true" /> if drag rectangles are drawn; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>Gets the control from the designer of the specified component.</summary>
      <param name="component">The component to retrieve the control for.</param>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that the specified component belongs to.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a body glyph that represents the bounds of the control.</summary>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
      <returns>A body glyph that represents the bounds of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</summary>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>Used by deriving classes to determine if it returns the control being designed or some other <see cref="T:System.ComponentModel.Container" /> while adding a component to it.</summary>
      <param name="component">The component for which to retrieve the parent <see cref="T:System.Windows.Forms.Control" />.</param>
      <returns>The parent <see cref="T:System.Windows.Forms.Control" /> for the component.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.</summary>
      <param name="originalRect">A <see cref="T:System.Drawing.Rectangle" /> indicating the initial position of the component being updated.</param>
      <param name="dragRect">A <see cref="T:System.Drawing.Rectangle" /> indicating the new position of the component.</param>
      <param name="updateSize">
        <see langword="true" /> to update the size of the rectangle, if there has been any change; otherwise, <see langword="false" />.</param>
      <returns>A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of each square of the grid drawn on a form or user control.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> is outside the allowed range for <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. The default minimum value is 2, and the default maximum value is 200.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be <see langword="null" /> if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>Creates a tool from the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="toInvoke">The <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> that the tool is to be used with.</param>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a tool from.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>Gets a value indicating whether the designer has a valid tool during a drag operation.</summary>
      <returns>The tool being dragged, if creating a component, or <see langword="null" /> if there is no tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Called in order to clean up a drag-and-drop operation.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop object is dropped onto the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop operation enters the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Called when a drag-and-drop operation leaves the control designer view.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop object is dragged over the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Called in response to the left mouse button being pressed and held while over the component.</summary>
      <param name="x">The x-coordinate of the mouse in screen coordinates.</param>
      <param name="y">The y-coordinate of the mouse in screen coordinates.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Called at the end of a drag-and-drop operation to complete or cancel the operation.</summary>
      <param name="cancel">
        <see langword="true" /> to cancel the drag operation; <see langword="false" /> to commit it.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Called for each movement of the mouse during a drag-and-drop operation.</summary>
      <param name="x">The x-coordinate of the mouse in screen coordinates.</param>
      <param name="y">The y-coordinate of the mouse in screen coordinates.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>Provides an opportunity to change the current mouse cursor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</summary>
      <returns>A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>Base designer class for extending the design mode behavior of a <see cref="T:System.Windows.Forms.Control" /> which should receive scroll messages.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the control.</summary>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</param>
      <returns>
        <see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>Defines identifiers that are used to indicate selection rules for a component.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>Indicates the component supports sizing in all directions.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>Indicates the component supports resize from the bottom.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>Indicates the component supports resize from the left.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>Indicates the component is locked to its container. Overrides the <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" />, and <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> bit flags of this enumeration.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>Indicates the component supports a location property that allows it to be moved on the screen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>Indicates no special selection attributes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>Indicates the component supports resize from the right.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>Indicates the component supports resize from the top.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements <see cref="T:System.ComponentModel.IComponent" /> and that it is associated with a corresponding designer instance.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>Provides an editor for picking shortcut keys.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The <see cref="T:System.Object" /> to edit.</param>
      <returns>The new value of the <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> method.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> method.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>The window and all of its children will have themed scrollbars.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>The window and all of its children will not be themed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>The window will have themed scrollbars but all of its children will not be themed.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>The window handle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Provides access to get and set option values for a Windows Forms designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposed by the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposed by the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Populates a <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">The collection to populate.</param>
    </member>
  </members>
</doc>